{"version":3,"sources":["environment/flavourConfig.tsx","components/Nav/Nav.tsx","components/WasteTable/WasteTable.tsx","environment/envConfig.tsx","core/services/apiService.tsx","components/DotSpinner/DotSpinner.tsx","components/WasteForm/WasteForm.tsx","components/ProgressBar/ProgressBar.tsx","components/Confirmation/Confirmation.tsx","components/BusinessCustomerRoute/BusinessCustomerRoute.tsx","components/CircleSpinner/CircleSpinner.tsx","components/AddressAutocomplete/AddressAutocomplete.tsx","components/CustomerForm/CustomerForm.tsx","components/WelcomePage/WelcomePage.tsx","components/Footer/Footer.tsx","components/Tooltip/Tooltip.tsx","components/NotFound/NotFound.tsx","components/DevLogin/DevLogin.tsx","App.tsx","index.tsx"],"names":["flavourConfig","logo","backgroundImage","primaryColor","primaryColorLight","secondaryColor","secondaryColorLight","inputColor","inputColorHover","inputColorLight","inputColorLightest","Nav","className","src","alt","WasteTable","wasteItemList","handleRemoveWasteItem","length","map","item","index","WasteType","ContainerPackageSize","ContainerPackageSizeType","NumOfContainers","ApproximateAmount","ApproximateAmountType","Description","type","onClick","xmlns","width","height","viewBox","strokeWidth","stroke","fill","strokeLinecap","strokeLinejoin","d","x1","y1","x2","y2","envConfig","requireLogin","apiBaseUrl","keys","getEventsKey","createCustomerKey","createCustomerLinesKey","axios","defaults","baseURL","apiService","getEvents","a","get","headers","params","env","code","response","createCustomer","customer","post","createCustomerLines","data","DotSpinner","color","WasteForm","customerTicketNumber","hasCompletedCustomerPage","updateHasCompletedWastePage","history","useHistory","useState","isLoading","updateIsLoading","createCustomerLinesError","updateCreateCustomerLinesError","wasteItemInitialState","TicketNumber","updateWasteItemList","wasteItem","updateWasteItem","useEffect","window","scrollTo","top","left","behavior","replace","handleSubmit","e","preventDefault","push","handleAmountChanges","value","inputId","id","onSubmit","concat","handleAddItem","htmlFor","name","title","required","onChange","target","disabled","tabIndex","points","parseFloat","form","filter","i","goBack","ProgressBar","progressState","Confirmation","hasCompletedWastePage","location","href","BusinessCustomerRoute","CircleSpinner","AddressAutocomplete","updateCustomer","addressErrorMessage","updateAddressErrorMessage","isValidAddress","updateIsValidAddress","updateLoading","errors","handleSelect","geocodeByAddress","fullAddress","address_components","find","c","types","includes","long_name","CustomerAddress","formatted_address","boxStyle","addressBox","suggestionBoxes","firstBox","onSelect","searchOptions","componentRestrictions","country","getInputProps","suggestions","loading","onKeyDown","key","handleKeyPress","onBlur","data-lpignore","autoComplete","suggestion","style","active","onMouseDown","description","CustomerForm","eventList","updateCustomerTicketNumber","isResidentialCustomer","updateIsResidentialCustomer","hasCompletedWelcomePage","updateHasCompletedCustomerPage","hasTickedPrivacyPolicy","updateHasTickedPrivacyPolicy","createCustomerError","updateCreateCustomerError","residentialCustomerError","updateResidentialCustomerError","status","Event","parseInt","event","eventThresholdError","isDisabled","percentageFull","eventID","eventName","eventTime","eventDate","CustomerName","x","y","rx","CustomerEmail","CustomerPhone","checked","setCustomValidity","onInvalid","rel","WelcomePage","updateEventList","updateHasCompletedWelcomePage","eventListErrorMessage","updateEventListErrorMessage","eventErrors","handleGetEvents","validDateEvents","checkEventDates","checkEventCapacity","events","today","Date","getTime","eventStart","parseDate","startDate","eventEnd","endDate","date","dateParts","split","Footer","Tooltip","showTooltip","updateShowTooltip","pathname","onKeyPress","aria-haspopup","cx","cy","r","role","version","xmlnsXlink","fillRule","transform","getTooltipText","NotFound","DevLogin","updateLogin","username","updateUsername","password","updatePassword","error","updateError","process","placeholder","App","useLocation","toLocaleDateString","year","month","day","isLoggedIn","updateLogIn","updateProgressState","DateCreated","answer","exact","path","ReactDOM","render","StrictMode","basename","document","getElementById"],"mappings":"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","file":"static/js/main.89763fb3.chunk.js","sourcesContent":["const hamilton = {\r\n  logo: \"hamilton-logo.png\",\r\n  backgroundImage: \"hamilton-background\",\r\n  primaryColor: \"hamilton-blue\",\r\n  primaryColorLight: \"hamilton-blue-lighter\",\r\n  secondaryColor: \"hamilton-green\",\r\n  secondaryColorLight: \"hamilton-green-lighter\",\r\n  inputColor: \"gray-600\",\r\n  inputColorHover: \"gray-500\",\r\n  inputColorLight: \"gray-200\",\r\n  inputColorLightest: \"gray-100\",\r\n};\r\n\r\nconst defaultCouncil = {\r\n  logo: \"\",\r\n  backgroundImage: \"hamilton-background\",\r\n  primaryColor: \"indigo-700\",\r\n  primaryColorLight: \"indigo-600\",\r\n  secondaryColor: \"hamilton-green\",\r\n  secondaryColorLight: \"hamilton-green-lighter\",\r\n  inputColor: \"indigo-700\",\r\n  inputColorHover: \"indigo-600\",\r\n  inputColorLight: \"indigo-200\",\r\n  inputColorLightest: \"indigo-100\",\r\n};\r\n\r\nconst flavourConfig = process.env.REACT_APP_FLAVOUR === \"hamilton\" ? hamilton : defaultCouncil;\r\n\r\nexport default flavourConfig;\r\n","import React from \"react\";\r\nimport flavourConfig from \"../../environment/flavourConfig\";\r\nimport \"../../styles/styles.css\";\r\n\r\nconst Nav: React.FC = () => {\r\n  return (\r\n    <div className=\"fixed top-0 border-b border-gray-300 background-white-ie-fix z-50 py-4 w-full shadow-sm\">\r\n      <div className=\"mx-auto w-11/12 lg:10/12 xl:9/12 2xl:w-8/12 flex flex-row items-center justify-center lg:justify-start\">\r\n        <img src={flavourConfig.logo} alt=\"\" className=\"h-16 lg:h-18 xl:h-20\" />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Nav;\r\n","import React from \"react\";\r\nimport { IWasteTable, WasteItem } from \"../../core/types/types\";\r\nimport flavourConfig from \"../../environment/flavourConfig\";\r\n\r\nconst WasteTable: React.FC<IWasteTable> = ({\r\n  wasteItemList,\r\n  handleRemoveWasteItem,\r\n}: IWasteTable) => {\r\n  const renderList = (item: WasteItem, index: number) => {\r\n    return (\r\n      <tr key={index} className=\"h-24 border-gray-300 border-b\">\r\n        <td className=\"pl-6 pr-6\">\r\n          <table>\r\n            <tbody className=\"text-left body-input-font\">\r\n              <tr className=\"flex justify-start items-center h-full\">\r\n                <td\r\n                  className={`rounded-full whitespace-nowrap body-input-font leading-4 py-2 px-5 bg-${flavourConfig.inputColorLight} text-${flavourConfig.inputColor}`}\r\n                >\r\n                  {item.WasteType}\r\n                </td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n        </td>\r\n        <td className=\"pr-6 body-input-font text-left leading-4\">{`${item.ContainerPackageSize} ${item.ContainerPackageSizeType}`}</td>\r\n        <td className=\"pr-6 body-input-font text-left leading-4\">{item.NumOfContainers}</td>\r\n        <td className=\"pr-6 body-input-font text-left leading-4\">{`${item.ApproximateAmount} ${item.ApproximateAmountType}`}</td>\r\n        <td className=\"pr-6 body-input-font text-left leading-4\">{item.Description}</td>\r\n        <td className=\"pr-6 body-input-font text-left leading-4\">\r\n          <div className=\"flex items-center\">\r\n            <button\r\n              type=\"button\"\r\n              className=\"rounded border border-transparent focus:outline-none focus:border-gray-800 focus:shadow-outline-gray\"\r\n              onClick={() => handleRemoveWasteItem(index)}\r\n            >\r\n              <div className=\"p-2 bg-gray-100 hover:bg-gray-200 rounded cursor-pointer text-red-500\">\r\n                <svg\r\n                  xmlns=\"http://www.w3.org/2000/svg\"\r\n                  className=\"icon icon-tabler icon-tabler-trash\"\r\n                  width={20}\r\n                  height={20}\r\n                  viewBox=\"0 0 24 24\"\r\n                  strokeWidth=\"1.5\"\r\n                  stroke=\"currentColor\"\r\n                  fill=\"none\"\r\n                  strokeLinecap=\"round\"\r\n                  strokeLinejoin=\"round\"\r\n                >\r\n                  <path stroke=\"none\" d=\"M0 0h24v24H0z\" />\r\n                  <line x1={4} y1={7} x2={20} y2={7} />\r\n                  <line x1={10} y1={11} x2={10} y2={17} />\r\n                  <line x1={14} y1={11} x2={14} y2={17} />\r\n                  <path d=\"M5 7l1 12a2 2 0 0 0 2 2h8a2 2 0 0 0 2 -2l1 -12\" />\r\n                  <path d=\"M9 7v-3a1 1 0 0 1 1 -1h4a1 1 0 0 1 1 1v3\" />\r\n                </svg>\r\n              </div>\r\n            </button>\r\n          </div>\r\n        </td>\r\n      </tr>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"mb-4 w-full\">\r\n      <div className=\"mx-auto container background-white-ie-fix border-gray-300 shadow \">\r\n        <div className=\"w-full overflow-x-auto\">\r\n          <table className=\"min-w-full background-white-ie-fix\">\r\n            <thead>\r\n              <tr\r\n                className={`w-full h-16 border-gray-300 border-b py-8 bg-${flavourConfig.inputColorLightest}`}\r\n              >\r\n                <th className=\"pl-6 pr-6 whitespace-nowrap text-left w-1/5 body-font\">\r\n                  Waste type\r\n                </th>\r\n                <th className=\"pr-6 whitespace-nowrap text-left w-1/5 body-font\">Container size</th>\r\n                <th className=\"pr-6 whitespace-nowrap text-left w-1/5 body-font\">\r\n                  No. of containers\r\n                </th>\r\n                <th className=\"pr-6 whitespace-nowrap text-left w-1/5 body-font\">\r\n                  Approximate amount\r\n                </th>\r\n                <th className=\"pr-6 whitespace-nowrap text-left w-1/5 body-font\">Description</th>\r\n                <th className=\"pr-6 whitespace-nowrap text-left w-1/5 body-font\"></th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {wasteItemList && wasteItemList?.length > 0 && wasteItemList.map(renderList)}\r\n            </tbody>\r\n          </table>\r\n          {wasteItemList && wasteItemList?.length === 0 && (\r\n            <p className=\"body-input-font pl-6 py-4\">Use the form above to add your items...</p>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WasteTable;\r\n","const local = {\r\n  requireLogin: false,\r\n  apiBaseUrl: \"http://localhost:7071/\",\r\n  keys: {\r\n    getEventsKey: \"\",\r\n    createCustomerKey: \"\",\r\n    createCustomerLinesKey: \"\",\r\n  },\r\n};\r\n\r\nconst dev = {\r\n  requireLogin: true,\r\n  apiBaseUrl: \"https://environz-api-dev.azurewebsites.net/API/\",\r\n  keys: {\r\n    getEventsKey: \"bO3ppF90cx6HCLd/ziQKUaubZg339OvyiEjS6pBaHwEIRfMMTjlVSw==\",\r\n    createCustomerKey: \"jwZX1VrPhhg5Be9A1E43kUCprfLn/p6FI6fbOIwc2gWYRdX72bKxDw==\",\r\n    createCustomerLinesKey: \"TQ6OXaFEz9d0fHqXrGqPQGsirVM5EwBr5zndaz6AuryWn/ouRYgGsA==\",\r\n  },\r\n};\r\n\r\nconst prod = {\r\n  requireLogin: false,\r\n  apiBaseUrl: \"https://environz-api.azurewebsites.net/API/\",\r\n  keys: {\r\n    getEventsKey: \"AadB7wp9HMM5RJiLZHOjFwWq/y87N6NftKkZ2ogt8UXnpswdBUpn2g==\",\r\n    createCustomerKey: \"joFysf0clWknfl1qTY9KREakvFLIqteWFAUdMf8oGUxqlpSUIipCqg==\",\r\n    createCustomerLinesKey: \"FF14lxUVbyBd/PmP1NpdQGAbIqTAzwB7JthtfO3fCXtZxGJOxJ7gDg==\",\r\n  },\r\n};\r\n\r\nconst envConfig =\r\n  process.env.REACT_APP_ENVIRONMENT === \"prod\"\r\n    ? prod\r\n    : process.env.REACT_APP_ENVIRONMENT === \"local\"\r\n    ? local\r\n    : dev;\r\n\r\nexport default envConfig;\r\n","import axios from \"axios\";\r\nimport envConfig from \"../../environment/envConfig\";\r\nimport { Customer, WasteItem } from \"../types/types\";\r\n\r\naxios.defaults.baseURL = envConfig.apiBaseUrl;\r\n\r\nconst getEvents = async () => {\r\n  try {\r\n    const response = await axios.get(\"chemwaste/getEvents\", {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      params:\r\n        process.env.REACT_APP_ENVIRONMENT === \"prod\"\r\n          ? { env: \"prod\", code: envConfig.keys.getEventsKey }\r\n          : { env: \"dev\", code: envConfig.keys.getEventsKey },\r\n    });\r\n    return response;\r\n  } catch (error) {\r\n    return error;\r\n  }\r\n};\r\n\r\nconst createCustomer = async (customer: Customer) => {\r\n  try {\r\n    const response = await axios.post(\"chemwaste/createCustomer\", customer, {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        \"x-functions-key\": envConfig.keys.createCustomerKey,\r\n      },\r\n      params: process.env.REACT_APP_ENVIRONMENT === \"prod\" ? { env: \"prod\" } : { env: \"dev\" },\r\n    });\r\n    return response;\r\n  } catch (error) {\r\n    return error;\r\n  }\r\n};\r\n\r\nconst createCustomerLines = async (wasteItemList: WasteItem[]) => {\r\n  try {\r\n    const response = await axios.post(\"chemwaste/createCustomerLines\", wasteItemList, {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        \"x-functions-key\": envConfig.keys.createCustomerLinesKey,\r\n      },\r\n      params: process.env.REACT_APP_ENVIRONMENT === \"prod\" ? { env: \"prod\" } : { env: \"dev\" },\r\n    });\r\n    return response.data;\r\n  } catch (error) {\r\n    return error;\r\n  }\r\n};\r\n\r\nexport const apiService = {\r\n  getEvents,\r\n  createCustomer,\r\n  createCustomerLines,\r\n};\r\n","import \"./DotSpinner.css\";\r\n\r\ninterface DotSpinnerProps {\r\n  color?: string;\r\n}\r\n\r\nconst DotSpinner: React.FC<DotSpinnerProps> = ({ color = \"bg-black-primary\" }: DotSpinnerProps) => {\r\n  return (\r\n    <div className={`w-full flex flex-row items-center justify-center`}>\r\n      <div className=\"spinner flex flex-row items-center justify-center\">\r\n        <div className={`${color} bounce1`}></div>\r\n        <div className={`${color} bounce2`}></div>\r\n        <div className={`${color} bounce3`}></div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DotSpinner;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport WasteTable from \"../WasteTable/WasteTable\";\r\nimport { IWasteForm, WasteItem } from \"../../core/types/types\";\r\nimport { apiService } from \"../../core/services/apiService\";\r\nimport DotSpinner from \"../DotSpinner/DotSpinner\";\r\nimport flavourConfig from \"../../environment/flavourConfig\";\r\n\r\nconst WasteForm: React.FC<IWasteForm> = ({\r\n  customerTicketNumber,\r\n  hasCompletedCustomerPage,\r\n  updateHasCompletedWastePage,\r\n}: IWasteForm) => {\r\n  const history = useHistory();\r\n  const [isLoading, updateIsLoading] = useState<boolean>(false);\r\n  const [createCustomerLinesError, updateCreateCustomerLinesError] = useState<string | null>(null);\r\n\r\n  const wasteItemInitialState: WasteItem = {\r\n    TicketNumber: customerTicketNumber,\r\n    WasteType: \"\",\r\n    Description: \"\",\r\n    ContainerPackageSize: null,\r\n    ContainerPackageSizeType: \"KG\",\r\n    NumOfContainers: null,\r\n    ApproximateAmount: null,\r\n    ApproximateAmountType: \"KG\",\r\n  };\r\n\r\n  // State for the waste item table\r\n  const [wasteItemList, updateWasteItemList] = useState<WasteItem[]>([]);\r\n\r\n  // state for the waste item form\r\n  const [wasteItem, updateWasteItem] = useState<WasteItem>(wasteItemInitialState);\r\n\r\n  // Scroll to top when component first mounts\r\n  useEffect(() => {\r\n    window.scrollTo({ top: 0, left: 0, behavior: \"smooth\" });\r\n  }, []);\r\n\r\n  // Prevent navigation to page unless correct path was taken\r\n  useEffect(() => {\r\n    if (!hasCompletedCustomerPage) {\r\n      history.replace(\"/\");\r\n    }\r\n  }, [history, hasCompletedCustomerPage]);\r\n\r\n  // Add items to the waste item table\r\n  const handleAddItem = (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    updateCreateCustomerLinesError(null);\r\n    updateWasteItemList(wasteItemList.concat(wasteItem));\r\n    updateWasteItem(wasteItemInitialState);\r\n  };\r\n\r\n  // Remove items from the waste item table\r\n  const handleRemoveWasteItem = (index: number) => {\r\n    updateWasteItemList(wasteItemList.filter((item, i) => i !== index));\r\n  };\r\n\r\n  // Submit the entire form for DB consumption\r\n  const handleSubmit = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    updateIsLoading(true);\r\n    updateCreateCustomerLinesError(null);\r\n    const response = await apiService.createCustomerLines(wasteItemList);\r\n\r\n    if (response === \"Success\") {\r\n      updateIsLoading(false);\r\n      updateHasCompletedWastePage(true);\r\n      history.push(\"/confirmation\");\r\n      return;\r\n    }\r\n\r\n    updateIsLoading(false);\r\n    updateCreateCustomerLinesError(\r\n      \"We were unable to make this request. Please try again later or contact us on 0800 246 978.\"\r\n    );\r\n  };\r\n\r\n  // Handles onChange methods for containerSize, noOfContainers and approxAmount, also calculates approxAmount if valid.\r\n  const handleAmountChanges = (value: number, inputId: string) => {\r\n    switch (inputId) {\r\n      case \"containerSize\":\r\n        if (wasteItem.NumOfContainers) {\r\n          updateWasteItem({\r\n            ...wasteItem,\r\n            ContainerPackageSize: value,\r\n            ApproximateAmount: value * wasteItem.NumOfContainers,\r\n          });\r\n        } else {\r\n          updateWasteItem({ ...wasteItem, ContainerPackageSize: value });\r\n        }\r\n        break;\r\n      case \"noOfContainers\":\r\n        if (wasteItem.ContainerPackageSize) {\r\n          updateWasteItem({\r\n            ...wasteItem,\r\n            NumOfContainers: value,\r\n            ApproximateAmount: value * wasteItem.ContainerPackageSize,\r\n          });\r\n        } else {\r\n          updateWasteItem({ ...wasteItem, NumOfContainers: value });\r\n        }\r\n        break;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"w-10/12 mx-auto mt-12 xl:mt-20\">\r\n        <form className=\"\" id=\"waste-form\" onSubmit={(e) => handleAddItem(e)}>\r\n          <div className=\"mb-10 xl:w-full\">\r\n            <h1 className=\"body-heading-font\">Add Your Items</h1>\r\n            <p className=\"body-subheading-font mt-2\">\r\n              Add the items you intend to bring to the household hazardous waste disposal event.\r\n            </p>\r\n            <div className=\"mt-10 mb-3 grid sm:grid-cols-9 gap-x-3 xl:gap-x-4 gap-y-2\">\r\n              <div className=\"flex flex-col col-span-full lg:col-span-3\">\r\n                <label htmlFor=\"event\" className=\"pb-1 form-subheading-font\">\r\n                  Waste type<span className=\"text-red-600\">*</span>\r\n                </label>\r\n                <div className=\"border border-gray-300 shadow-sm rounded flex relative lg:mr-5\">\r\n                  <select\r\n                    id=\"wasteType\"\r\n                    name=\"wasteType\"\r\n                    title=\"Select the type of your waste item.\"\r\n                    required\r\n                    value={wasteItem.WasteType}\r\n                    className={`body-input-font background-white-ie-fix appearance-none z-10 pl-3 py-3 w-full border border-transparent focus:outline-none focus:border-${flavourConfig.inputColor} rounded`}\r\n                    onChange={(e: React.ChangeEvent<HTMLSelectElement>) =>\r\n                      updateWasteItem({ ...wasteItem, WasteType: e.target.value })\r\n                    }\r\n                  >\r\n                    <option disabled value=\"\"></option>\r\n                    <option value=\"Water-based paint\">Water-based paint</option>\r\n                    <option value=\"Solvent-based paint\">Solvent-based paint</option>\r\n                    <option value=\"Solvents\">Solvents</option>\r\n                    <option value=\"Oils & automotive\">Oils & automotive</option>\r\n                    <option value=\"Household chemicals\">Household chemicals</option>\r\n                    <option value=\"Aerosols\">Aerosols</option>\r\n                    <option value=\"Lithium batteries\">Lithium batteries</option>\r\n                    <option value=\"NiCd batteries\">NiCd batteries</option>\r\n                    <option value=\"NiMh batteries\">NiMh batteries</option>\r\n                    <option value=\"Lead acid batteries\">Lead acid batteries</option>\r\n                    <option value=\"Fluorescent lights\">Fluorescent lights</option>\r\n                  </select>\r\n                  <div className=\"w-16 flex flex-col justify-center items-center border-l border-gray-300 text-gray-500 absolute right-0 bottom-0 top-0 mx-auto z-20 pointer-events-none\">\r\n                    <svg\r\n                      tabIndex={-1}\r\n                      xmlns=\"http://www.w3.org/2000/svg\"\r\n                      className=\"icon icon-tabler icon-tabler-chevron-up\"\r\n                      width={16}\r\n                      height={16}\r\n                      viewBox=\"0 0 24 24\"\r\n                      strokeWidth=\"1.5\"\r\n                      stroke=\"currentColor\"\r\n                      fill=\"none\"\r\n                      strokeLinecap=\"round\"\r\n                      strokeLinejoin=\"round\"\r\n                    >\r\n                      <path stroke=\"none\" d=\"M0 0h24v24H0z\" />\r\n                      <polyline points=\"6 15 12 9 18 15\" />\r\n                    </svg>\r\n                    <svg\r\n                      tabIndex={-1}\r\n                      xmlns=\"http://www.w3.org/2000/svg\"\r\n                      className=\"icon icon-tabler icon-tabler-chevron-down\"\r\n                      width={16}\r\n                      height={16}\r\n                      viewBox=\"0 0 24 24\"\r\n                      strokeWidth=\"1.5\"\r\n                      stroke=\"currentColor\"\r\n                      fill=\"none\"\r\n                      strokeLinecap=\"round\"\r\n                      strokeLinejoin=\"round\"\r\n                    >\r\n                      <path stroke=\"none\" d=\"M0 0h24v24H0z\" />\r\n                      <polyline points=\"6 9 12 15 18 9\" />\r\n                    </svg>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"flex flex-col items-start sm:col-span-3 lg:col-span-2\">\r\n                <label htmlFor=\"event\" className=\"pb-1 form-subheading-font\">\r\n                  Container size<span className=\"text-red-600\">*</span>\r\n                </label>\r\n                <div className=\"flex flex-row items-center w-full\">\r\n                  <div className=\"relative w-full sm:mr-4\">\r\n                    <div className=\"w-16 absolute body-input-font text-gray-600 flex items-center border-l right-0 h-full\">\r\n                      <select\r\n                        className=\"w-full h-full pl-2.5 uppercase text-sm leading-tight tracking-normal appearance-none z-20 relative bg-transparent\"\r\n                        value={wasteItem.ContainerPackageSizeType}\r\n                        tabIndex={0}\r\n                        onChange={(e) =>\r\n                          updateWasteItem({\r\n                            ...wasteItem,\r\n                            ContainerPackageSizeType: e.target.value,\r\n                            ApproximateAmountType: e.target.value,\r\n                          })\r\n                        }\r\n                      >\r\n                        <option value=\"KG\">KG</option>\r\n                        <option value=\"L\">L</option>\r\n                      </select>\r\n                      <div className=\"pr-2.5 absolute -right-0 z-10 text-gray-500\">\r\n                        <svg\r\n                          xmlns=\"http://www.w3.org/2000/svg\"\r\n                          className=\"icon icon-tabler icon-tabler-chevron-down\"\r\n                          width={20}\r\n                          height={20}\r\n                          viewBox=\"0 0 24 24\"\r\n                          strokeWidth=\"1.5\"\r\n                          stroke=\"currentColor\"\r\n                          fill=\"none\"\r\n                          strokeLinecap=\"round\"\r\n                          strokeLinejoin=\"round\"\r\n                        >\r\n                          <path stroke=\"none\" d=\"M0 0h24v24H0z\" />\r\n                          <polyline points=\"6 9 12 15 18 9\" />\r\n                        </svg>\r\n                      </div>\r\n                    </div>\r\n                    <input\r\n                      id=\"containerSize\"\r\n                      type=\"number\"\r\n                      title=\"Add the container/package size of your waste item.\"\r\n                      required\r\n                      className={`w-full body-input-font pr-16 overflow-ellipsis whitespace-nowrap overflow-x-hidden focus:outline-none focus:border focus:border-${flavourConfig.inputColor} background-white-ie-fix flex items-center pl-3 py-3 border-gray-300 rounded border shadow-sm`}\r\n                      value={\r\n                        !wasteItem.ContainerPackageSize && wasteItem.ContainerPackageSize !== 0\r\n                          ? \"\"\r\n                          : wasteItem.ContainerPackageSize\r\n                      }\r\n                      onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\r\n                        handleAmountChanges(parseFloat(e.target.value), e.target.id)\r\n                      }\r\n                    />\r\n                  </div>\r\n                  <p className=\"body-input-font text-lg hidden sm:block\">x</p>\r\n                </div>\r\n              </div>\r\n              <div className=\"flex flex-col items-start sm:col-span-3 lg:col-span-2\">\r\n                <label htmlFor=\"event\" className=\"pb-1 form-subheading-font\">\r\n                  No. of containers<span className=\"text-red-600\">*</span>\r\n                </label>\r\n                <div className=\"flex flex-row items-center w-full\">\r\n                  <input\r\n                    type=\"number\"\r\n                    id=\"noOfContainers\"\r\n                    name=\"noOfContainers\"\r\n                    title=\"Add the number of containers/packages that you have of this waste item.\"\r\n                    required\r\n                    className={`w-full sm:mr-4 body-input-font border border-gray-300 pl-3 py-3 shadow-sm rounded focus:outline-none bg-transparent focus:border-${flavourConfig.inputColor}`}\r\n                    value={\r\n                      !wasteItem.NumOfContainers && wasteItem.NumOfContainers !== 0\r\n                        ? \"\"\r\n                        : wasteItem.NumOfContainers\r\n                    }\r\n                    onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\r\n                      handleAmountChanges(parseFloat(e.target.value), e.target.id)\r\n                    }\r\n                  />\r\n                  <p className=\"body-input-font hidden sm:block text-xl\">{\"\\u2248\"}</p>\r\n                </div>\r\n              </div>\r\n              <div className=\"flex flex-col sm:col-span-3 lg:col-span-2\">\r\n                <label htmlFor=\"event\" className=\"pb-1 form-subheading-font\">\r\n                  Approx. total amount<span className=\"text-red-600\">*</span>\r\n                </label>\r\n                <div className=\"relative\">\r\n                  <div className=\"w-16 absolute body-input-font text-gray-600 flex items-center border-l right-0 h-full\">\r\n                    <select\r\n                      className=\"pl-2.5 h-full w-full uppercase text-sm leading-tight tracking-normal appearance-none z-20 relative bg-transparent\"\r\n                      value={wasteItem.ApproximateAmountType}\r\n                      onChange={(e) =>\r\n                        updateWasteItem({\r\n                          ...wasteItem,\r\n                          ApproximateAmountType: e.target.value,\r\n                          ContainerPackageSizeType: e.target.value,\r\n                        })\r\n                      }\r\n                    >\r\n                      <option value=\"KG\">KG</option>\r\n                      <option value=\"L\">L</option>\r\n                    </select>\r\n                    <div className=\"pr-2.5 absolute right-0 z-10 text-gray-500\">\r\n                      <svg\r\n                        xmlns=\"http://www.w3.org/2000/svg\"\r\n                        className=\"icon icon-tabler icon-tabler-chevron-down\"\r\n                        width={20}\r\n                        height={20}\r\n                        viewBox=\"0 0 24 24\"\r\n                        strokeWidth=\"1.5\"\r\n                        stroke=\"currentColor\"\r\n                        fill=\"none\"\r\n                        strokeLinecap=\"round\"\r\n                        strokeLinejoin=\"round\"\r\n                      >\r\n                        <path stroke=\"none\" d=\"M0 0h24v24H0z\" />\r\n                        <polyline points=\"6 9 12 15 18 9\" />\r\n                      </svg>\r\n                    </div>\r\n                  </div>\r\n                  <input\r\n                    id=\"approximateAmount\"\r\n                    type=\"number\"\r\n                    title=\"Add the approximate total amount that you have of this waste item.\"\r\n                    required\r\n                    className={`w-full body-input-font pr-16 overflow-ellipsis whitespace-nowrap overflow-x-hidden focus:outline-none focus:border focus:border-${flavourConfig.inputColor} background-white-ie-fix flex items-center pl-3 py-3 border-gray-300 rounded border shadow-sm`}\r\n                    value={\r\n                      !wasteItem.ApproximateAmount && wasteItem.ApproximateAmount !== 0\r\n                        ? \"\"\r\n                        : wasteItem.ApproximateAmount\r\n                    }\r\n                    onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\r\n                      updateWasteItem({\r\n                        ...wasteItem,\r\n                        ApproximateAmount: parseFloat(e.target.value),\r\n                      })\r\n                    }\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div className=\"flex flex-col col-span-full\">\r\n                <label htmlFor=\"event\" className=\"pb-1 form-subheading-font\">\r\n                  Description<span className=\"text-red-600\">*</span>\r\n                </label>\r\n                <div className=\"relative\">\r\n                  <input\r\n                    id=\"Description\"\r\n                    name=\"Description\"\r\n                    title=\"Add a short description of your waste item.\"\r\n                    required\r\n                    className={`w-full body-input-font bg-transparent focus:outline-none focus:border focus:border-${flavourConfig.inputColor} font-normal py-3 flex items-center pl-3 rounded border border-gray-300 shadow-sm`}\r\n                    value={wasteItem.Description}\r\n                    onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\r\n                      updateWasteItem({ ...wasteItem, Description: e.target.value })\r\n                    }\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"flex justify-end\">\r\n              <button\r\n                type=\"submit\"\r\n                form=\"waste-form\"\r\n                className={`py-2 w-24 xl:w-28 bg-${flavourConfig.primaryColor} transition duration-150 ease-in-out hover:bg-${flavourConfig.primaryColorLight} rounded text-white focus:bg-${flavourConfig.primaryColorLight} focus:outline-none border focus:border-${flavourConfig.inputColor}`}\r\n              >\r\n                Add Item\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </form>\r\n        {wasteItemList && (\r\n          <WasteTable wasteItemList={wasteItemList} handleRemoveWasteItem={handleRemoveWasteItem} />\r\n        )}\r\n        {createCustomerLinesError && (\r\n          <div className=\"w-11/12 mx-auto py-0 xl:py-4 mb-8\">\r\n            <p className=\"w-full text-center mt-2 body-error\">{createCustomerLinesError}</p>\r\n          </div>\r\n        )}\r\n      </div>\r\n      <div className=\"w-full mt-12 bg-gray-100 rounded-b-lg border-t border-gray-200\">\r\n        <div className=\"w-10/12 mx-auto py-4 flex justify-between\">\r\n          <button\r\n            type=\"button\"\r\n            className={`focus:outline-none w-24 xl:w-28 btn focus:border-${flavourConfig.primaryColor} text-gray-600  border border-gray-300 py-2 mr-4 rounded hover:bg-gray-200 transition duration-150 ease-in-out`}\r\n            onClick={() => history.goBack()}\r\n          >\r\n            Back\r\n          </button>\r\n          <button\r\n            type=\"button\"\r\n            className={`w-24 xl:w-28 bg-${flavourConfig.secondaryColor} transition duration-150 ease-in-out hover:bg-${flavourConfig.secondaryColorLight} rounded text-white focus:bg-${flavourConfig.secondaryColorLight} focus:outline-none border focus:border-${flavourConfig.inputColor}`}\r\n            onClick={(e: React.SyntheticEvent) => {\r\n              if (!wasteItemList.length) {\r\n                updateCreateCustomerLinesError(\"You haven't added any waste items yet.\");\r\n                return;\r\n              }\r\n              handleSubmit(e);\r\n            }}\r\n          >\r\n            {isLoading ? <DotSpinner color=\"background-white-ie-fix\" /> : \"Submit\"}\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WasteForm;\r\n","import React from \"react\";\r\nimport { IProgressBar } from \"../../core/types/types\";\r\nimport flavourConfig from \"../../environment/flavourConfig\";\r\n\r\nconst ProgressBar: React.FC<IProgressBar> = ({ progressState }: IProgressBar) => {\r\n  return (\r\n    <div className=\"w-9/12 lg:w-3/6 mx-auto\">\r\n      <div className=\"bg-gray-400 h-1 flex items-center justify-between\">\r\n        {/* LINE 0 - 1 */}\r\n        <div\r\n          className={`${\r\n            progressState > 0 && \"bg-\" + flavourConfig.primaryColor\r\n          } w-1/3 h-1 flex items-center relative`}\r\n        >\r\n          {/* TOOL TIP 0 */}\r\n          <div className=\"hidden sm:block absolute -left-8 xl:-left-9\">\r\n            <div className=\"relative mt-16 -mr-12\">\r\n              <p\r\n                className={`${\r\n                  progressState >= 0 ? \"text-\" + flavourConfig.primaryColor : \"text-gray-400\"\r\n                } progress-bar-font`}\r\n              >\r\n                Get Started\r\n              </p>\r\n            </div>\r\n          </div>\r\n\r\n          {/* DOT 0 */}\r\n          <div className=\"bg-gray-400 h-7 w-7 rounded-full z-10 shadow flex items-center justify-center relative\">\r\n            <div\r\n              className={`h-7 w-7 bg-${flavourConfig.primaryColor} rounded-full shadow flex items-center justify-center`}\r\n            >\r\n              <p className=\"text-white font-bold\">1</p>\r\n            </div>\r\n          </div>\r\n          {/* TOOL TIP 1 */}\r\n          <div className=\"hidden sm:block absolute -right-11 xl:-right-14\">\r\n            <div className=\"relative mt-16 -mr-4\">\r\n              <p\r\n                className={`${\r\n                  progressState >= 1 ? \"text-\" + flavourConfig.primaryColor : \"text-gray-400\"\r\n                } progress-bar-font`}\r\n              >\r\n                Enter Your Details\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {/*  LINE 1-2 */}\r\n        <div\r\n          className={`${\r\n            progressState > 1 && \"bg-\" + flavourConfig.primaryColor\r\n          } w-1/3 flex justify-between h-1 items-center relative`}\r\n        >\r\n          {/* DOT 1 */}\r\n          <div className=\"bg-gray-400 h-7 w-7 rounded-full z-10 shadow flex items-center justify-center relative -ml-1\">\r\n            <div\r\n              className={`${progressState >= 1 ? \"h-7 w-7\" : \"h-0 w-0\"} bg-${\r\n                flavourConfig.primaryColor\r\n              } rounded-full shadow flex items-center justify-center`}\r\n            >\r\n              <p className=\"text-white font-bold\">2</p>\r\n            </div>\r\n          </div>\r\n          {/* TOOL TIP 2 */}\r\n          <div className=\"hidden sm:block absolute -right-9 xl:-right-12 -mr-0.5\">\r\n            <div className=\"relative mt-16 -mr-4\">\r\n              <p\r\n                className={`${\r\n                  progressState >= 2 ? \"text-\" + flavourConfig.primaryColor : \"text-gray-400\"\r\n                } progress-bar-font`}\r\n              >\r\n                Add Your Items\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {/* DOT 2 */}\r\n        <div className=\"bg-gray-400 h-7 w-7 rounded-full z-10 shadow flex items-center justify-center -mr-1 relative\">\r\n          <div\r\n            className={`${progressState >= 2 ? \"h-7 w-7\" : \"h-0 w-0\"} bg-${\r\n              flavourConfig.primaryColor\r\n            } rounded-full shadow flex items-center justify-center absolute`}\r\n          >\r\n            <p className=\"text-white font-bold\">3</p>\r\n          </div>\r\n        </div>\r\n        {/* LINE 2 - 3 */}\r\n        <div\r\n          className={`${\r\n            progressState > 2 && \"bg-\" + flavourConfig.primaryColor\r\n          } w-1/3 flex justify-end h-1 items-center relative`}\r\n        >\r\n          {/* DOT 3 */}\r\n          <div className=\"bg-gray-400 h-7 w-7 rounded-full shadow flex items-center justify-center relative -mr-1\">\r\n            <div\r\n              className={`${progressState >= 3 ? \"h-7 w-7\" : \"h-0 w-0\"} bg-${\r\n                flavourConfig.primaryColor\r\n              } rounded-full flex items-center justify-center absolute`}\r\n            >\r\n              <p className=\"text-white font-bold\">4</p>\r\n            </div>\r\n          </div>\r\n          {/* TOOL TIP 3 */}\r\n          <div className=\"hidden sm:block absolute right-2 xl:right-0.5\">\r\n            <div className=\"relative mt-16 -mr-10\">\r\n              <p\r\n                className={`${\r\n                  progressState >= 3 ? \"text-\" + flavourConfig.primaryColor : \"text-gray-400\"\r\n                } progress-bar-font`}\r\n              >\r\n                Confirmation\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProgressBar;\r\n","import React, { useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { IConfirmationPage } from \"../../core/types/types\";\r\nimport flavourConfig from \"../../environment/flavourConfig\";\r\nimport \"../../styles/styles.css\";\r\n\r\nconst Confirmation: React.FC<IConfirmationPage> = ({\r\n  hasCompletedWastePage,\r\n  customerTicketNumber,\r\n}: IConfirmationPage) => {\r\n  const history = useHistory();\r\n\r\n  // Scroll to top when component first mounts\r\n  useEffect(() => {\r\n    window.scrollTo({ top: 0, left: 0, behavior: \"smooth\" });\r\n  }, []);\r\n\r\n  // Prevent navigation to page unless correct path was taken\r\n  useEffect(() => {\r\n    if (!hasCompletedWastePage) {\r\n      history.replace(\"/\");\r\n    }\r\n  }, [history, hasCompletedWastePage]);\r\n\r\n  return (\r\n    <div className=\"flex flex-col items-center sm:items-end text-center sm:text-right py-8 pr-6 pl-8 xl:py-20 xl:pr-28 xl:pl-52 2xl:pl-72\">\r\n      <h1 className=\"main-heading-font\">You're all sorted!</h1>\r\n      <p className={`main-subheading-font mt-6 xl:mt-8 font-bold`}>\r\n        {`Your ticket number is #${customerTicketNumber}`}\r\n      </p>\r\n      <p className=\"main-subheading-font mt-3 xl:mt-4\">\r\n        We've sent you a confirmation email with your ticket number, event information and details\r\n        of your hazardous waste. We'll let you know where the event is taking place at a date closer\r\n        to the event. Please hold on to the confirmation email as you'll need to provide the ticket\r\n        number on the day. If you can't find your confirmation email, please check your junk mail\r\n        folder or contact us.\r\n      </p>\r\n      <button\r\n        type=\"button\"\r\n        className={`w-44 lg:w-60 h-14 xl:h-16 mt-6 xl:mt-8 main-subheading-font bg-${flavourConfig.secondaryColor} transition duration-150 ease-in-out hover:bg-${flavourConfig.secondaryColorLight} rounded text-white focus:outline-none border focus:border-${flavourConfig.inputColor} focus:bg-${flavourConfig.secondaryColorLight}`}\r\n        onClick={() => {\r\n          window.location.href = \"/\";\r\n        }}\r\n      >\r\n        Book Another Event\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Confirmation;\r\n","const BusinessCustomerRoute: React.FC = () => {\r\n  return (\r\n    <div className=\"pt-4 pb-4 xl:pt-5 x:pb-10 mx-auto w-full xl:w-8/12 h-full flex flex-col items-start xl:items-center\">\r\n      <h1 className=\"body-heading-font text-left xl:text-center\">\r\n        Residential Household Waste Only\r\n      </h1>\r\n      <p className=\"mt-4 body-subheading-font text-left xl:text-center\">\r\n        This event is funded by the Hamilton City Council and the Waikato Regional Council. It is\r\n        open to local households to dispose of their hazardous waste. Businesses are expected to use\r\n        a paid option.\r\n      </p>\r\n      <p className=\"w-full mt-4 body-subheading-font text-left xl:text-center\">\r\n        You can contact <span className=\"chem-style\">Chem</span>\r\n        <span className=\"waste-style\">Waste</span> to get a quote:\r\n      </p>\r\n      <p className=\"mt-4 w-full body-subheading-font text-center\">\r\n        <a href=\"mailto:CWAk@envirowaste.co.nz\" className=\"underline\">\r\n          CWAk@envirowaste.co.nz\r\n        </a>\r\n        <br />\r\n        <a href=\"tel:800 246 978\" className=\"underline\">\r\n          0800 246 978\r\n        </a>\r\n\r\n        <br />\r\n        <a href=\"tel:09 634 6198\" className=\"underline\">\r\n          09 634 6198\r\n        </a>\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BusinessCustomerRoute;\r\n","import React from \"react\";\r\nimport \"./CircleSpinner.css\";\r\n\r\nconst CircleSpinner: React.FC = () => {\r\n  return (\r\n    <div className=\"h-full background-white-ie-fix\">\r\n      <div className=\"lds-ring flex flex-col items-center justify-center h-full\">\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CircleSpinner;\r\n","import React, { useState } from \"react\";\r\nimport PlacesAutocomplete, { geocodeByAddress } from \"react-places-autocomplete\";\r\nimport CircleSpinner from \"../CircleSpinner/CircleSpinner\";\r\nimport { IAddressAutocomplete } from \"../../core/types/types\";\r\nimport flavourConfig from \"../../environment/flavourConfig\";\r\n\r\nconst AddressAutocomplete: React.FC<IAddressAutocomplete> = ({\r\n  updateCustomer,\r\n  customer,\r\n  addressErrorMessage,\r\n  updateAddressErrorMessage,\r\n  isValidAddress,\r\n  updateIsValidAddress,\r\n}: IAddressAutocomplete) => {\r\n  const [isLoading, updateLoading] = useState(false);\r\n  const errors = {\r\n    addressNotFound:\r\n      \"We were unable to find your address. Please try again or contact us on 0800 246 978.\",\r\n    apiError:\r\n      \"We were unable to make this request. Please try again or contact us on 0800 246 978.\",\r\n    noAddressSelected: \"You must select an address from the dropdown menu.\",\r\n  };\r\n\r\n  // handles the selection of an address, checks for valid post codes\r\n  async function handleSelect(value: string) {\r\n    if (value === \"\") return;\r\n    updateLoading(true);\r\n    updateAddressErrorMessage(null);\r\n\r\n    try {\r\n      const [fullAddress] = await geocodeByAddress(value);\r\n      const { long_name: postCode = \"\" } =\r\n        fullAddress.address_components.find((c) => c.types.includes(\"postal_code\")) || {};\r\n\r\n      // fails if no postCode is found\r\n      if (postCode === \"\") {\r\n        updateLoading(false);\r\n        updateAddressErrorMessage(errors.addressNotFound);\r\n        return;\r\n        // otherwise it succeeds, and postCode is passed on with full address (that includes postal code)\r\n      } else {\r\n        updateAddressErrorMessage(null);\r\n        updateLoading(false);\r\n        updateIsValidAddress(true);\r\n        updateCustomer({ ...customer, CustomerAddress: fullAddress.formatted_address });\r\n      }\r\n    } catch (error) {\r\n      updateLoading(false);\r\n      updateAddressErrorMessage(errors.addressNotFound);\r\n    }\r\n  }\r\n\r\n  // tab not automatically firing handleSelect so it must be done manually.\r\n  function handleKeyPress(e: React.KeyboardEvent) {\r\n    const key = e.key;\r\n    if (key === \"Tab\" && customer.CustomerAddress !== \"\") {\r\n      handleSelect((e.target as HTMLInputElement).value);\r\n    }\r\n  }\r\n\r\n  // clicking on an address not setting address field value or firing handleSelect so both must be done manually.\r\n  function handleClick(value: string) {\r\n    updateCustomer({ ...customer, CustomerAddress: value });\r\n    handleSelect(value);\r\n  }\r\n\r\n  // validation error message for addresses that haven't been run through postCodeCheck\r\n  // i.e. a user enters an address and then clicks out of the dropdown\r\n  function handleBlur(e: React.SyntheticEvent) {\r\n    if (\r\n      isLoading ||\r\n      customer.CustomerAddress === \"\" ||\r\n      isValidAddress ||\r\n      addressErrorMessage !== null\r\n    ) {\r\n      return;\r\n    }\r\n    updateAddressErrorMessage(errors.noAddressSelected);\r\n  }\r\n\r\n  // restricts autofilled addresses to NZ only\r\n  const searchOptions = {\r\n    types: [\"address\"],\r\n    componentRestrictions: { country: [\"nz\"] },\r\n  };\r\n\r\n  // classes for address box, suggestion boxes and final suggestion box\r\n  const boxStyle = \"body-input-font border border-gray-300 pl-3 py-3 w-full\";\r\n  const addressBox = `${boxStyle} shadow-sm pr-3 overflow-ellipsis whitespace-nowrap overflow-x-hidden rounded focus:outline-none focus:border-${flavourConfig.inputColor}`;\r\n  const suggestionBoxes = `${boxStyle} bg-${flavourConfig.inputColorLightest} hover:bg-${flavourConfig.inputColorLight} flex flex-row items-center min-w-0 rounded-none border-l border-r border-b border-black-primary`;\r\n  const firstBox = `${suggestionBoxes} rounded-t`;\r\n\r\n  return (\r\n    <div className=\"w-full h-full z-50\">\r\n      <PlacesAutocomplete\r\n        value={customer.CustomerAddress}\r\n        onSelect={handleSelect}\r\n        searchOptions={searchOptions}\r\n        onChange={(value) => {\r\n          updateAddressErrorMessage(null);\r\n          updateIsValidAddress(false);\r\n          updateCustomer({ ...customer, CustomerAddress: value });\r\n        }}\r\n      >\r\n        {({ getInputProps, suggestions, loading }) => (\r\n          <div\r\n            className=\"relative w-full h-full\"\r\n            onKeyDown={(e) => handleKeyPress(e)}\r\n            onBlur={(e) => handleBlur(e)}\r\n          >\r\n            <input\r\n              data-lpignore=\"true\"\r\n              name=\"StreetAddress\"\r\n              id=\"StreetAddress\"\r\n              {...getInputProps({\r\n                className: `${addressBox}`,\r\n                autoComplete: \"none\",\r\n                required: true,\r\n              })}\r\n            />\r\n            {loading || isLoading ? (\r\n              <div className=\"absolute right-1 bottom-1 top-1\">\r\n                <CircleSpinner />\r\n              </div>\r\n            ) : (\r\n              <div></div>\r\n            )}\r\n            <div className=\"absolute w-full shadow-md\">\r\n              {suggestions.map((suggestion, i) => {\r\n                const style = suggestion.active\r\n                  ? `bg-${flavourConfig.inputColorLight} cursor-pointer`\r\n                  : \"cursor-pointer\";\r\n                return (\r\n                  <div\r\n                    key={i}\r\n                    className={i === 0 ? `${firstBox} ${style}` : `${suggestionBoxes} ${style}`}\r\n                    onMouseDown={() => handleClick(suggestion.description)}\r\n                  >\r\n                    <p className=\"w-full truncate\">{suggestion.description}</p>\r\n                  </div>\r\n                );\r\n              })}\r\n            </div>\r\n          </div>\r\n        )}\r\n      </PlacesAutocomplete>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddressAutocomplete;\r\n","import { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { apiService } from \"../../core/services/apiService\";\r\nimport { Event, ICustomerForm } from \"../../core/types/types\";\r\nimport BusinessCustomerRoute from \"../BusinessCustomerRoute/BusinessCustomerRoute\";\r\nimport AddressAutocomplete from \"../AddressAutocomplete/AddressAutocomplete\";\r\nimport DotSpinner from \"../DotSpinner/DotSpinner\";\r\nimport flavourConfig from \"../../environment/flavourConfig\";\r\n\r\nconst CustomerForm: React.FC<ICustomerForm> = ({\r\n  eventList,\r\n  updateCustomerTicketNumber,\r\n  customer,\r\n  updateCustomer,\r\n  isResidentialCustomer,\r\n  updateIsResidentialCustomer,\r\n  isValidAddress,\r\n  updateIsValidAddress,\r\n  hasCompletedWelcomePage,\r\n  updateHasCompletedCustomerPage,\r\n  hasTickedPrivacyPolicy,\r\n  updateHasTickedPrivacyPolicy,\r\n}: ICustomerForm) => {\r\n  const history = useHistory();\r\n  const [isLoading, updateIsLoading] = useState<boolean>(false);\r\n  const [createCustomerError, updateCreateCustomerError] = useState<string | null>(null);\r\n\r\n  // Form error messages\r\n  const [residentialCustomerError, updateResidentialCustomerError] = useState<string | null>(null);\r\n  const [addressErrorMessage, updateAddressErrorMessage] = useState<string | null>(null);\r\n\r\n  // Scroll to top when component first mounts\r\n  useEffect(() => {\r\n    window.scrollTo({ top: 0, left: 0, behavior: \"smooth\" });\r\n  }, []);\r\n\r\n  // Prevent navigation to page unless correct path was taken\r\n  useEffect(() => {\r\n    if (!hasCompletedWelcomePage) {\r\n      history.replace(\"/\");\r\n    }\r\n  }, [history, hasCompletedWelcomePage]);\r\n\r\n  // Main submit method\r\n  const handleSubmit = async () => {\r\n    updateIsLoading(true);\r\n    updateCreateCustomerError(null);\r\n    const response = await apiService.createCustomer(customer);\r\n\r\n    if (response.status === 200) {\r\n      updateIsLoading(false);\r\n      updateCustomerTicketNumber(response.data);\r\n      updateHasCompletedCustomerPage(true);\r\n      history.push(\"/waste-form\");\r\n      return;\r\n    }\r\n\r\n    updateIsLoading(false);\r\n    updateCreateCustomerError(\r\n      \"We were unable to make this request. Please try again later or contact us on 0800 246 978.\"\r\n    );\r\n  };\r\n\r\n  // Displays the event list within a <select> tag\r\n  const renderEventList = (event: Event, index: number) => {\r\n    let eventThresholdError = \"\";\r\n    let isDisabled = false;\r\n\r\n    if (event.percentageFull >= 100) {\r\n      eventThresholdError = \"(Event is at capacity. Bookings are now closed.)\";\r\n      isDisabled = true;\r\n    } else if (event.percentageFull >= 80) {\r\n      eventThresholdError = \"(Event is nearly full.)\";\r\n    }\r\n\r\n    return (\r\n      <option\r\n        value={event.eventID}\r\n        key={index}\r\n        disabled={isDisabled}\r\n        className={`${isDisabled && \"text-red-500\"}`}\r\n      >\r\n        {`${event.eventName}, ${event.eventTime} on ${event.eventDate} ${eventThresholdError}`}\r\n      </option>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <form\r\n      onSubmit={(e) => {\r\n        e.preventDefault();\r\n        if (isResidentialCustomer === null) {\r\n          updateResidentialCustomerError(\"You must select one of the above options.\");\r\n          return;\r\n        }\r\n        handleSubmit();\r\n      }}\r\n    >\r\n      <div className=\"w-11/12 mx-auto\">\r\n        <div className=\"container mx-auto\">\r\n          <div className=\"mx-auto xl:w-full xl:mx-0 xl:px-12\">\r\n            <div className=\"mb-0 mt-12 xl:mt-20 xl:flex lg:flex md:flex flex-wrap justify-between\">\r\n              <div className=\"mb-4 xl:mb-6 w-full flex flex-col items-start justify-center\">\r\n                <h1 className=\"body-heading-font\">Enter Your Details</h1>\r\n                <p className=\"body-subheading-font mt-2\">\r\n                  Please fill in the form below with your details. You can click on the information\r\n                  icon in the top right corner if you need help.\r\n                </p>\r\n                <p className=\"pb-1.5 xl:pb-2 form-subheading-font mt-10 xl:mt-12\">\r\n                  Select a Customer Type<span className=\"text-red-600\">*</span>\r\n                </p>\r\n                <div className=\"flex w-full justify-center\">\r\n                  <div className=\"bg-transparent border-2 border-gray-200 rounded flex items-center\">\r\n                    <button\r\n                      type=\"button\"\r\n                      onClick={() => {\r\n                        updateIsResidentialCustomer(true);\r\n                        updateResidentialCustomerError(null);\r\n                      }}\r\n                      className={`border-r border-gray-200 text-center px-4 xl:px-10 py-3 lg:py-5 flex justify-center items-center cursor-pointer focus:bg-${\r\n                        flavourConfig.inputColorLight\r\n                      } hover:bg-${flavourConfig.inputColorLightest}\r\n                        ${\r\n                          isResidentialCustomer !== null &&\r\n                          isResidentialCustomer &&\r\n                          `bg-${flavourConfig.inputColorLight}`\r\n                        }`}\r\n                    >\r\n                      <p className=\"body-input-font\">I'm a Residential Customer</p>\r\n                    </button>\r\n                    <button\r\n                      type=\"button\"\r\n                      onClick={() => {\r\n                        updateIsResidentialCustomer(false);\r\n                        updateResidentialCustomerError(null);\r\n                      }}\r\n                      className={`text-center px-4 xl:px-10 py-3 lg:py-5 flex justify-center items-center cursor-pointer focus:bg-${\r\n                        flavourConfig.inputColorLight\r\n                      } hover:bg-${flavourConfig.inputColorLightest}\r\n                        ${\r\n                          isResidentialCustomer !== null &&\r\n                          !isResidentialCustomer &&\r\n                          `bg-${flavourConfig.inputColorLight}`\r\n                        }`}\r\n                    >\r\n                      <p className=\"body-input-font\">I'm a Business Customer</p>\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n                {residentialCustomerError && (\r\n                  <p className=\"body-error p-4 text-center w-full\">{residentialCustomerError}</p>\r\n                )}\r\n              </div>\r\n              {isResidentialCustomer === false ? (\r\n                <BusinessCustomerRoute />\r\n              ) : (\r\n                <div className=\"w-full flex flex-col items-end\">\r\n                  <div className=\"w-full md:flex flex-wrap justify-between\">\r\n                    <div className=\"w-full flex flex-col mb-4 xl:mb-6\">\r\n                      <label htmlFor=\"event\" className=\"pb-1.5 xl:pb-2 form-subheading-font\">\r\n                        Select an Event<span className=\"text-red-600\">*</span>\r\n                      </label>\r\n                      <div className=\"border border-gray-300 shadow-sm rounded flex relative w-full\">\r\n                        <select\r\n                          name=\"event\"\r\n                          required\r\n                          id=\"event\"\r\n                          value={customer.Event === 0 ? \"\" : customer.Event}\r\n                          className={`body-input-font background-white-ie-fix appearance-none z-10 py-3 pl-3 pr-12 overflow-ellipsis whitespace-nowrap overflow-x-hidden w-full border border-transparent focus:outline-none focus:border-${flavourConfig.inputColor} rounded`}\r\n                          onChange={(e) =>\r\n                            updateCustomer({ ...customer, Event: parseInt(e.target.value) })\r\n                          }\r\n                        >\r\n                          <option disabled value=\"\"></option>\r\n                          {eventList.map(renderEventList)}\r\n                        </select>\r\n                        <div\r\n                          className=\"px-4 flex items-center border-l border-gray-300 flex-col justify-center text-gray-500\r\n                        absolute right-0 bottom-0 top-0 mx-auto z-20 pointer-events-none \"\r\n                        >\r\n                          <svg\r\n                            tabIndex={-1}\r\n                            xmlns=\"http://www.w3.org/2000/svg\"\r\n                            className=\"icon icon-tabler icon-tabler-chevron-up\"\r\n                            width={16}\r\n                            height={16}\r\n                            viewBox=\"0 0 24 24\"\r\n                            strokeWidth=\"1.5\"\r\n                            stroke=\"currentColor\"\r\n                            fill=\"none\"\r\n                            strokeLinecap=\"round\"\r\n                            strokeLinejoin=\"round\"\r\n                          >\r\n                            <path stroke=\"none\" d=\"M0 0h24v24H0z\" />\r\n                            <polyline points=\"6 15 12 9 18 15\" />\r\n                          </svg>\r\n                          <svg\r\n                            tabIndex={-1}\r\n                            xmlns=\"http://www.w3.org/2000/svg\"\r\n                            className=\"icon icon-tabler icon-tabler-chevron-down\"\r\n                            width={16}\r\n                            height={16}\r\n                            viewBox=\"0 0 24 24\"\r\n                            strokeWidth=\"1.5\"\r\n                            stroke=\"currentColor\"\r\n                            fill=\"none\"\r\n                            strokeLinecap=\"round\"\r\n                            strokeLinejoin=\"round\"\r\n                          >\r\n                            <path stroke=\"none\" d=\"M0 0h24v24H0z\" />\r\n                            <polyline points=\"6 9 12 15 18 9\" />\r\n                          </svg>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"xl:w-2/5 lg:w-2/5 md:w-2/5 flex flex-col mb-4 xl:mb-6\">\r\n                      <label htmlFor=\"Name\" className=\"pb-1.5 xl:pb-2 form-subheading-font\">\r\n                        Full Name<span className=\"text-red-600\">*</span>\r\n                      </label>\r\n                      <input\r\n                        type=\"text\"\r\n                        name=\"Name\"\r\n                        value={customer.CustomerName}\r\n                        required\r\n                        id=\"Name\"\r\n                        className={`body-input-font border border-gray-300 pl-3 py-3 shadow-sm rounded focus:outline-none bg-transparent focus:border-${flavourConfig.inputColor}`}\r\n                        onChange={(e) =>\r\n                          updateCustomer({ ...customer, CustomerName: e.target.value })\r\n                        }\r\n                      />\r\n                    </div>\r\n                    <div className=\"xl:w-2/5 lg:w-2/5 md:w-2/5 flex flex-col mb-4 xl:mb-6\">\r\n                      <label\r\n                        htmlFor=\"StreetAddress\"\r\n                        className=\"pb-1.5 xl:pb-2 form-subheading-font\"\r\n                      >\r\n                        Street Address<span className=\"text-red-600\">*</span>\r\n                      </label>\r\n                      <AddressAutocomplete\r\n                        customer={customer}\r\n                        addressErrorMessage={addressErrorMessage}\r\n                        updateAddressErrorMessage={updateAddressErrorMessage}\r\n                        updateCustomer={updateCustomer}\r\n                        isValidAddress={isValidAddress}\r\n                        updateIsValidAddress={updateIsValidAddress}\r\n                      />\r\n                      {addressErrorMessage && (\r\n                        <p className=\"mt-2 body-error\">{addressErrorMessage}</p>\r\n                      )}\r\n                    </div>\r\n                    <div className=\"xl:w-2/5 lg:w-2/5 md:w-2/5 flex flex-col mb-4 xl:mb-6\">\r\n                      <label htmlFor=\"email2\" className=\"pb-1.5 xl:pb-2 form-subheading-font\">\r\n                        Email Address<span className=\"text-red-600\">*</span>\r\n                      </label>\r\n                      <div className=\"relative\">\r\n                        <div className=\"absolute text-gray-600 flex items-center px-4 border-r h-full\">\r\n                          <svg\r\n                            xmlns=\"http://www.w3.org/2000/svg\"\r\n                            className=\"icon icon-tabler icon-tabler-mail\"\r\n                            width={20}\r\n                            height={20}\r\n                            viewBox=\"0 0 24 24\"\r\n                            strokeWidth=\"1.5\"\r\n                            stroke=\"currentColor\"\r\n                            fill=\"none\"\r\n                            strokeLinecap=\"round\"\r\n                            strokeLinejoin=\"round\"\r\n                          >\r\n                            <path stroke=\"none\" d=\"M0 0h24v24H0z\" />\r\n                            <rect x={3} y={5} width={18} height={14} rx={2} />\r\n                            <polyline points=\"3 7 12 13 21 7\" />\r\n                          </svg>\r\n                        </div>\r\n                        <input\r\n                          id=\"email2\"\r\n                          name=\"email\"\r\n                          type=\"email\"\r\n                          value={customer.CustomerEmail}\r\n                          required\r\n                          className={`w-full body-input-font bg-transparent border-gray-300 focus:outline-none focus:border-${flavourConfig.inputColor} font-normal py-3 flex items-center pl-16 rounded border shadow-sm`}\r\n                          onChange={(e) =>\r\n                            updateCustomer({ ...customer, CustomerEmail: e.target.value })\r\n                          }\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"xl:w-2/5 lg:w-2/5 md:w-2/5 flex flex-col mb-4 xl:mb-6\">\r\n                      <div className=\"flex items-center\">\r\n                        <label htmlFor=\"Number\" className=\"pb-1.5 xl:pb-2 form-subheading-font\">\r\n                          Phone Number<span className=\"text-red-600\">*</span>\r\n                        </label>\r\n                      </div>\r\n                      <input\r\n                        type=\"tel\"\r\n                        id=\"Number\"\r\n                        name=\"Number\"\r\n                        value={customer.CustomerPhone}\r\n                        required\r\n                        className={`border body-input-font pl-3 py-3 shadow-sm border-gray-300 rounded focus:outline-none bg-transparent focus:border-${flavourConfig.inputColor}`}\r\n                        onChange={(e) =>\r\n                          updateCustomer({ ...customer, CustomerPhone: e.target.value })\r\n                        }\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"flex items-center pt-0 pb-4\">\r\n                    <input\r\n                      type=\"checkbox\"\r\n                      name=\"privacy-policy\"\r\n                      id=\"privacy-policy\"\r\n                      required\r\n                      checked={hasTickedPrivacyPolicy}\r\n                      onChange={(e) => {\r\n                        updateHasTickedPrivacyPolicy(!hasTickedPrivacyPolicy);\r\n                        (e.target as HTMLInputElement).setCustomValidity(\"\");\r\n                      }}\r\n                      onInvalid={(e) =>\r\n                        (e.target as HTMLInputElement).setCustomValidity(\r\n                          \"You must agree to the privacy policy if you wish to continue.\"\r\n                        )\r\n                      }\r\n                    />\r\n                    <label htmlFor=\"privacy-policy\" className=\"ml-2 form-subheading-font\">\r\n                      I have read and agree to the{\" \"}\r\n                      <a\r\n                        href=\"https://www.envirowaste.co.nz/assets/Uploads/Privacy-Policy-FINAL.pdf\"\r\n                        className=\"underline\"\r\n                        target=\"_blank\"\r\n                        rel=\"noreferrer\"\r\n                      >\r\n                        privacy policy\r\n                      </a>\r\n                      <span className=\"text-red-600\">*</span>\r\n                    </label>\r\n                  </div>\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {createCustomerError && (\r\n          <p className=\"w-full text-center body-error\">{createCustomerError}</p>\r\n        )}\r\n      </div>\r\n      <div className=\"w-full py-4 sm:px-12 px-4 bg-gray-100 mt-6 rounded-b-lg border-t border-gray-200\">\r\n        <div className=\"w-11/12 flex justify-between mx-auto\">\r\n          <button\r\n            type=\"button\"\r\n            className={`focus:outline-none w-24 xl:w-28 btn focus:border-${flavourConfig.inputColor} text-gray-600 border border-gray-300 py-2 mr-4 rounded hover:bg-gray-200 transition duration-150 ease-in-out`}\r\n            onClick={() => history.replace(\"/\")}\r\n          >\r\n            Cancel\r\n          </button>\r\n          <button\r\n            disabled={\r\n              isResidentialCustomer === false || addressErrorMessage !== null || !eventList.length\r\n            }\r\n            className={`w-24 xl:w-28 bg-${flavourConfig.secondaryColor} transition duration-150 ease-in-out hover:bg-${flavourConfig.secondaryColorLight} rounded text-white focus:bg-${flavourConfig.secondaryColorLight} focus:outline-none border focus:border-${flavourConfig.inputColor}`}\r\n            type=\"submit\"\r\n          >\r\n            {isLoading ? <DotSpinner color=\"background-white-ie-fix\" /> : \"Next\"}\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default CustomerForm;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { apiService } from \"../../core/services/apiService\";\r\nimport { Event, IWelcomePage } from \"../../core/types/types\";\r\nimport flavourConfig from \"../../environment/flavourConfig\";\r\nimport DotSpinner from \"../DotSpinner/DotSpinner\";\r\nimport \"../../styles/styles.css\";\r\n\r\nconst WelcomePage: React.FC<IWelcomePage> = ({\r\n  updateEventList,\r\n  updateHasCompletedWelcomePage,\r\n}: IWelcomePage) => {\r\n  const history = useHistory();\r\n\r\n  const [eventListErrorMessage, updateEventListErrorMessage] = useState<string | null>(null);\r\n  const [isLoading, updateIsLoading] = useState<boolean>(false);\r\n\r\n  // Event error messages for UI\r\n  const eventErrors = {\r\n    apiError:\r\n      \"We were unable to make this request. Please try again later or contact us on 0800 246 978.\",\r\n    noEventsError:\r\n      \"There are currently no collection events in your area. Please check again later or contact us on 0800 246 978.\",\r\n    eventsFullError:\r\n      \"All the events in your area are currently fully booked. Please check again later or contact us on 0800 246 978.\",\r\n  };\r\n\r\n  // Scroll to top when component first mounts\r\n  useEffect(() => {\r\n    window.scrollTo({ top: 0, left: 0, behavior: \"smooth\" });\r\n  }, []);\r\n\r\n  // Fetches a list of events from API, checks for valid dates and booking availability\r\n  const handleGetEvents = async () => {\r\n    updateIsLoading(true);\r\n    updateEventListErrorMessage(null);\r\n\r\n    const response = await apiService.getEvents();\r\n\r\n    if (response.status === 200) {\r\n      const validDateEvents = checkEventDates(response.data);\r\n      if (validDateEvents.length) {\r\n        if (checkEventCapacity(response.data).length) {\r\n          updateIsLoading(false);\r\n          updateEventList(validDateEvents);\r\n          updateHasCompletedWelcomePage(true);\r\n          history.push(\"/customer-form\");\r\n          return;\r\n        } else {\r\n          updateEventListErrorMessage(eventErrors.eventsFullError);\r\n        }\r\n      } else {\r\n        updateEventListErrorMessage(eventErrors.noEventsError);\r\n      }\r\n    } else {\r\n      updateEventListErrorMessage(eventErrors.apiError);\r\n    }\r\n    updateIsLoading(false);\r\n  };\r\n\r\n  const checkEventCapacity = (events: Event[]) => {\r\n    return events.filter((event) => event.percentageFull <= 100);\r\n  };\r\n\r\n  // Returns events within valid date range\r\n  const checkEventDates = (events: Event[]) => {\r\n    const today = new Date().getTime();\r\n    return events.filter((event) => {\r\n      let eventStart = parseDate(event.startDate).getTime();\r\n      let eventEnd = parseDate(event.endDate).getTime();\r\n      return eventStart <= today && today < eventEnd;\r\n    });\r\n  };\r\n\r\n  // Returns a date from a date string, i.e. 20/01/2021\r\n  const parseDate = (date: string) => {\r\n    const dateParts = date.split(\"/\");\r\n    return new Date(+dateParts[2], +dateParts[1] - 1, +dateParts[0]);\r\n  };\r\n\r\n  return (\r\n    <div className=\"w-full h-full pt-10 pb-14 sm:pt-20 sm:pb-20\">\r\n      <div className=\"grid grid-cols-3 pl-6 pr-6 sm:pl-16 sm:pr-20 lg:pl-20 xl:pl-28\">\r\n        <div className=\"col-span-full lg:col-span-2 flex flex-col items-center sm:items-start text-center sm:text-left\">\r\n          <h1 className=\"main-heading-font\">\r\n            Sign up for a Household <br />\r\n            Hazardous Waste Collection Event\r\n          </h1>\r\n          <p className=\"main-subheading-font mt-6 xl:mt-8\">\r\n            Simply add your details, select an upcoming collection event and you're good to go.\r\n          </p>\r\n          <button\r\n            onClick={handleGetEvents}\r\n            type=\"button\"\r\n            className={`bg-${flavourConfig.secondaryColor} hover:bg-${flavourConfig.secondaryColorLight} focus:outline-none border focus:border-${flavourConfig.inputColor} focus:bg-${flavourConfig.secondaryColorLight} w-44 xl:w-60 h-14 xl:h-16 mt-8 xl:mt-10 main-subheading-font transition duration-150 ease-in-out rounded text-white`}\r\n          >\r\n            {isLoading ? <DotSpinner color=\"background-white-ie-fix\" /> : \"Get Started\"}\r\n          </button>\r\n          {eventListErrorMessage && <p className=\"mt-3 body-error\">{eventListErrorMessage}</p>}\r\n        </div>\r\n        <div className=\"col-span-1 hidden lg:block\">\r\n          <img src=\"main-waste.jpg\" alt=\"hazardous waste items\" className=\"h-auto w-96\" />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WelcomePage;\r\n","const Footer: React.FC = () => {\r\n  return (\r\n    <div className=\"relative background-white-ie-fix h-40 border-t border-gray-300\">\r\n      <div className=\"mt-12 mx-auto w-11/12 lg:10/12 xl:9/12 2xl:w-8/12 flex flex-row items-center justify-center lg:justify-end\">\r\n        <ul className=\"form-subheading-font text-center lg:text-right\">\r\n          <li className=\"\">\r\n            <a\r\n              href=\"https://www.envirowaste.co.nz/assets/Uploads/Privacy-Policy-FINAL.pdf\"\r\n              className=\"\"\r\n              target=\"_blank\"\r\n              rel=\"noreferrer\"\r\n            >\r\n              Privacy Policy\r\n            </a>\r\n          </li>\r\n          <li className=\"\">\r\n            <a href=\"mailto:CWAK@envirowaste.co.nz\" className=\"\">\r\n              Contact Us\r\n            </a>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n      <p className=\"absolute left-1 bottom-1 text-xs text-gray-300\">1.0.0.1</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import React from \"react\";\r\nimport { ITooltip } from \"../../core/types/types\";\r\nimport flavourConfig from \"../../environment/flavourConfig\";\r\n\r\nconst Tooltip: React.FC<ITooltip> = ({ showTooltip, updateShowTooltip, pathname }) => {\r\n  const getTooltipText = (pathname: string) => {\r\n    switch (pathname) {\r\n      case \"/customer-form\":\r\n        return \"We need your details in order to ensure that you are signing up in the right collection area. Contact 0800 246 978 if you need help.\";\r\n      case \"/waste-form\":\r\n        return \"You can add multiple items to your disposal list. Just make sure you've added them all before clicking 'Submit'. Contact 0800 246 978 for assistance.\";\r\n      case \"/confirmation\":\r\n        return \"There's nothing more to be done. You can contact us on 0800 246 978 if you have any further questions.\";\r\n      default:\r\n        return \"This is where you can find the information you need. Contact 0800 246 978 if you still have questions.\";\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"relative mt-0 \">\r\n      <div\r\n        className=\"mb-3 ml-2 cursor-pointer select-none\"\r\n        onClick={() => updateShowTooltip(!showTooltip)}\r\n        onKeyPress={(e) => {\r\n          if (e.key === \"Enter\") {\r\n            updateShowTooltip(!showTooltip);\r\n          }\r\n        }}\r\n      >\r\n        <svg\r\n          aria-haspopup=\"true\"\r\n          xmlns=\"http://www.w3.org/2000/svg\"\r\n          className=\"\"\r\n          width={23}\r\n          height={23}\r\n          viewBox=\"0 0 24 24\"\r\n          strokeWidth=\"1.5\"\r\n          stroke=\"#717f94\"\r\n          fill=\"none\"\r\n          strokeLinecap=\"round\"\r\n          strokeLinejoin=\"round\"\r\n        >\r\n          <path stroke=\"none\" d=\"M0 0h24v24H0z\" />\r\n          <circle cx={12} cy={12} r={9} />\r\n          <line x1={12} y1={8} x2=\"12.01\" y2={8} />\r\n          <polyline points=\"11 12 12 12 12 16 13 16\" />\r\n        </svg>\r\n      </div>\r\n      {showTooltip && (\r\n        <div\r\n          role=\"tooltip\"\r\n          className=\"z-20 absolute transition duration-150 ease-in-out -right-10 top-0 mt-8 shadow-lg pt-4 pr-5 pl-3 pb-3 background-white-ie-fix rounded w-56 xl:w-72\"\r\n        >\r\n          <svg\r\n            className=\"absolute top-0 -mt-2 right-11\"\r\n            width=\"16px\"\r\n            height=\"8px\"\r\n            viewBox=\"0 0 16 8\"\r\n            version=\"1.1\"\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n            xmlnsXlink=\"http://www.w3.org/1999/xlink\"\r\n          >\r\n            <g id=\"Page-1\" stroke=\"none\" strokeWidth={1} fill=\"none\" fillRule=\"evenodd\">\r\n              <g id=\"Tooltips-\" transform=\"translate(-93.000000, -355.000000)\" fill=\"#FFFFFF\">\r\n                <g id=\"Group-3-Copy-3\" transform=\"translate(76.000000, 331.000000)\">\r\n                  <polygon\r\n                    id=\"Triangle\"\r\n                    transform=\"translate(25.000000, 28.000000) rotate(-360.000000) translate(-25.000000, -28.000000) \"\r\n                    points=\"25 24 33 32 17 32\"\r\n                  />\r\n                </g>\r\n              </g>\r\n            </g>\r\n          </svg>\r\n          <p className=\"body-subheading-font leading-5 pb-1\">{getTooltipText(pathname)}</p>\r\n          <p\r\n            className={`progress-bar-font text-${flavourConfig.primaryColor} cursor-pointer`}\r\n            onClick={() => updateShowTooltip(!showTooltip)}\r\n          >\r\n            Got it\r\n          </p>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Tooltip;\r\n","import { useEffect } from \"react\";\r\n\r\nconst NotFound: React.FC = () => {\r\n  useEffect(() => {\r\n    window.location.href = \"/\";\r\n  }, []);\r\n  return <div className=\"\"></div>;\r\n};\r\n\r\nexport default NotFound;\r\n","import { useState } from \"react\";\r\n\r\ninterface IDevLogin {\r\n  updateLogin: Function;\r\n}\r\n\r\nconst DevLogin: React.FC<IDevLogin> = ({ updateLogin }: IDevLogin) => {\r\n  const [username, updateUsername] = useState(\"\");\r\n  const [password, updatePassword] = useState(\"\");\r\n  const [error, updateError] = useState(\"\");\r\n  const { REACT_APP_USERNAME } = process.env;\r\n  const { REACT_APP_PASSWORD } = process.env;\r\n\r\n  function handleSubmit() {\r\n    if (username === REACT_APP_USERNAME && password === REACT_APP_PASSWORD) {\r\n      updateLogin(true);\r\n      return;\r\n    }\r\n    updateError(\"Incorrect username or password\");\r\n  }\r\n\r\n  return (\r\n    <div\r\n      className=\"h-screen w-screen bg-gray-50 flex flex-col items-center justify-center\"\r\n      onKeyPress={(e) => {\r\n        if (e.key === \"Enter\") {\r\n          handleSubmit();\r\n        }\r\n      }}\r\n    >\r\n      <form\r\n        className=\"flex flex-col items-center px-8 py-6 background-white-ie-fix shadow-xl border border-gray-300 rounded-lg\"\r\n        onSubmit={(e) => {\r\n          e.preventDefault();\r\n          handleSubmit();\r\n        }}\r\n      >\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Username\"\r\n          className=\"p-2 bg-gray-200 border border-black-true\"\r\n          onChange={(e) => updateUsername(e.target.value)}\r\n        />\r\n        <input\r\n          type=\"password\"\r\n          placeholder=\"Password\"\r\n          className=\"mt-2 p-2 bg-gray-200 border border-black-true\"\r\n          onChange={(e) => updatePassword(e.target.value)}\r\n        />\r\n        {error && <p className=\"mt-2 text-red-600\">{error}</p>}\r\n        <button type=\"submit\" className=\"mt-4 px-4 py-2 border border-black-true \">\r\n          Login\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DevLogin;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Switch, Route, useLocation } from \"react-router-dom\";\r\nimport Nav from \"./components/Nav/Nav\";\r\nimport WasteForm from \"./components/WasteForm/WasteForm\";\r\nimport ProgressBar from \"./components/ProgressBar/ProgressBar\";\r\nimport Confirmation from \"./components/Confirmation/Confirmation\";\r\nimport CustomerForm from \"./components/CustomerForm/CustomerForm\";\r\nimport WelcomePage from \"./components/WelcomePage/WelcomePage\";\r\nimport Footer from \"./components/Footer/Footer\";\r\nimport Tooltip from \"./components/Tooltip/Tooltip\";\r\nimport NotFound from \"./components/NotFound/NotFound\";\r\nimport envConfig from \"./environment/envConfig\";\r\nimport DevLogin from \"./components/DevLogin/DevLogin\";\r\nimport { Customer, Event } from \"./core/types/types\";\r\nimport flavourConfig from \"./environment/flavourConfig\";\r\nimport \"./styles/styles.css\";\r\n\r\nconst App: React.FC = () => {\r\n  const location = useLocation();\r\n  const today = new Date();\r\n  const date = today.toLocaleDateString(\"en-NZ\", {\r\n    year: \"numeric\",\r\n    month: \"2-digit\",\r\n    day: \"2-digit\",\r\n  });\r\n\r\n  // For dev login\r\n  const [isLoggedIn, updateLogIn] = useState(false);\r\n\r\n  // State for correct route progression\r\n  const [hasCompletedWelcomePage, updateHasCompletedWelcomePage] = useState(false);\r\n  const [hasCompletedCustomerPage, updateHasCompletedCustomerPage] = useState(false);\r\n  const [hasCompletedWastePage, updateHasCompletedWastePage] = useState(false);\r\n\r\n  // State for events list\r\n  const [eventList, updateEventList] = useState<Event[]>([]);\r\n\r\n  // State for customer ticket number\r\n  const [customerTicketNumber, updateCustomerTicketNumber] = useState(0);\r\n\r\n  // State for the progress bar. Four pages == 0-3 state\r\n  const [progressState, updateProgressState] = useState(0);\r\n\r\n  // State for the tooltip that is displayed when info icon is clicked\r\n  const [showTooltip, updateShowTooltip] = useState(false);\r\n\r\n  // Customer form state\r\n  const [customer, updateCustomer] = useState<Customer>({\r\n    Event: 0,\r\n    CustomerName: \"\",\r\n    CustomerAddress: \"\",\r\n    CustomerPhone: \"\",\r\n    CustomerEmail: \"\",\r\n    DateCreated: date,\r\n  });\r\n\r\n  // State for residential/business button\r\n  const [isResidentialCustomer, updateIsResidentialCustomer] = useState<boolean | null>(null);\r\n\r\n  // State for residential/business button\r\n  const [hasTickedPrivacyPolicy, updateHasTickedPrivacyPolicy] = useState<boolean>(false);\r\n\r\n  // State for validating address search field\r\n  const [isValidAddress, updateIsValidAddress] = useState<boolean>(false);\r\n\r\n  // Updates the progress bar state every time the page location changes\r\n  useEffect(() => {\r\n    let answer = 0;\r\n    switch (location.pathname) {\r\n      case \"/\":\r\n        break;\r\n      case \"/customer-form\":\r\n        answer = 1;\r\n        break;\r\n      case \"/waste-form\":\r\n        answer = 2;\r\n        break;\r\n      case \"/confirmation\":\r\n        answer = 3;\r\n        break;\r\n    }\r\n    updateProgressState(answer);\r\n  }, [location]);\r\n\r\n  return envConfig.requireLogin && !isLoggedIn ? (\r\n    <DevLogin updateLogin={updateLogIn} />\r\n  ) : (\r\n    <div\r\n      className={`bg-${flavourConfig.backgroundImage} bg-cover bg-top bg-fixed bg-no-repeat min-h-screen max-w-screen overflow-x-hidden`}\r\n    >\r\n      <Nav />\r\n      <div className=\"min-h-screen flex flex-col justify-center pt-32 pb-32 lg:pt-40 lg:pb-40 w-11/12 lg:10/12 xl:9/12 2xl:w-8/12 mx-auto\">\r\n        <div className=\"background-white-ie-fix shadow-lg rounded-lg border border-gray-300\">\r\n          <div className=\"relative xl:w-full pt-10 pb-6 rounded-t-lg\">\r\n            <div className=\"flex items-center w-11/12 mx-auto\">\r\n              <ProgressBar progressState={progressState} />\r\n              <div className=\"absolute right-1 top-2 sm:right-3 sm:top-3.5 text-gray-600\">\r\n                <Tooltip\r\n                  showTooltip={showTooltip}\r\n                  updateShowTooltip={updateShowTooltip}\r\n                  pathname={location.pathname}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <Switch>\r\n            <Route exact path=\"/\">\r\n              <WelcomePage\r\n                updateEventList={updateEventList}\r\n                updateHasCompletedWelcomePage={updateHasCompletedWelcomePage}\r\n              />\r\n            </Route>\r\n            <Route exact path=\"/customer-form\">\r\n              <CustomerForm\r\n                eventList={eventList}\r\n                updateCustomerTicketNumber={updateCustomerTicketNumber}\r\n                customer={customer}\r\n                updateCustomer={updateCustomer}\r\n                isResidentialCustomer={isResidentialCustomer}\r\n                updateIsResidentialCustomer={updateIsResidentialCustomer}\r\n                isValidAddress={isValidAddress}\r\n                updateIsValidAddress={updateIsValidAddress}\r\n                hasCompletedWelcomePage={hasCompletedWelcomePage}\r\n                updateHasCompletedCustomerPage={updateHasCompletedCustomerPage}\r\n                hasTickedPrivacyPolicy={hasTickedPrivacyPolicy}\r\n                updateHasTickedPrivacyPolicy={updateHasTickedPrivacyPolicy}\r\n              />\r\n            </Route>\r\n            <Route exact path=\"/waste-form\">\r\n              <WasteForm\r\n                customerTicketNumber={customerTicketNumber}\r\n                hasCompletedCustomerPage={hasCompletedCustomerPage}\r\n                updateHasCompletedWastePage={updateHasCompletedWastePage}\r\n              />\r\n            </Route>\r\n            <Route exact path=\"/confirmation\">\r\n              <Confirmation\r\n                hasCompletedWastePage={hasCompletedWastePage}\r\n                customerTicketNumber={customerTicketNumber}\r\n              />\r\n            </Route>\r\n            <NotFound />\r\n          </Switch>\r\n        </div>\r\n      </div>\r\n      <Footer />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport \"./index.css\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <BrowserRouter basename=\"/chemwaste-booking\">\r\n      <App />\r\n    </BrowserRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}