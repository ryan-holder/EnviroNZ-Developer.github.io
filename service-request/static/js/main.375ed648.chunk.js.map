{"version":3,"sources":["components/DevLogin/DevLogin.tsx","components/Footer/Footer.tsx","core/constants/constants.tsx","pages/Confirmation.tsx","pages/NotFound.tsx","components/Nav/Nav.tsx","components/CircleSpinner/CircleSpinner.tsx","components/ExclamationMark/ExclamationMark.tsx","components/AddressAutocomplete/AddressAutocomplete.tsx","components/StyledInputs/StyledCheckboxes.tsx","components/StyledInputs/StyledTextArea.tsx","components/StyledInputs/StyledRadio.tsx","components/StyledInputs/StyledInput.tsx","components/DotSpinner/DotSpinner.tsx","core/services/helpers.tsx","paths/StandardServicePath/StandardServicePath.tsx","components/StyledInputs/StyledSelect.tsx","components/Marker/Marker.tsx","components/Map/Map.tsx","paths/IllegalDumpingPath/IllegalDumpingPath.tsx","paths/PublicLitterBins/PublicLittersBinsPath.tsx","paths/LooseLitterPath/LooseLitterPath.tsx","core/environment/envConfig.tsx","core/services/apiService.tsx","pages/Home.tsx","App.tsx","index.tsx"],"names":["DevLogin","updateLogin","useState","username","updateUsername","password","updatePassword","error","updateError","handleSubmit","process","className","onKeyPress","e","key","onSubmit","preventDefault","type","placeholder","onChange","target","value","Footer","href","FixedServiceRequestTypes","DAMAGED_BIN","MISSING_BIN","ADDITIONAL_BIN","MISSED_COLLECTION","ILLEGAL_DUMPING","PUBLIC_LITTER_BINS","LOOSE_LITTER","serviceRequestList","FixedServiceTypes","RUBBISH","RECYCLING","FOOD","GLASS","GARDEN_WASTE","serviceList","FixedPublicLitterTypes","OVERFLOWING_PUBLIC_BINS","ODOROUS_PUBLIC_BINS","DAMAGED_PUBLIC_BINS","publicLitterBinsList","FixedLooseLitterTypes","RESERVES","CARPARK","WALKWAY","FOOTPATH","BERM","OTHER","looseLitterList","animationVariants","initial","opacity","scale","in","transition","ease","duration","staggerChildren","out","Confirmation","hasCompletedForm","serviceRequest","history","useHistory","useEffect","replace","window","scrollTo","top","left","behavior","motion","div","variants","animate","exit","h1","p","ticketNumber","NotFound","Nav","src","alt","CircleSpinner","ExclamationMark","version","id","xmlns","xmlnsXlink","width","height","viewBox","xmlSpace","fill","d","AddressAutocomplete","label","updateServiceRequest","addressErrorMessage","updateAddressErrorMessage","isValidAddress","updateIsValidAddress","isLoading","updateLoading","errors","handleSelect","a","geocodeByAddress","fullAddress","subpremise","extractAddressComponents","address_components","roadName","suburbName","cityName","postCode","regionName","streetNumber","getLatLng","latLng","latitude","lat","longitude","lng","formattedSubpremise","addressComponents","formattedAddress","formatted_address","components","find","c","types","includes","long_name","addressComponent","boxStyle","addressBox","suggestionBoxes","firstBox","onSelect","searchOptions","componentRestrictions","country","handleChange","getInputProps","suggestions","loading","onBlur","data-lpignore","name","title","autoComplete","required","results","map","suggestion","i","style","active","onMouseDown","description","StyledCheckboxes","checkboxErrorMessage","htmlFor","Object","entries","index","itemKey","itemValue","checked","service","StyledTextArea","StyledRadio","StyledInput","DotSpinner","helpers","convertStrToBool","StandardServicePath","updateCheckboxErrorMessage","formErrorMessage","onCollectionTime","updateOnCollectionTime","hasContaminatedSticker","updateHasContaminatedSticker","isCorrectWeek","updateIsCorrectWeek","form","filter","item","handleCheckboxChange","comments","emailAddress","phoneNo","assessmentNumber","replaceAll","customerNumber","missedCollectionDetails","otherBinsMissed","isMUD","disabled","StyledSelect","dropdownItems","defaultValue","tabIndex","strokeWidth","stroke","strokeLinecap","strokeLinejoin","points","Marker","Map","initialLatLng","isDraggable","updateIsDraggable","markerLatLng","updateMarkerLatLng","zoomPosition","updateZoomPosition","centerPosition","updateCenterPosition","serviceRequestLatLng","useMemo","bootstrapURLKeys","center","zoom","draggable","options","scrollwheel","fullscreenControl","onChildMouseDown","onChildMouseMove","hoverKey","childProps","mouse","onChildMouseUp","IllegalDumpingPath","wasteDetails","wasteDescription","approxAmount","occurredPreviously","hazardousItems","didWitness","whoDumped","PublicLitterBinsPath","publicLitterType","LooseLitterPath","looseLitterType","envConfig","requireLogin","apiBaseUrl","keys","createServiceRequestKey","checkAddressKey","axios","defaults","baseURL","apiService","createServiceRequest","queryParams","env","code","post","params","response","checkAddress","address","street","postcode","assessmentNo","customerId","get","Home","initialState","updateHasCompletedForm","updateFormErrorMessage","updateIsLoading","handleResponse","onSubmitWithCheckboxes","validateCheckboxes","validateResidentOrRatepayer","serviceRequestWithServiceString","assign","toString","status","parseInt","data","push","length","AnimatePresence","exitBeforeEnter","App","isLoggedIn","updateLogIn","location","useLocation","exact","path","ReactDOM","render","StrictMode","basename","document","getElementById"],"mappings":"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","file":"static/js/main.375ed648.chunk.js","sourcesContent":["import { useState } from \"react\";\r\n\r\ninterface IDevLogin {\r\n  updateLogin: Function;\r\n}\r\n\r\nconst DevLogin: React.FC<IDevLogin> = ({ updateLogin }: IDevLogin) => {\r\n  const [username, updateUsername] = useState(\"\");\r\n  const [password, updatePassword] = useState(\"\");\r\n  const [error, updateError] = useState(\"\");\r\n  const { REACT_APP_USERNAME } = process.env;\r\n  const { REACT_APP_PASSWORD } = process.env;\r\n\r\n  function handleSubmit() {\r\n    if (username === REACT_APP_USERNAME && password === REACT_APP_PASSWORD) {\r\n      updateLogin(true);\r\n      return;\r\n    }\r\n    updateError(\"Incorrect username or password\");\r\n  }\r\n\r\n  return (\r\n    <div\r\n      className=\"h-screen w-screen bg-gray-50 flex flex-col items-center justify-center\"\r\n      onKeyPress={(e) => {\r\n        if (e.key === \"Enter\") {\r\n          handleSubmit();\r\n        }\r\n      }}\r\n    >\r\n      <form\r\n        className=\"flex flex-col items-center px-8 py-6 background-white-ie-fix shadow-xl border border-gray-300 rounded-lg\"\r\n        onSubmit={(e) => {\r\n          e.preventDefault();\r\n          handleSubmit();\r\n        }}\r\n      >\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Username\"\r\n          className=\"p-2 bg-gray-200 border border-black-true\"\r\n          onChange={(e) => updateUsername(e.target.value)}\r\n        />\r\n        <input\r\n          type=\"password\"\r\n          placeholder=\"Password\"\r\n          className=\"mt-2 p-2 bg-gray-200 border border-black-true\"\r\n          onChange={(e) => updatePassword(e.target.value)}\r\n        />\r\n        {error && <p className=\"mt-2 text-red-600\">{error}</p>}\r\n        <button type=\"submit\" className=\"mt-4 px-4 py-2 border border-black-true \">\r\n          Login\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DevLogin;\r\n","const Footer: React.FC = () => {\r\n  return (\r\n    <div className=\"bg-tcc-grey w-full py-20 sm:py-12\">\r\n      <div className=\"w-11/12 md:w-8/12 mx-auto flex flex-col-reverse sm:flex-row items-center sm:items-end justify-center sm:justify-between\">\r\n        <div className=\"flex flex-col items-start justify-end\">\r\n          <a href=\"https://www.envirowaste.co.nz/assets/TCCPortal/Website-Privacy-Statement.pdf\">\r\n            <p className=\"body-font text-white\">Privacy policy</p>\r\n          </a>\r\n          <a href=\"https://www.envirowaste.co.nz/assets/TCCPortal/Website-Terms-of-Use-Kerbside-Portal.pdf\">\r\n            <p className=\"body-font text-white\">Website terms of use</p>\r\n          </a>\r\n          <a href=\"https://www.tauranga.govt.nz/Portals/0/data/living/rubbish_recycling/files/garden-waste-terms-conditions.pdf\">\r\n            <p className=\"body-font text-white\">Terms and conditions</p>\r\n          </a>\r\n        </div>\r\n        <div className=\"flex flex-col items-start mb-10 sm:mb-0\">\r\n          <p className=\"confirmation-font mb-4 text-white\">Need help?</p>\r\n          <a href=\"tel:+6475777000\">\r\n            <p className=\"body-font text-white\">+64 7 577 7000</p>\r\n          </a>\r\n          <a href=\"mailto:info@tauranga.govt.nz\">\r\n            <p className=\"body-font text-white\">info@tauranga.govt.nz</p>\r\n          </a>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","export class FixedServiceRequestTypes {\r\n  static DAMAGED_BIN = \"DamagedBin\";\r\n  static MISSING_BIN = \"MissingBin\";\r\n  static ADDITIONAL_BIN = \"AdditionalBin\";\r\n  static MISSED_COLLECTION = \"MissedCollection\";\r\n  static ILLEGAL_DUMPING = \"IllegalDumping\";\r\n  static PUBLIC_LITTER_BINS = \"PublicLitterBins\";\r\n  static LOOSE_LITTER = \"LooseLitter\";\r\n\r\n  static serviceRequestList = {\r\n    [FixedServiceRequestTypes.DAMAGED_BIN]: \"Damaged bin\",\r\n    [FixedServiceRequestTypes.MISSING_BIN]: \"Missing bin\",\r\n    [FixedServiceRequestTypes.ADDITIONAL_BIN]: \"Additional bin and garden waste service sign-up\",\r\n    [FixedServiceRequestTypes.MISSED_COLLECTION]: \"Missed collection\",\r\n    [FixedServiceRequestTypes.ILLEGAL_DUMPING]: \"Illegal dumping\",\r\n    [FixedServiceRequestTypes.PUBLIC_LITTER_BINS]: \"Public litter bins\",\r\n    [FixedServiceRequestTypes.LOOSE_LITTER]: \"Loose litter\",\r\n  };\r\n}\r\n\r\nexport class FixedServiceTypes {\r\n  static RUBBISH = \"Rubbish\";\r\n  static RECYCLING = \"Recycling\";\r\n  static FOOD = \"Food\";\r\n  static GLASS = \"Glass\";\r\n  static GARDEN_WASTE = \"GardenWaste\";\r\n\r\n  static serviceList = {\r\n    [FixedServiceTypes.RUBBISH]: \"Rubbish\",\r\n    [FixedServiceTypes.RECYCLING]: \"Recycling\",\r\n    [FixedServiceTypes.FOOD]: \"Food\",\r\n    [FixedServiceTypes.GLASS]: \"Glass\",\r\n    [FixedServiceTypes.GARDEN_WASTE]: \"Garden waste service sign-up\",\r\n  };\r\n}\r\n\r\nexport class FixedPublicLitterTypes {\r\n  static OVERFLOWING_PUBLIC_BINS = \"OverflowingPublicBins\";\r\n  static ODOROUS_PUBLIC_BINS = \"OdorousPublicBins\";\r\n  static DAMAGED_PUBLIC_BINS = \"DamagedOrVandalisedPublicBins\";\r\n\r\n  static publicLitterBinsList = {\r\n    [FixedPublicLitterTypes.OVERFLOWING_PUBLIC_BINS]: \"Overflowing public bins\",\r\n    [FixedPublicLitterTypes.ODOROUS_PUBLIC_BINS]: \"Odorous public bins\",\r\n    [FixedPublicLitterTypes.DAMAGED_PUBLIC_BINS]: \"Damaged or vandalised public bins\",\r\n  };\r\n}\r\n\r\nexport class FixedLooseLitterTypes {\r\n  static RESERVES = \"Reserves\";\r\n  static CARPARK = \"Carpark\";\r\n  static WALKWAY = \"Walkway\";\r\n  static FOOTPATH = \"Footpath\";\r\n  static BERM = \"Berm\";\r\n  static OTHER = \"Other\";\r\n\r\n  static looseLitterList = {\r\n    [FixedLooseLitterTypes.RESERVES]: \"Reserves\",\r\n    [FixedLooseLitterTypes.CARPARK]: \"Carpark\",\r\n    [FixedLooseLitterTypes.WALKWAY]: \"Walkway\",\r\n    [FixedLooseLitterTypes.FOOTPATH]: \"Footpath\",\r\n    [FixedLooseLitterTypes.BERM]: \"Berm\",\r\n    [FixedLooseLitterTypes.OTHER]: \"Other\",\r\n  };\r\n}\r\n\r\n// Handles all entry and exit animations for the service request paths\r\nexport const animationVariants = {\r\n  initial: {\r\n    opacity: 0,\r\n    scale: 0.9,\r\n  },\r\n  in: {\r\n    opacity: 1,\r\n    scale: 1,\r\n    transition: {\r\n      ease: \"easeInOut\",\r\n      duration: 0.2,\r\n      staggerChildren: 0.075,\r\n    },\r\n  },\r\n  out: {\r\n    opacity: 0,\r\n    transition: { duration: 0.075 },\r\n  },\r\n};\r\n","import { animationVariants } from \"../core/constants/constants\";\r\nimport { IConfirmation } from \"../core/types/types\";\r\nimport { useHistory } from \"react-router\";\r\nimport { motion } from \"framer-motion\";\r\nimport { useEffect } from \"react\";\r\n\r\nconst Confirmation: React.FC<IConfirmation> = ({ hasCompletedForm, serviceRequest }) => {\r\n  const history = useHistory();\r\n\r\n  // Prevent manual navigation to page\r\n  useEffect(() => {\r\n    if (!hasCompletedForm) {\r\n      history.replace(\"/\");\r\n    }\r\n  }, [history, hasCompletedForm]);\r\n\r\n  // Scroll to top when component mounts\r\n  useEffect(() => {\r\n    window.scrollTo({ top: 0, left: 0, behavior: \"smooth\" });\r\n  }, []);\r\n\r\n  return (\r\n    <motion.div\r\n      variants={animationVariants}\r\n      initial=\"initial\"\r\n      animate=\"in\"\r\n      exit=\"out\"\r\n      className=\"sm:mt-10 mb-10 w-11/12 md:w-8/12\"\r\n    >\r\n      <div className=\"py-12 my-auto mx-auto flex flex-col items-start justify-start xl:w-4/5 2xl:w-6/12\">\r\n        <motion.h1\r\n          variants={animationVariants}\r\n          className=\"heading-font mb-6 xl:mb-10 w-full text-left\"\r\n        >\r\n          Thank you\r\n        </motion.h1>\r\n        <motion.p variants={animationVariants} className=\"mb-4 confirmation-font\">\r\n          We will attend to this matter as soon as possible and will contact you if required. If\r\n          this matter is urgent, please phone the number at the bottom of this page.\r\n        </motion.p>\r\n        <motion.p variants={animationVariants} className=\"mb-4 confirmation-font\">\r\n          {`Your service request number is #${serviceRequest.ticketNumber}.`}\r\n        </motion.p>\r\n        <motion.p variants={animationVariants} className=\"mb-4 confirmation-font\">\r\n          Please keep this number as a reference for all enquiries related to this matter.\r\n        </motion.p>\r\n        <motion.p variants={animationVariants} className=\"mb-10 xl:mb-14 confirmation-font\">\r\n          Note: If you have requested an additional bin or signed up for the garden waste service,\r\n          We will contact you shortly to organise an invoice for this additional service to the\r\n          address you have provided.\r\n        </motion.p>\r\n        <motion.div\r\n          variants={animationVariants}\r\n          className=\"mx-auto sm:mx-0 grid gap-4 sm:grid-cols-2 overflow-visible\"\r\n        >\r\n          <a\r\n            href=\"/\"\r\n            className=\"body-font text-center text-white bg-tcc-green transition duration-300 ease-in-out hover:bg-tcc-green-lighter rounded px-4 py-2.5 md:py-4 focus:outline-none border border-transparent focus:border-gray-800\"\r\n          >\r\n            Request another service\r\n          </a>\r\n          <a\r\n            href=\"https://www.tauranga.govt.nz/\"\r\n            className=\"body-font text-center text-white bg-tcc-green transition duration-300 ease-in-out hover:bg-tcc-green-lighter rounded px-4 py-2.5 md:py-4 focus:outline-none border border-transparent focus:border-gray-800\"\r\n          >\r\n            Rubbish & recycling homepage\r\n          </a>\r\n        </motion.div>\r\n      </div>\r\n    </motion.div>\r\n  );\r\n};\r\n\r\nexport default Confirmation;\r\n","const NotFound: React.FC = () => {\r\n  return (\r\n    <div className=\"sm:mt-10 mb-10 w-11/12 md:w-8/12 xl:6/12\">\r\n      <div className=\"py-12 my-auto mx-auto flex flex-col items-start justify-start xl:w-4/5 2xl:w-6/12\">\r\n        <h1 className=\"heading-font mb-6 xl:mb-10 w-full text-left\">Page Not Found</h1>\r\n        <p className=\"mb-10 xl:mb-16 confirmation-font\">\r\n          We couldn't find the page you were looking for. Click the button below to return to the\r\n          homepage.\r\n        </p>\r\n\r\n        <a\r\n          href=\"/\"\r\n          className=\"mr-4 body-font text-white bg-tcc-green transition duration-300 ease-in-out hover:bg-tcc-green-lighter rounded px-6 py-2.5 md:px-10 md:py-3 focus:outline-none border border-transparent focus:border-gray-800\"\r\n        >\r\n          Take me home\r\n        </a>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NotFound;\r\n","const Nav: React.FC = () => {\r\n  return (\r\n    <div className=\"w-full h-24 md:h-24 bg-white flex flex-col items-center border-b border-gray-100 shadow\">\r\n      <div className=\"h-full w-11/12 md:w-8/12 flex flex-row items-center justify-center sm:justify-start\">\r\n        <img src=\"tcc-logo.png\" alt=\"Tauranga City Council logo\" className=\"h-16 md:h-20\" />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Nav;\r\n","import React from \"react\";\r\nimport \"./CircleSpinner.css\";\r\n\r\nconst CircleSpinner: React.FC = () => {\r\n  return (\r\n    <div className=\"h-full\">\r\n      <div className=\"lds-ring flex flex-col items-center justify-center h-full\">\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CircleSpinner;\r\n","const ExclamationMark: React.FC = () => {\r\n  return (\r\n    <svg\r\n      version=\"1.1\"\r\n      id=\"Layer_1\"\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      xmlnsXlink=\"http://www.w3.org/1999/xlink\"\r\n      width=\"25px\"\r\n      height=\"25px\"\r\n      viewBox=\"0 0 286.054 286.054\"\r\n      xmlSpace=\"preserve\"\r\n    >\r\n      <g>\r\n        <path\r\n          fill=\"#ef4444\"\r\n          d=\"M143.027,0C64.04,0,0,64.04,0,143.027c0,78.996,64.04,143.027,143.027,143.027\r\n          c78.996,0,143.027-64.022,143.027-143.027C286.054,64.04,222.022,0,143.027,0z M143.027,259.236\r\n          c-64.183,0-116.209-52.026-116.209-116.209S78.844,26.818,143.027,26.818s116.209,52.026,116.209,116.209\r\n          S207.21,259.236,143.027,259.236z M143.036,62.726c-10.244,0-17.995,5.346-17.995,13.981v79.201c0,8.644,7.75,13.972,17.995,13.972\r\n          c9.994,0,17.995-5.551,17.995-13.972V76.707C161.03,68.277,153.03,62.726,143.036,62.726z M143.036,187.723\r\n          c-9.842,0-17.852,8.01-17.852,17.86c0,9.833,8.01,17.843,17.852,17.843s17.843-8.01,17.843-17.843\r\n          C160.878,195.732,152.878,187.723,143.036,187.723z\"\r\n        />\r\n      </g>\r\n      <g></g>\r\n      <g></g>\r\n      <g></g>\r\n      <g></g>\r\n      <g></g>\r\n      <g></g>\r\n      <g></g>\r\n      <g></g>\r\n      <g></g>\r\n      <g></g>\r\n      <g></g>\r\n      <g></g>\r\n      <g></g>\r\n      <g></g>\r\n      <g></g>\r\n    </svg>\r\n  );\r\n};\r\n\r\nexport default ExclamationMark;\r\n","import React, { useState } from \"react\";\r\nimport PlacesAutocomplete, { geocodeByAddress, getLatLng } from \"react-places-autocomplete\";\r\nimport CircleSpinner from \"../CircleSpinner/CircleSpinner\";\r\nimport { IAddressAutocomplete } from \"../../core/types/types\";\r\nimport ExclamationMark from \"../ExclamationMark/ExclamationMark\";\r\n\r\nconst AddressAutocomplete: React.FC<IAddressAutocomplete> = ({\r\n  label,\r\n  serviceRequest,\r\n  updateServiceRequest,\r\n  addressErrorMessage,\r\n  updateAddressErrorMessage,\r\n  isValidAddress,\r\n  updateIsValidAddress,\r\n}: IAddressAutocomplete) => {\r\n  const [isLoading, updateLoading] = useState(false);\r\n  const errors = {\r\n    addressNotFound:\r\n      \"We were unable to find your address. Please try again or contact us on 07 577 7000.\",\r\n    apiError: \"We were unable to make this request. Please try again or contact us on 07 577 7000.\",\r\n    noAddressSelected: \"You need to select an address from the dropdown menu.\",\r\n  };\r\n\r\n  // handles user typing into the address autocomplete field\r\n  function handleChange(value: string) {\r\n    updateAddressErrorMessage(null);\r\n    updateIsValidAddress(false);\r\n    updateServiceRequest({\r\n      ...serviceRequest,\r\n      addressComponents: {\r\n        streetNumber: null,\r\n        roadName: null,\r\n        suburbName: null,\r\n        cityName: null,\r\n        regionName: null,\r\n        postCode: null,\r\n        latitude: null,\r\n        longitude: null,\r\n        formattedAddress: value,\r\n      },\r\n    });\r\n  }\r\n\r\n  // Handles the selection of an address, checks for valid post codes\r\n  async function handleSelect(value: string) {\r\n    if (value === \"\") return;\r\n    updateLoading(true);\r\n    updateAddressErrorMessage(null);\r\n\r\n    try {\r\n      const [fullAddress] = await geocodeByAddress(value);\r\n      const subpremise = extractAddressComponents(fullAddress.address_components, \"subpremise\");\r\n      const roadName = extractAddressComponents(fullAddress.address_components, \"route\");\r\n      const suburbName = extractAddressComponents(fullAddress.address_components, \"sublocality\");\r\n      const cityName = extractAddressComponents(fullAddress.address_components, \"locality\");\r\n      const postCode = extractAddressComponents(fullAddress.address_components, \"postal_code\");\r\n      const regionName = extractAddressComponents(fullAddress.address_components, \"administrative_area_level_1\"); // prettier-ignore\r\n      const streetNumber = extractAddressComponents(fullAddress.address_components, \"street_number\"); // prettier-ignore\r\n      const latLng = await getLatLng(fullAddress);\r\n      const { lat: latitude, lng: longitude } = latLng;\r\n\r\n      var formattedSubpremise = subpremise === \"\" ? \"\" : subpremise + \"/\";\r\n\r\n      updateAddressErrorMessage(null);\r\n      updateIsValidAddress(true);\r\n      updateServiceRequest({\r\n        ...serviceRequest,\r\n        addressComponents: {\r\n          ...serviceRequest.addressComponents,\r\n          streetNumber: formattedSubpremise + streetNumber,\r\n          roadName: roadName,\r\n          suburbName: suburbName,\r\n          cityName: cityName,\r\n          regionName: regionName,\r\n          postCode: postCode,\r\n          latitude: latitude,\r\n          longitude: longitude,\r\n          formattedAddress: fullAddress.formatted_address,\r\n        },\r\n      });\r\n    } catch (error) {\r\n      updateAddressErrorMessage(errors.apiError);\r\n    } finally {\r\n      updateLoading(false);\r\n    }\r\n  }\r\n\r\n  // Pull parts of an address out of the Google Maps geocoder result for API consumption\r\n  function extractAddressComponents(\r\n    components: google.maps.GeocoderAddressComponent[],\r\n    target: string\r\n  ) {\r\n    const { long_name: addressComponent = \"\" } =\r\n      components.find((c) => c.types.includes(target)) || {};\r\n    return addressComponent === null ? \"\" : addressComponent;\r\n  }\r\n\r\n  // Clicking on an address does not set the address field value or fire handleSelect they must be done manually.\r\n  function handleClick(value: string) {\r\n    updateServiceRequest({\r\n      ...serviceRequest,\r\n      addressComponents: {\r\n        ...serviceRequest.addressComponents,\r\n        formattedAddress: value,\r\n      },\r\n    });\r\n    handleSelect(value);\r\n  }\r\n\r\n  // Handles for when a user clicks or tabs out of the dropdown menu without selecting an address\r\n  function handleBlur(e: React.SyntheticEvent) {\r\n    if (\r\n      isLoading ||\r\n      serviceRequest.addressComponents.formattedAddress === null ||\r\n      serviceRequest.addressComponents.formattedAddress === \"\" ||\r\n      isValidAddress ||\r\n      addressErrorMessage !== null\r\n    ) {\r\n      return;\r\n    }\r\n    updateAddressErrorMessage(errors.noAddressSelected);\r\n  }\r\n\r\n  // Restricts autofilled addresses to NZ only\r\n  const searchOptions = {\r\n    types: [\"address\"],\r\n    componentRestrictions: { country: [\"nz\"] },\r\n  };\r\n\r\n  // Classes for address box, suggestion boxes and final suggestion box\r\n  const boxStyle =\r\n    \"w-full pl-3 py-3 focus:outline-none text-base placeholder-gray-500 text-gray-800\";\r\n  const addressBox = `${boxStyle} transition duration-300 ease-in-out pr-3 overflow-ellipsis whitespace-nowrap overflow-x-hidden focus:outline-none rounded border border-gray-300 shadow-sm focus:border-gray-800`;\r\n  const suggestionBoxes = `${boxStyle} border-t border-l border-r border-gray-300 bg-white hover:bg-gray-100 flex flex-row items-center min-w-0 rounded-none`;\r\n  const firstBox = `${suggestionBoxes}`;\r\n\r\n  return (\r\n    <div className=\"w-full h-full z-50 pb-4\">\r\n      <PlacesAutocomplete\r\n        value={\r\n          serviceRequest.addressComponents?.formattedAddress === null\r\n            ? \"\"\r\n            : serviceRequest.addressComponents.formattedAddress\r\n        }\r\n        onSelect={handleSelect}\r\n        searchOptions={searchOptions}\r\n        onChange={(value) => handleChange(value)}\r\n      >\r\n        {({ getInputProps, suggestions, loading }) => (\r\n          <div\r\n            className=\"relative w-full h-full bg-white rounded inline-block\"\r\n            onBlur={(e) => handleBlur(e)}\r\n          >\r\n            <input\r\n              data-lpignore=\"true\"\r\n              name=\"StreetAddress\"\r\n              placeholder={label}\r\n              title={label}\r\n              id=\"StreetAddress\"\r\n              {...getInputProps({\r\n                className: `${addressBox}`,\r\n                autoComplete: \"none\",\r\n                required: true,\r\n                results: 3,\r\n              })}\r\n            />\r\n            {addressErrorMessage && (\r\n              <div className=\"m-4 p-2 mb-4 border border-red-500 rounded flex items-center\">\r\n                <p className=\"text-red-500 flex-grow mr-4\">{addressErrorMessage}</p>\r\n                <div className=\"flex-shrink-0\">\r\n                  <ExclamationMark />\r\n                </div>\r\n              </div>\r\n            )}\r\n            {loading || isLoading ? (\r\n              <div className=\"absolute right-2 top-3 background-white-ie-fix w-8 h-6\">\r\n                <CircleSpinner />\r\n              </div>\r\n            ) : (\r\n              <div></div>\r\n            )}\r\n            <div className=\"absolute w-full shadow-md z-50\">\r\n              {suggestions.map((suggestion, i) => {\r\n                // restricts number of autocomplete suggestions for UI reasons\r\n                if (i < 3) {\r\n                  const style = suggestion.active ? `bg-gray-100 cursor-pointer` : \"cursor-pointer\";\r\n                  return (\r\n                    <div\r\n                      key={i}\r\n                      className={i === 0 ? `${firstBox} ${style}` : `${suggestionBoxes} ${style}`}\r\n                      onMouseDown={() => handleClick(suggestion.description)}\r\n                    >\r\n                      <p className=\"w-full truncate\">{suggestion.description}</p>\r\n                    </div>\r\n                  );\r\n                }\r\n                return <div key={i}></div>;\r\n              })}\r\n            </div>\r\n          </div>\r\n        )}\r\n      </PlacesAutocomplete>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddressAutocomplete;\r\n","import { IStyledCheckboxes } from \"../../core/types/types\";\r\nimport ExclamationMark from \"../ExclamationMark/ExclamationMark\";\r\n\r\nconst StyledCheckboxes: React.FC<IStyledCheckboxes> = ({\r\n  serviceRequest,\r\n  label,\r\n  serviceList,\r\n  onChange,\r\n  checkboxErrorMessage,\r\n}) => {\r\n  return (\r\n    <div className=\"flex flex-col items-start w-full mb-4 bg-white rounded px-4 py-3 border border-gray-300 shadow-sm\">\r\n      <label htmlFor={label} className=\"text-base text-gray-500 pb-4\">\r\n        {label}\r\n      </label>\r\n      <div className=\"grid grid-cols-2 gap-1 w-full\">\r\n        {Object.entries(serviceList).map(\r\n          ([itemKey, itemValue]: [string, string], index: number) => {\r\n            return (\r\n              <div className=\"flex flex-row items-center w-full\" key={index}>\r\n                <input\r\n                  id={itemKey}\r\n                  type=\"checkbox\"\r\n                  name={itemKey}\r\n                  value={itemKey}\r\n                  title={label}\r\n                  checked={serviceRequest.service?.includes(itemKey) ? true : false}\r\n                  className=\"mr-2\"\r\n                  onChange={onChange}\r\n                />\r\n                <label htmlFor={itemKey} className=\"whitespace-nowrap text-base text-gray-800\">\r\n                  {itemValue}\r\n                </label>\r\n              </div>\r\n            );\r\n          }\r\n        )}\r\n      </div>\r\n      {checkboxErrorMessage && (\r\n        <div className=\"mt-4 p-2 w-full border border-red-500 rounded flex items-center\">\r\n          <p className=\"text-base text-red-500 flex-grow mr-4\">{checkboxErrorMessage}</p>\r\n          <div className=\"mr-2 flex-shrink-0\">\r\n            <ExclamationMark />\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StyledCheckboxes;\r\n","import { IStyledInput } from \"../../core/types/types\";\r\n\r\nconst StyledTextArea: React.FC<IStyledInput> = ({ label, required = true, onChange }) => {\r\n  return (\r\n    <div className=\"h-full w-full mb-4 flex flex-col\">\r\n      {/* <label htmlFor={label} className=\"subheading-font pb-2\">\r\n        {label}\r\n      </label> */}\r\n      <textarea\r\n        id={label}\r\n        name={label}\r\n        title={label}\r\n        placeholder={label}\r\n        onChange={onChange}\r\n        required={required}\r\n        className=\"border border-gray-300 pl-3 py-3 transition duration-300 ease-in-out shadow-sm rounded text-base focus:outline-none focus:border-gray-800 bg-white placeholder-gray-500 text-gray-800\"\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StyledTextArea;\r\n","import { IStyledRadio } from \"../../core/types/types\";\r\n\r\nconst StyledRadio: React.FC<IStyledRadio> = ({ id, label, onChange, required = true }) => {\r\n  return (\r\n    <div className=\"flex flex-col items-start w-full mb-4 bg-white rounded px-4 py-3 border border-gray-300 shadow-sm\">\r\n      <label htmlFor={id} className=\"text-base text-gray-500 pb-4\">\r\n        {label}\r\n      </label>\r\n      <div className=\"flex flex-col items-start\">\r\n        <div className=\"grid grid-cols-2 gap-10\" onChange={onChange}>\r\n          <label htmlFor={id + \"true\"} className=\"flex flex-row items-center\">\r\n            <input\r\n              id={id + \"true\"}\r\n              name={id}\r\n              type=\"radio\"\r\n              value=\"true\"\r\n              className=\"mr-1\"\r\n              required={required}\r\n            />\r\n            Yes\r\n          </label>\r\n          <label htmlFor={id + \"false\"} className=\"flex flex-row items-center\">\r\n            <input id={id + \"false\"} name={id} type=\"radio\" value=\"false\" className=\"mr-1\" />\r\n            No\r\n          </label>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StyledRadio;\r\n","import { IStyledInput } from \"../../core/types/types\";\r\n\r\nconst StyledInput: React.FC<IStyledInput> = ({\r\n  type = \"text\",\r\n  label,\r\n  required = true,\r\n  onChange,\r\n  value,\r\n}) => {\r\n  return (\r\n    <div className=\"h-full w-full mb-4 flex flex-col\">\r\n      {/* <label htmlFor={label} className=\"subheading-font pb-2\">\r\n        {label}\r\n      </label> */}\r\n      <input\r\n        type={type}\r\n        id={label}\r\n        name={label}\r\n        placeholder={label}\r\n        onChange={onChange}\r\n        required={required}\r\n        title={label}\r\n        value={value}\r\n        className=\"border border-gray-300 shadow-sm pl-3 py-3 transition duration-300 ease-in-out rounded text-base focus:outline-none focus:border-gray-800 bg-white placeholder-gray-500 text-gray-800\"\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StyledInput;\r\n","import \"./DotSpinner.css\";\r\n\r\nconst DotSpinner: React.FC = () => {\r\n  return (\r\n    <div className=\"w-full flex flex-row items-center justify-center\">\r\n      <div className=\"spinner flex flex-row items-center justify-center\">\r\n        {/* Invisible text with same font allows height of containing button to remain the same */}\r\n        <p className=\"body-font opacity-0\">.</p>\r\n        <div className=\"bounce1\"></div>\r\n        <div className=\"bounce2\"></div>\r\n        <div className=\"bounce3\"></div>\r\n        <p className=\"body-font opacity-0\">.</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DotSpinner;\r\n","function convertStrToBool(value: string) {\r\n  return value === \"true\" ? true : false;\r\n}\r\n\r\nexport const helpers = {\r\n  convertStrToBool: convertStrToBool,\r\n};\r\n","import { SyntheticEvent, useState } from \"react\";\r\nimport { IStandardServicePath } from \"../../core/types/types\";\r\nimport AddressAutocomplete from \"../../components/AddressAutocomplete/AddressAutocomplete\";\r\nimport ExclamationMark from \"../../components/ExclamationMark/ExclamationMark\";\r\nimport StyledCheckboxes from \"../../components/StyledInputs/StyledCheckboxes\";\r\nimport StyledTextArea from \"../../components/StyledInputs/StyledTextArea\";\r\nimport StyledRadio from \"../../components/StyledInputs/StyledRadio\";\r\nimport StyledInput from \"../../components/StyledInputs/StyledInput\";\r\nimport DotSpinner from \"../../components/DotSpinner/DotSpinner\";\r\nimport { motion } from \"framer-motion\";\r\nimport {\r\n  animationVariants,\r\n  FixedServiceRequestTypes,\r\n  FixedServiceTypes,\r\n} from \"../../core/constants/constants\";\r\nimport { helpers } from \"../../core/services/helpers\";\r\n\r\nconst StandardServicePath: React.FC<IStandardServicePath> = ({\r\n  serviceRequest,\r\n  updateServiceRequest,\r\n  onSubmit,\r\n  checkboxErrorMessage,\r\n  updateCheckboxErrorMessage,\r\n  isLoading,\r\n  formErrorMessage,\r\n}) => {\r\n  const [addressErrorMessage, updateAddressErrorMessage] = useState<string | null>(null);\r\n  const [isValidAddress, updateIsValidAddress] = useState(false);\r\n  const [onCollectionTime, updateOnCollectionTime] = useState<boolean | null>(null);\r\n  const [hasContaminatedSticker, updateHasContaminatedSticker] = useState<boolean | null>(null);\r\n  const [isCorrectWeek, updateIsCorrectWeek] = useState<boolean | null>(null);\r\n\r\n  // Update service list in service request state when a checkbox is ticked or unticked\r\n  function handleCheckboxChange(e: SyntheticEvent) {\r\n    updateCheckboxErrorMessage(null);\r\n\r\n    const value = (e.target as HTMLInputElement).value;\r\n    if (serviceRequest.service === null) {\r\n      updateServiceRequest({\r\n        ...serviceRequest,\r\n        service: [value],\r\n      });\r\n    } else {\r\n      if (!serviceRequest.service?.includes(value)) {\r\n        updateServiceRequest({\r\n          ...serviceRequest,\r\n          service: [...serviceRequest.service, value],\r\n        });\r\n      } else {\r\n        updateServiceRequest({\r\n          ...serviceRequest,\r\n          service: serviceRequest.service.filter((item) => item !== value),\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  return (\r\n    <motion.form\r\n      variants={animationVariants}\r\n      initial=\"initial\"\r\n      animate=\"in\"\r\n      exit=\"out\"\r\n      className=\"flex flex-col items-center w-full\"\r\n      onSubmit={onSubmit}\r\n    >\r\n      <motion.div variants={animationVariants} className=\"w-full\">\r\n        <StyledCheckboxes\r\n          serviceRequest={serviceRequest}\r\n          label={\r\n            serviceRequest.serviceRequest === FixedServiceRequestTypes.ADDITIONAL_BIN\r\n              ? \"Select the services that relate to your request. Please note that you must be a ratepayer to request any additional bins.\"\r\n              : \"Select the services that relate to your request.\"\r\n          }\r\n          onChange={(e) => {\r\n            handleCheckboxChange(e);\r\n          }}\r\n          serviceList={FixedServiceTypes.serviceList}\r\n          checkboxErrorMessage={checkboxErrorMessage}\r\n        />\r\n      </motion.div>\r\n      {serviceRequest.serviceRequest === FixedServiceRequestTypes.DAMAGED_BIN ? (\r\n        <motion.div variants={animationVariants} className=\"w-full\">\r\n          <StyledTextArea\r\n            label=\"Please describe the damage and add any additional comments\"\r\n            required={true}\r\n            onChange={(e) =>\r\n              updateServiceRequest({\r\n                ...serviceRequest,\r\n                comments: (e.target as HTMLInputElement).value,\r\n              })\r\n            }\r\n          />\r\n        </motion.div>\r\n      ) : (\r\n        <motion.div variants={animationVariants} className=\"w-full\">\r\n          <StyledTextArea\r\n            label=\"Add any additional comments (optional)\"\r\n            required={false}\r\n            onChange={(e) =>\r\n              updateServiceRequest({\r\n                ...serviceRequest,\r\n                comments: (e.target as HTMLInputElement).value,\r\n              })\r\n            }\r\n          />\r\n        </motion.div>\r\n      )}\r\n      <motion.div variants={animationVariants} className=\"w-full\">\r\n        <StyledInput\r\n          label=\"Enter your full name\"\r\n          onChange={(e) =>\r\n            updateServiceRequest({\r\n              ...serviceRequest,\r\n              name: (e.target as HTMLInputElement).value,\r\n            })\r\n          }\r\n        />\r\n      </motion.div>\r\n      <motion.div variants={animationVariants} className=\"w-full\">\r\n        <StyledInput\r\n          label=\"Enter your email address\"\r\n          type=\"email\"\r\n          onChange={(e) =>\r\n            updateServiceRequest({\r\n              ...serviceRequest,\r\n              emailAddress: (e.target as HTMLInputElement).value,\r\n            })\r\n          }\r\n        />\r\n      </motion.div>\r\n      <motion.div variants={animationVariants} className=\"w-full\">\r\n        <StyledInput\r\n          label=\"Enter your phone number\"\r\n          type=\"number\"\r\n          onChange={(e) =>\r\n            updateServiceRequest({\r\n              ...serviceRequest,\r\n              phoneNo: (e.target as HTMLInputElement).value,\r\n            })\r\n          }\r\n        />\r\n      </motion.div>\r\n      {serviceRequest.serviceRequest === FixedServiceRequestTypes.ADDITIONAL_BIN && (\r\n        <div className=\"w-full\">\r\n          <motion.div variants={animationVariants} className=\"w-full\">\r\n            <StyledInput\r\n              label=\"Enter your rates valuation number (no special characters)\"\r\n              // this value is required to prevent a user from entering special characters\r\n              // which causes the API to parse it as null and handle the request\r\n              // as though it were only wanting to validate the address\r\n              value={\r\n                serviceRequest.assessmentNumber === null\r\n                  ? \"\"\r\n                  : serviceRequest.assessmentNumber.replaceAll(/[^A-Za-z0-9]/g, \"\")\r\n              }\r\n              onChange={(e) =>\r\n                updateServiceRequest({\r\n                  ...serviceRequest,\r\n                  assessmentNumber: (e.target as HTMLInputElement).value,\r\n                })\r\n              }\r\n            />\r\n          </motion.div>\r\n          <motion.div variants={animationVariants} className=\"w-full\">\r\n            <StyledInput\r\n              label=\"Enter your customer number (no special characters)\"\r\n              // this value is required to prevent a user from entering special characters\r\n              // which causes the API to parse it as null and handle the request\r\n              // as though it were only wanting to validate the address\r\n              value={\r\n                serviceRequest.customerNumber === null\r\n                  ? \"\"\r\n                  : serviceRequest.customerNumber.replaceAll(/[^A-Za-z0-9]/g, \"\")\r\n              }\r\n              onChange={(e) =>\r\n                updateServiceRequest({\r\n                  ...serviceRequest,\r\n                  customerNumber: (e.target as HTMLInputElement).value,\r\n                })\r\n              }\r\n            />\r\n          </motion.div>\r\n        </div>\r\n      )}\r\n      {serviceRequest.serviceRequest === FixedServiceRequestTypes.MISSED_COLLECTION && (\r\n        <div className=\"w-full\">\r\n          <motion.div variants={animationVariants} className=\"w-full\">\r\n            <StyledRadio\r\n              id=\"collectionTimeRadio\"\r\n              label=\"Was your bin at the collection point by 7:00am?\"\r\n              onChange={(e) =>\r\n                updateOnCollectionTime(\r\n                  helpers.convertStrToBool((e.target as HTMLInputElement).value)\r\n                )\r\n              }\r\n            />\r\n          </motion.div>\r\n          {onCollectionTime === false && (\r\n            <motion.div\r\n              variants={animationVariants}\r\n              className=\"mb-4 bg-white inline-block rounded w-full\"\r\n            >\r\n              <div className=\"m-2 p-2 relative border border-red-500 rounded flex items-center justify-end\">\r\n                <p className=\"mr-0 flex-grow text-red-500 \">\r\n                  Bins need to be at the collection point by 7am to ensure they are collected.\r\n                  Please put your bin(s) out by 7am on your next collection day.\r\n                </p>\r\n                <div className=\"flex-shrink-0 mr-2\">\r\n                  <ExclamationMark />\r\n                </div>\r\n              </div>\r\n            </motion.div>\r\n          )}\r\n          <motion.div variants={animationVariants} className=\"w-full\">\r\n            <StyledRadio\r\n              id=\"contaminationStickerRadio\"\r\n              label=\"Does your bin contain a non-collection tag or a contamination sticker?\"\r\n              onChange={(e) =>\r\n                updateHasContaminatedSticker(\r\n                  helpers.convertStrToBool((e.target as HTMLInputElement).value)\r\n                )\r\n              }\r\n            />\r\n          </motion.div>\r\n          {hasContaminatedSticker === true && (\r\n            <motion.div\r\n              variants={animationVariants}\r\n              className=\"mb-4 bg-white inline-block rounded w-full\"\r\n            >\r\n              <div className=\"m-2 p-2 relative border border-red-500 rounded flex items-center justify-end\">\r\n                <p className=\"mr-0 flex-grow text-red-500 \">\r\n                  Please refer to the tag/sticker applied to your bin for instructions.\r\n                </p>\r\n                <div className=\"flex-shrink-0 mr-2\">\r\n                  <ExclamationMark />\r\n                </div>\r\n              </div>\r\n            </motion.div>\r\n          )}\r\n          <motion.div variants={animationVariants} className=\"w-full\">\r\n            <StyledRadio\r\n              id=\"correctWeekRadio\"\r\n              label=\"Have you double checked that you have put your bin out on the correct collection day/week?\"\r\n              onChange={(e) =>\r\n                updateIsCorrectWeek(helpers.convertStrToBool((e.target as HTMLInputElement).value))\r\n              }\r\n            />\r\n          </motion.div>\r\n          {isCorrectWeek === false && (\r\n            <motion.div\r\n              variants={animationVariants}\r\n              className=\"mb-4 bg-white inline-block rounded w-full\"\r\n            >\r\n              <div className=\"m-2 p-2 border border-red-500 rounded flex items-center justify-end\">\r\n                <p className=\"mr-2 flex-grow text-red-500 \">\r\n                  Please refer to the collection calendar to find out what bins go out on which\r\n                  week. You will need to check the side of your bin to see if you fall in week 1 or\r\n                  week 2.\r\n                </p>\r\n                <div className=\"flex-shrink-0 mr-2\">\r\n                  <ExclamationMark />\r\n                </div>\r\n              </div>\r\n            </motion.div>\r\n          )}\r\n          <motion.div variants={animationVariants} className=\"w-full\">\r\n            <StyledRadio\r\n              id=\"otherBinsMissedRadio\"\r\n              label=\"Have any other bins been missed on your street?\"\r\n              onChange={(e) => {\r\n                updateServiceRequest({\r\n                  ...serviceRequest,\r\n                  missedCollectionDetails: {\r\n                    ...serviceRequest.missedCollectionDetails,\r\n                    otherBinsMissed: helpers.convertStrToBool((e.target as HTMLInputElement).value),\r\n                  },\r\n                });\r\n              }}\r\n            />\r\n          </motion.div>\r\n          <motion.div variants={animationVariants} className=\"w-full\">\r\n            <StyledRadio\r\n              id=\"mudRadio\"\r\n              label=\"Do you live in a retirement village or apartment complex?\"\r\n              onChange={(e) =>\r\n                updateServiceRequest({\r\n                  ...serviceRequest,\r\n                  missedCollectionDetails: {\r\n                    ...serviceRequest.missedCollectionDetails,\r\n                    isMUD: helpers.convertStrToBool((e.target as HTMLInputElement).value),\r\n                  },\r\n                })\r\n              }\r\n            />\r\n          </motion.div>\r\n        </div>\r\n      )}\r\n      <motion.div variants={animationVariants} className=\"w-full\">\r\n        <AddressAutocomplete\r\n          label=\"Enter your address\"\r\n          serviceRequest={serviceRequest}\r\n          updateServiceRequest={updateServiceRequest}\r\n          addressErrorMessage={addressErrorMessage}\r\n          updateAddressErrorMessage={updateAddressErrorMessage}\r\n          isValidAddress={isValidAddress}\r\n          updateIsValidAddress={updateIsValidAddress}\r\n        />\r\n      </motion.div>\r\n      {formErrorMessage && (\r\n        <motion.div variants={animationVariants} className=\"mb-4 bg-white rounded w-full\">\r\n          <div className=\"m-2 p-2 relative border border-red-500 rounded flex items-center justify-end\">\r\n            <p className=\"mr-0 flex-grow text-red-500 \">{formErrorMessage}</p>\r\n            <div className=\"flex-shrink-0 mr-2\">\r\n              <ExclamationMark />\r\n            </div>\r\n          </div>\r\n        </motion.div>\r\n      )}\r\n      <motion.div variants={animationVariants} className=\"w-full flex justify-end\">\r\n        <button\r\n          type=\"submit\"\r\n          disabled={\r\n            addressErrorMessage !== null ||\r\n            checkboxErrorMessage !== null ||\r\n            onCollectionTime === false ||\r\n            isCorrectWeek === false ||\r\n            hasContaminatedSticker === true\r\n          }\r\n          className=\"body-font disabled-cursor-style w-28 xl:w-40 text-white bg-tcc-green transition duration-300 ease-in-out hover:bg-tcc-green-lighter rounded py-2.5 md:py-3 focus:outline-none border border-transparent focus:border-gray-800\"\r\n        >\r\n          {isLoading ? <DotSpinner /> : \"Submit\"}\r\n        </button>\r\n      </motion.div>\r\n    </motion.form>\r\n  );\r\n};\r\n\r\nexport default StandardServicePath;\r\n","import { IStyledSelect } from \"../../core/types/types\";\r\n\r\nconst StyledSelect: React.FC<IStyledSelect> = ({\r\n  label,\r\n  required = true,\r\n  dropdownItems,\r\n  onChange,\r\n}) => {\r\n  return (\r\n    <div className=\"h-full w-full mb-4 flex flex-col\">\r\n      {/* <label htmlFor={label} className=\"subheading-font pb-2\">\r\n        {label}\r\n      </label> */}\r\n      <div className=\"shadow-sm rounded flex relative\">\r\n        <select\r\n          name={label}\r\n          required={required}\r\n          id={label}\r\n          onChange={onChange}\r\n          title={label}\r\n          defaultValue=\"\"\r\n          className=\"pr-14 bg-white appearance-none z-10 pl-3 text-base transition duration-300 ease-in-out placeholder-gray-500 text-gray-800 py-3 w-full border border-gray-300 shadow-sm focus:outline-none focus:border-gray-800 rounded\"\r\n        >\r\n          <option disabled value=\"\">\r\n            {label}\r\n          </option>\r\n          {dropdownItems &&\r\n            Object.entries(dropdownItems).map(\r\n              ([itemKey, itemValue]: [string, string], index: number) => (\r\n                <option value={itemKey} key={index}>\r\n                  {itemValue}\r\n                </option>\r\n              )\r\n            )}\r\n        </select>\r\n        <div\r\n          className=\"px-4 flex items-center border-l border-gray-300 shadow-sm flex-col justify-center text-gray-500\r\n    absolute right-0 bottom-0 top-0 mx-auto z-20 pointer-events-none \"\r\n        >\r\n          <svg\r\n            tabIndex={-1}\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n            className=\"icon icon-tabler icon-tabler-chevron-up\"\r\n            width={16}\r\n            height={16}\r\n            viewBox=\"0 0 24 24\"\r\n            strokeWidth=\"1.5\"\r\n            stroke=\"currentColor\"\r\n            fill=\"none\"\r\n            strokeLinecap=\"round\"\r\n            strokeLinejoin=\"round\"\r\n          >\r\n            <path stroke=\"none\" d=\"M0 0h24v24H0z\" />\r\n            <polyline points=\"6 15 12 9 18 15\" />\r\n          </svg>\r\n          <svg\r\n            tabIndex={-1}\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n            className=\"icon icon-tabler icon-tabler-chevron-down\"\r\n            width={16}\r\n            height={16}\r\n            viewBox=\"0 0 24 24\"\r\n            strokeWidth=\"1.5\"\r\n            stroke=\"currentColor\"\r\n            fill=\"none\"\r\n            strokeLinecap=\"round\"\r\n            strokeLinejoin=\"round\"\r\n          >\r\n            <path stroke=\"none\" d=\"M0 0h24v24H0z\" />\r\n            <polyline points=\"6 9 12 15 18 9\" />\r\n          </svg>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StyledSelect;\r\n","import { IMarker } from \"../../core/types/types\";\r\nimport \"./marker-style.css\";\r\n\r\nconst Marker: React.FC<IMarker> = ({ lat, lng }) => (\r\n  <img src=\"marker.png\" alt=\"\" className=\"correct-position h-12\" />\r\n);\r\n\r\nexport default Marker;\r\n","import GoogleMapReact from \"google-map-react\";\r\nimport Marker from \"../Marker/Marker\";\r\nimport { useEffect, useMemo, useState } from \"react\";\r\nimport { ILatLng, IMap } from \"../../core/types/types\";\r\n\r\nconst Map: React.FC<IMap> = ({ serviceRequest, updateServiceRequest }) => {\r\n  const initialLatLng = { lat: -37.7020457, lng: 176.2463033 };\r\n  const [isDraggable, updateIsDraggable] = useState(true);\r\n  const [markerLatLng, updateMarkerLatLng] = useState<ILatLng| null>(null); // prettier-ignore\r\n  const [zoomPosition, updateZoomPosition] = useState(10);\r\n  const [centerPosition, updateCenterPosition] = useState<ILatLng>(initialLatLng);\r\n  const serviceRequestLatLng = useMemo(() => {\r\n    return {\r\n      lat: serviceRequest.addressComponents.latitude,\r\n      lng: serviceRequest.addressComponents.longitude,\r\n    };\r\n  }, [serviceRequest.addressComponents]);\r\n\r\n  // Updates marker latLng, camera position and zoom whenever the service request's latLng is changed\r\n  //? Not ideal, this means that marker position is updated twice when marker is dragged\r\n  //? Also, zoom doesn't change if a user has manually adjusted the zoom\r\n  useEffect(() => {\r\n    if (serviceRequestLatLng.lat !== null && serviceRequestLatLng.lng !== null) {\r\n      updateMarkerLatLng({ lat: serviceRequestLatLng.lat, lng: serviceRequestLatLng.lng });\r\n      updateCenterPosition(serviceRequestLatLng);\r\n      updateZoomPosition(18);\r\n    }\r\n  }, [serviceRequestLatLng]);\r\n\r\n  return (\r\n    <div className=\"w-full mb-4\">\r\n      <div className=\"h-80 w-full relative\">\r\n        <p className=\"hidden sm:block bg-white p-2 text-base text-gray-500 rounded border border-gray-100 shadow whitespace-nowrap absolute top-2 right-2 z-10 opacity-90\">\r\n          Drag and drop the marker for greater accuracy\r\n        </p>\r\n        <GoogleMapReact\r\n          bootstrapURLKeys={{ key: \"AIzaSyDBUKNe73SRE3Tr1K1crTDO1Jrw6FKSlS0\" }}\r\n          center={\r\n            centerPosition.lat == null || centerPosition.lng == null\r\n              ? initialLatLng\r\n              : { lat: centerPosition.lat, lng: centerPosition.lng }\r\n          }\r\n          zoom={zoomPosition}\r\n          draggable={isDraggable}\r\n          options={{ scrollwheel: true, fullscreenControl: false }}\r\n          // on mousedown, stop map from being draggable\r\n          onChildMouseDown={() => updateIsDraggable(false)}\r\n          // on mousemove, update the markers latLng\r\n          onChildMouseMove={(hoverKey, childProps, mouse) => updateMarkerLatLng({ lat: mouse.lat, lng: mouse.lng })} // prettier-ignore\r\n          // on mouseup, make map draggable and update the service request's latLng\r\n          onChildMouseUp={() => {\r\n            updateIsDraggable(true);\r\n            markerLatLng &&\r\n              updateServiceRequest({\r\n                ...serviceRequest,\r\n                addressComponents: {\r\n                  ...serviceRequest.addressComponents,\r\n                  latitude: markerLatLng.lat,\r\n                  longitude: markerLatLng.lng,\r\n                },\r\n              });\r\n          }}\r\n        >\r\n          {markerLatLng && (\r\n            <Marker\r\n              lat={markerLatLng.lat ?? initialLatLng.lat}\r\n              lng={markerLatLng.lng ?? initialLatLng.lng}\r\n            />\r\n          )}\r\n        </GoogleMapReact>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Map;\r\n","import AddressAutocomplete from \"../../components/AddressAutocomplete/AddressAutocomplete\";\r\nimport ExclamationMark from \"../../components/ExclamationMark/ExclamationMark\";\r\nimport StyledTextArea from \"../../components/StyledInputs/StyledTextArea\";\r\nimport StyledInput from \"../../components/StyledInputs/StyledInput\";\r\nimport StyledRadio from \"../../components/StyledInputs/StyledRadio\";\r\nimport DotSpinner from \"../../components/DotSpinner/DotSpinner\";\r\nimport Map from \"../../components/Map/Map\";\r\nimport { animationVariants } from \"../../core/constants/constants\";\r\nimport { IIllegalDumpingPath } from \"../../core/types/types\";\r\nimport { motion } from \"framer-motion\";\r\nimport { useState } from \"react\";\r\nimport { helpers } from \"../../core/services/helpers\";\r\n\r\nconst IllegalDumpingPath: React.FC<IIllegalDumpingPath> = ({\r\n  serviceRequest,\r\n  updateServiceRequest,\r\n  onSubmit,\r\n  isLoading,\r\n  formErrorMessage,\r\n}) => {\r\n  const [addressErrorMessage, updateAddressErrorMessage] = useState<string | null>(null);\r\n  const [isValidAddress, updateIsValidAddress] = useState(false);\r\n\r\n  return (\r\n    <motion.form\r\n      variants={animationVariants}\r\n      initial=\"initial\"\r\n      animate=\"in\"\r\n      exit=\"out\"\r\n      className=\"flex flex-col items-center w-full\"\r\n      onSubmit={onSubmit}\r\n    >\r\n      <motion.div variants={animationVariants} className=\"w-full\">\r\n        <StyledInput\r\n          label=\"What has been dumped? (e.g. two black bags, one couch or kitchen appliances etc.)\"\r\n          onChange={(e) =>\r\n            updateServiceRequest({\r\n              ...serviceRequest,\r\n              wasteDetails: {\r\n                ...serviceRequest.wasteDetails,\r\n                wasteDescription: (e.target as HTMLInputElement).value,\r\n              },\r\n            })\r\n          }\r\n        />\r\n      </motion.div>\r\n      <motion.div variants={animationVariants} className=\"w-full\">\r\n        <StyledInput\r\n          label=\"What is the approximate volume of the waste? (e.g. size of a rubbish bag, trailer load, etc.)\"\r\n          onChange={(e) =>\r\n            updateServiceRequest({\r\n              ...serviceRequest,\r\n              wasteDetails: {\r\n                ...serviceRequest.wasteDetails,\r\n                approxAmount: (e.target as HTMLInputElement).value,\r\n              },\r\n            })\r\n          }\r\n        />\r\n      </motion.div>\r\n\r\n      <motion.div variants={animationVariants} className=\"w-full\">\r\n        <StyledInput\r\n          label=\"How long has the waste been in the area?\"\r\n          onChange={(e) =>\r\n            updateServiceRequest({\r\n              ...serviceRequest,\r\n              wasteDetails: {\r\n                ...serviceRequest.wasteDetails,\r\n                duration: (e.target as HTMLInputElement).value,\r\n              },\r\n            })\r\n          }\r\n        />\r\n      </motion.div>\r\n      <motion.div variants={animationVariants} className=\"w-full\">\r\n        <StyledInput\r\n          label=\"Has this type of dumping occurred in the past?\"\r\n          onChange={(e) =>\r\n            updateServiceRequest({\r\n              ...serviceRequest,\r\n              wasteDetails: {\r\n                ...serviceRequest.wasteDetails,\r\n                occurredPreviously: helpers.convertStrToBool((e.target as HTMLInputElement).value),\r\n              },\r\n            })\r\n          }\r\n        />\r\n      </motion.div>\r\n      <motion.div variants={animationVariants} className=\"w-full\">\r\n        <StyledRadio\r\n          id=\"hazardousItems\"\r\n          label=\"Does the dumped material include hazardous items? (e.g. broken glass, needles, etc.)\"\r\n          onChange={(e) => {\r\n            updateServiceRequest({\r\n              ...serviceRequest,\r\n              wasteDetails: {\r\n                ...serviceRequest.wasteDetails,\r\n                hazardousItems: helpers.convertStrToBool((e.target as HTMLInputElement).value),\r\n              },\r\n            });\r\n          }}\r\n        />\r\n      </motion.div>\r\n      <motion.div variants={animationVariants} className=\"w-full\">\r\n        <StyledRadio\r\n          id=\"didWitness\"\r\n          label=\"Did you witness the dumping?\"\r\n          onChange={(e) => {\r\n            updateServiceRequest({\r\n              ...serviceRequest,\r\n              wasteDetails: {\r\n                ...serviceRequest.wasteDetails,\r\n                didWitness: helpers.convertStrToBool((e.target as HTMLInputElement).value),\r\n              },\r\n            });\r\n          }}\r\n        />\r\n      </motion.div>\r\n      {serviceRequest.wasteDetails.didWitness === true && (\r\n        <motion.div variants={animationVariants} className=\"w-full\">\r\n          <StyledInput\r\n            label=\"Details of the dumping, e.g. number plate, make and/or colour of vehicle, brief description of the person (optional)\"\r\n            required={false}\r\n            onChange={(e) =>\r\n              updateServiceRequest({\r\n                ...serviceRequest,\r\n                wasteDetails: {\r\n                  ...serviceRequest.wasteDetails,\r\n                  whoDumped: (e.target as HTMLInputElement).value,\r\n                },\r\n              })\r\n            }\r\n          />\r\n        </motion.div>\r\n      )}\r\n      <motion.div variants={animationVariants} className=\"w-full\">\r\n        <StyledTextArea\r\n          label=\"Add any additional comments (optional)\"\r\n          required={false}\r\n          onChange={(e) =>\r\n            updateServiceRequest({\r\n              ...serviceRequest,\r\n              comments: (e.target as HTMLInputElement).value,\r\n            })\r\n          }\r\n        />\r\n      </motion.div>\r\n      <motion.div variants={animationVariants} className=\"w-full\">\r\n        <StyledInput\r\n          label=\"Enter your full name\"\r\n          onChange={(e) =>\r\n            updateServiceRequest({\r\n              ...serviceRequest,\r\n              name: (e.target as HTMLInputElement).value,\r\n            })\r\n          }\r\n        />\r\n      </motion.div>\r\n      <motion.div variants={animationVariants} className=\"w-full\">\r\n        <StyledInput\r\n          label=\"Enter your email address\"\r\n          type=\"email\"\r\n          onChange={(e) =>\r\n            updateServiceRequest({\r\n              ...serviceRequest,\r\n              emailAddress: (e.target as HTMLInputElement).value,\r\n            })\r\n          }\r\n        />\r\n      </motion.div>\r\n      <motion.div variants={animationVariants} className=\"w-full\">\r\n        <StyledInput\r\n          label=\"Enter your phone number\"\r\n          type=\"number\"\r\n          onChange={(e) =>\r\n            updateServiceRequest({\r\n              ...serviceRequest,\r\n              phoneNo: (e.target as HTMLInputElement).value,\r\n            })\r\n          }\r\n        />\r\n      </motion.div>\r\n      <motion.div variants={animationVariants} className=\"w-full z-50\">\r\n        <AddressAutocomplete\r\n          label=\"Enter the approximate address\"\r\n          serviceRequest={serviceRequest}\r\n          updateServiceRequest={updateServiceRequest}\r\n          addressErrorMessage={addressErrorMessage}\r\n          updateAddressErrorMessage={updateAddressErrorMessage}\r\n          isValidAddress={isValidAddress}\r\n          updateIsValidAddress={updateIsValidAddress}\r\n        />\r\n      </motion.div>\r\n      <motion.div variants={animationVariants} className=\"w-full\">\r\n        <Map serviceRequest={serviceRequest} updateServiceRequest={updateServiceRequest} />\r\n      </motion.div>\r\n      {formErrorMessage && (\r\n        <motion.div variants={animationVariants} className=\"mb-4 bg-white rounded w-full\">\r\n          <div className=\"m-2 p-2 relative border border-red-500 rounded flex items-center justify-end\">\r\n            <p className=\"mr-0 flex-grow text-red-500 \">{formErrorMessage}</p>\r\n            <div className=\"flex-shrink-0 mr-2\">\r\n              <ExclamationMark />\r\n            </div>\r\n          </div>\r\n        </motion.div>\r\n      )}\r\n      <motion.div variants={animationVariants} className=\"w-full flex items-start justify-end\">\r\n        <button\r\n          type=\"submit\"\r\n          disabled={addressErrorMessage !== null}\r\n          className=\"body-font disabled-cursor-style flex-shrink-0 w-28 xl:w-40 text-white bg-tcc-green transition duration-300 ease-in-out hover:bg-tcc-green-lighter rounded py-2.5 md:py-3 focus:outline-none border border-transparent focus:border-gray-800\"\r\n        >\r\n          {isLoading ? <DotSpinner /> : \"Submit\"}\r\n        </button>\r\n      </motion.div>\r\n    </motion.form>\r\n  );\r\n};\r\n\r\nexport default IllegalDumpingPath;\r\n","import AddressAutocomplete from \"../../components/AddressAutocomplete/AddressAutocomplete\";\r\nimport ExclamationMark from \"../../components/ExclamationMark/ExclamationMark\";\r\nimport StyledTextArea from \"../../components/StyledInputs/StyledTextArea\";\r\nimport StyledSelect from \"../../components/StyledInputs/StyledSelect\";\r\nimport StyledInput from \"../../components/StyledInputs/StyledInput\";\r\nimport DotSpinner from \"../../components/DotSpinner/DotSpinner\";\r\nimport Map from \"../../components/Map/Map\";\r\nimport { animationVariants, FixedPublicLitterTypes } from \"../../core/constants/constants\";\r\nimport { IPublicLitterBinsPath } from \"../../core/types/types\";\r\nimport { motion } from \"framer-motion\";\r\nimport { useState } from \"react\";\r\n\r\nconst PublicLitterBinsPath: React.FC<IPublicLitterBinsPath> = ({\r\n  serviceRequest,\r\n  updateServiceRequest,\r\n  onSubmit,\r\n  isLoading,\r\n  formErrorMessage,\r\n}) => {\r\n  const [addressErrorMessage, updateAddressErrorMessage] = useState<string | null>(null);\r\n  const [isValidAddress, updateIsValidAddress] = useState(false);\r\n\r\n  return (\r\n    <motion.form\r\n      variants={animationVariants}\r\n      initial=\"initial\"\r\n      animate=\"in\"\r\n      exit=\"out\"\r\n      className=\"flex flex-col items-center w-full\"\r\n      onSubmit={onSubmit}\r\n    >\r\n      <motion.div variants={animationVariants} className=\"w-full\">\r\n        <StyledSelect\r\n          label=\"Select from the following\"\r\n          dropdownItems={FixedPublicLitterTypes.publicLitterBinsList}\r\n          onChange={(e) =>\r\n            updateServiceRequest({\r\n              ...serviceRequest,\r\n              publicLitterType: (e.target as HTMLInputElement).value,\r\n            })\r\n          }\r\n        />\r\n      </motion.div>\r\n      {serviceRequest.publicLitterType === FixedPublicLitterTypes.DAMAGED_PUBLIC_BINS ? (\r\n        <motion.div\r\n          key=\"damaged-public-bin\"\r\n          variants={animationVariants}\r\n          className=\"mb-4 bg-white rounded w-full\"\r\n        >\r\n          <div className=\"p-2 relative border border-red-500 rounded flex items-center justify-end\">\r\n            <p className=\"mr-0 flex-grow text-red-500\">\r\n              Please contact us on <a href=\"tel:+6475777000\">+64 7 577 7000</a> or at{\" \"}\r\n              <a href=\"mailto:info@tauranga.govt.nz\">info@tauranga.govt.nz</a> to log this request.\r\n            </p>\r\n            <div className=\"flex-shrink-0 mr-2\">\r\n              <ExclamationMark />\r\n            </div>\r\n          </div>\r\n        </motion.div>\r\n      ) : (\r\n        <motion.div key=\"not-damaged-public-bin\" variants={animationVariants} className=\"w-full\">\r\n          <motion.div variants={animationVariants} className=\"w-full\">\r\n            <StyledTextArea\r\n              label=\"Add any additional comments (optional)\"\r\n              required={false}\r\n              onChange={(e) =>\r\n                updateServiceRequest({\r\n                  ...serviceRequest,\r\n                  comments: (e.target as HTMLInputElement).value,\r\n                })\r\n              }\r\n            />\r\n          </motion.div>\r\n          <motion.div variants={animationVariants} className=\"w-full\">\r\n            <StyledInput\r\n              label=\"Enter your full name\"\r\n              onChange={(e) =>\r\n                updateServiceRequest({\r\n                  ...serviceRequest,\r\n                  name: (e.target as HTMLInputElement).value,\r\n                })\r\n              }\r\n            />\r\n          </motion.div>\r\n          <motion.div variants={animationVariants} className=\"w-full\">\r\n            <StyledInput\r\n              label=\"Enter your email address\"\r\n              type=\"email\"\r\n              onChange={(e) =>\r\n                updateServiceRequest({\r\n                  ...serviceRequest,\r\n                  emailAddress: (e.target as HTMLInputElement).value,\r\n                })\r\n              }\r\n            />\r\n          </motion.div>\r\n          <motion.div variants={animationVariants} className=\"w-full\">\r\n            <StyledInput\r\n              label=\"Enter your phone number\"\r\n              type=\"number\"\r\n              onChange={(e) =>\r\n                updateServiceRequest({\r\n                  ...serviceRequest,\r\n                  phoneNo: (e.target as HTMLInputElement).value,\r\n                })\r\n              }\r\n            />\r\n          </motion.div>\r\n          <motion.div variants={animationVariants} className=\"w-full z-50\">\r\n            <AddressAutocomplete\r\n              label=\"Enter the approximate address\"\r\n              serviceRequest={serviceRequest}\r\n              updateServiceRequest={updateServiceRequest}\r\n              addressErrorMessage={addressErrorMessage}\r\n              updateAddressErrorMessage={updateAddressErrorMessage}\r\n              isValidAddress={isValidAddress}\r\n              updateIsValidAddress={updateIsValidAddress}\r\n            />\r\n          </motion.div>\r\n          <motion.div variants={animationVariants} className=\"w-full\">\r\n            <Map serviceRequest={serviceRequest} updateServiceRequest={updateServiceRequest} />\r\n          </motion.div>\r\n        </motion.div>\r\n      )}\r\n      {formErrorMessage && (\r\n        <motion.div variants={animationVariants} className=\"mb-4 bg-white rounded w-full\">\r\n          <div className=\"m-2 p-2 relative border border-red-500 rounded flex items-center justify-end\">\r\n            <p className=\"mr-0 flex-grow text-red-500 \">{formErrorMessage}</p>\r\n            <div className=\"flex-shrink-0 mr-2\">\r\n              <ExclamationMark />\r\n            </div>\r\n          </div>\r\n        </motion.div>\r\n      )}\r\n      <motion.div variants={animationVariants} className=\"w-full flex justify-end\">\r\n        <button\r\n          type=\"submit\"\r\n          disabled={\r\n            addressErrorMessage !== null ||\r\n            serviceRequest.publicLitterType === FixedPublicLitterTypes.DAMAGED_PUBLIC_BINS\r\n          }\r\n          className=\"body-font disabled-cursor-style w-28 xl:w-40 text-white bg-tcc-green transition duration-300 ease-in-out hover:bg-tcc-green-lighter rounded py-2.5 md:py-3 focus:outline-none border border-transparent focus:border-gray-800\"\r\n        >\r\n          {isLoading ? <DotSpinner /> : \"Submit\"}\r\n        </button>\r\n      </motion.div>\r\n    </motion.form>\r\n  );\r\n};\r\n\r\nexport default PublicLitterBinsPath;\r\n","import AddressAutocomplete from \"../../components/AddressAutocomplete/AddressAutocomplete\";\r\nimport ExclamationMark from \"../../components/ExclamationMark/ExclamationMark\";\r\nimport StyledTextArea from \"../../components/StyledInputs/StyledTextArea\";\r\nimport StyledSelect from \"../../components/StyledInputs/StyledSelect\";\r\nimport StyledInput from \"../../components/StyledInputs/StyledInput\";\r\nimport StyledRadio from \"../../components/StyledInputs/StyledRadio\";\r\nimport DotSpinner from \"../../components/DotSpinner/DotSpinner\";\r\nimport Map from \"../../components/Map/Map\";\r\nimport { animationVariants, FixedLooseLitterTypes } from \"../../core/constants/constants\";\r\nimport { ILooseLitterPath } from \"../../core/types/types\";\r\nimport { motion } from \"framer-motion\";\r\nimport { useState } from \"react\";\r\nimport { helpers } from \"../../core/services/helpers\";\r\n\r\nconst LooseLitterPath: React.FC<ILooseLitterPath> = ({\r\n  serviceRequest,\r\n  updateServiceRequest,\r\n  onSubmit,\r\n  isLoading,\r\n  formErrorMessage,\r\n}) => {\r\n  const [addressErrorMessage, updateAddressErrorMessage] = useState<string | null>(null);\r\n  const [isValidAddress, updateIsValidAddress] = useState(false);\r\n\r\n  return (\r\n    <motion.form\r\n      variants={animationVariants}\r\n      initial=\"initial\"\r\n      animate=\"in\"\r\n      exit=\"out\"\r\n      className=\"flex flex-col items-center w-full\"\r\n      onSubmit={onSubmit}\r\n    >\r\n      <motion.div variants={animationVariants} className=\"w-full\">\r\n        <StyledSelect\r\n          label=\"Select an option\"\r\n          dropdownItems={FixedLooseLitterTypes.looseLitterList}\r\n          onChange={(e) =>\r\n            updateServiceRequest({\r\n              ...serviceRequest,\r\n              looseLitterType: (e.target as HTMLInputElement).value,\r\n            })\r\n          }\r\n        />\r\n      </motion.div>\r\n      <motion.div variants={animationVariants} className=\"w-full\">\r\n        <StyledInput\r\n          label=\"Please describe the litter\"\r\n          onChange={(e) =>\r\n            updateServiceRequest({\r\n              ...serviceRequest,\r\n              wasteDetails: {\r\n                ...serviceRequest.wasteDetails,\r\n                wasteDescription: (e.target as HTMLInputElement).value,\r\n              },\r\n            })\r\n          }\r\n        />\r\n      </motion.div>\r\n      <motion.div variants={animationVariants} className=\"w-full\">\r\n        <StyledInput\r\n          label=\"What is the approximate volume of the waste?\"\r\n          onChange={(e) =>\r\n            updateServiceRequest({\r\n              ...serviceRequest,\r\n              wasteDetails: {\r\n                ...serviceRequest.wasteDetails,\r\n                approxAmount: (e.target as HTMLInputElement).value,\r\n              },\r\n            })\r\n          }\r\n        />\r\n      </motion.div>\r\n      <motion.div variants={animationVariants} className=\"w-full\">\r\n        <StyledInput\r\n          label=\"How long has the waste been in the area? (optional)\"\r\n          required={false}\r\n          onChange={(e) =>\r\n            updateServiceRequest({\r\n              ...serviceRequest,\r\n              wasteDetails: {\r\n                ...serviceRequest.wasteDetails,\r\n                duration: (e.target as HTMLInputElement).value,\r\n              },\r\n            })\r\n          }\r\n        />\r\n      </motion.div>\r\n      <motion.div variants={animationVariants} className=\"w-full\">\r\n        <StyledRadio\r\n          id=\"hazardousItems\"\r\n          label=\"Does the dumped material include hazardous items? (e.g. broken glass, needles, etc.)\"\r\n          onChange={(e) => {\r\n            updateServiceRequest({\r\n              ...serviceRequest,\r\n              wasteDetails: {\r\n                ...serviceRequest.wasteDetails,\r\n                hazardousItems: helpers.convertStrToBool((e.target as HTMLInputElement).value),\r\n              },\r\n            });\r\n          }}\r\n        />\r\n      </motion.div>\r\n      <motion.div variants={animationVariants} className=\"w-full\">\r\n        <StyledRadio\r\n          id=\"didWitness\"\r\n          label=\"Did you witness the litter being dropped?\"\r\n          onChange={(e) => {\r\n            updateServiceRequest({\r\n              ...serviceRequest,\r\n              wasteDetails: {\r\n                ...serviceRequest.wasteDetails,\r\n                didWitness: helpers.convertStrToBool((e.target as HTMLInputElement).value),\r\n              },\r\n            });\r\n          }}\r\n        />\r\n      </motion.div>\r\n      {serviceRequest.wasteDetails.didWitness === true && (\r\n        <motion.div variants={animationVariants} className=\"w-full\">\r\n          <StyledInput\r\n            label=\"Details of the dumping, e.g. number plate, make and/or colour of vehicle, brief description of the person (optional)\"\r\n            required={false}\r\n            onChange={(e) =>\r\n              updateServiceRequest({\r\n                ...serviceRequest,\r\n                wasteDetails: {\r\n                  ...serviceRequest.wasteDetails,\r\n                  whoDumped: (e.target as HTMLInputElement).value,\r\n                },\r\n              })\r\n            }\r\n          />\r\n        </motion.div>\r\n      )}\r\n      <motion.div variants={animationVariants} className=\"w-full\">\r\n        <StyledTextArea\r\n          label=\"Add any additional comments (optional)\"\r\n          required={false}\r\n          onChange={(e) =>\r\n            updateServiceRequest({\r\n              ...serviceRequest,\r\n              comments: (e.target as HTMLInputElement).value,\r\n            })\r\n          }\r\n        />\r\n      </motion.div>\r\n      <motion.div variants={animationVariants} className=\"w-full\">\r\n        <StyledInput\r\n          label=\"Enter your full name\"\r\n          onChange={(e) =>\r\n            updateServiceRequest({\r\n              ...serviceRequest,\r\n              name: (e.target as HTMLInputElement).value,\r\n            })\r\n          }\r\n        />\r\n      </motion.div>\r\n      <motion.div variants={animationVariants} className=\"w-full\">\r\n        <StyledInput\r\n          label=\"Enter your email address\"\r\n          type=\"email\"\r\n          onChange={(e) =>\r\n            updateServiceRequest({\r\n              ...serviceRequest,\r\n              emailAddress: (e.target as HTMLInputElement).value,\r\n            })\r\n          }\r\n        />\r\n      </motion.div>\r\n      <motion.div variants={animationVariants} className=\"w-full\">\r\n        <StyledInput\r\n          label=\"Enter your phone number\"\r\n          type=\"number\"\r\n          onChange={(e) =>\r\n            updateServiceRequest({\r\n              ...serviceRequest,\r\n              phoneNo: (e.target as HTMLInputElement).value,\r\n            })\r\n          }\r\n        />\r\n      </motion.div>\r\n      <motion.div variants={animationVariants} className=\"w-full z-50\">\r\n        <AddressAutocomplete\r\n          label=\"Enter the approximate address\"\r\n          serviceRequest={serviceRequest}\r\n          updateServiceRequest={updateServiceRequest}\r\n          addressErrorMessage={addressErrorMessage}\r\n          updateAddressErrorMessage={updateAddressErrorMessage}\r\n          isValidAddress={isValidAddress}\r\n          updateIsValidAddress={updateIsValidAddress}\r\n        />\r\n      </motion.div>\r\n      <motion.div variants={animationVariants} className=\"w-full\">\r\n        <Map serviceRequest={serviceRequest} updateServiceRequest={updateServiceRequest} />\r\n      </motion.div>\r\n      {formErrorMessage && (\r\n        <motion.div variants={animationVariants} className=\"mb-4 bg-white rounded w-full\">\r\n          <div className=\"m-2 p-2 relative border border-red-500 rounded flex items-center justify-end\">\r\n            <p className=\"mr-0 flex-grow text-red-500 \">{formErrorMessage}</p>\r\n            <div className=\"flex-shrink-0 mr-2\">\r\n              <ExclamationMark />\r\n            </div>\r\n          </div>\r\n        </motion.div>\r\n      )}\r\n      <motion.div variants={animationVariants} className=\"w-full flex justify-end\">\r\n        <button\r\n          type=\"submit\"\r\n          disabled={addressErrorMessage !== null}\r\n          className=\"body-font disabled-cursor-style w-28 xl:w-40 text-white bg-tcc-green transition duration-300 ease-in-out hover:bg-tcc-green-lighter rounded py-2.5 md:py-3 focus:outline-none border border-transparent focus:border-gray-800\"\r\n        >\r\n          {isLoading ? <DotSpinner /> : \"Submit\"}\r\n        </button>\r\n      </motion.div>\r\n    </motion.form>\r\n  );\r\n};\r\n\r\nexport default LooseLitterPath;\r\n","const local = {\r\n  requireLogin: false,\r\n  apiBaseUrl: \"http://localhost:7071/API/\",\r\n  keys: {\r\n    createServiceRequestKey: \"\",\r\n    checkAddressKey: \"\",\r\n  },\r\n};\r\n\r\nconst dev = {\r\n  requireLogin: true,\r\n  apiBaseUrl: \"https://environz-api-dev.azurewebsites.net/API/\",\r\n  keys: {\r\n    createServiceRequestKey: \"wtxg8KH0Hy82VrO3SJyJ2oXSSZNAisYb5gL2hin1NuMHlRniAywYFA==\",\r\n    checkAddressKey: \"ovF57taafv4Lg0MRzupyAv8umU9HEc0EQTf8PgcXAyGideLUvm90uQ==\",\r\n  },\r\n};\r\n\r\nconst prod = {\r\n  requireLogin: false,\r\n  apiBaseUrl: \"https://environz-api-dev.azurewebsites.net/API/\",\r\n  keys: {\r\n    createServiceRequestKey: \"\",\r\n    checkAddressKey: \"\",\r\n  },\r\n};\r\n\r\nexport const envConfig =\r\n  process.env.REACT_APP_ENVIRONMENT === \"prod\"\r\n    ? prod\r\n    : process.env.REACT_APP_ENVIRONMENT === \"local\"\r\n    ? local\r\n    : dev;\r\n","import axios from \"axios\";\r\nimport { envConfig } from \"../environment/envConfig\";\r\nimport { IServiceRequest, IServiceRequestWithServiceString } from \"../types/types\";\r\n\r\naxios.defaults.baseURL = envConfig.apiBaseUrl;\r\n\r\n// Creates a service request in the database and returns a ticket number to the user\r\nconst createServiceRequest = async (\r\n  serviceRequest: IServiceRequest | IServiceRequestWithServiceString\r\n) => {\r\n  try {\r\n    const env = process.env.REACT_APP_ENVIRONMENT === \"prod\" ? \"prod\" : \"dev\";\r\n    const queryParams = {\r\n      env: env,\r\n      code: envConfig.keys.createServiceRequestKey,\r\n    };\r\n    const response = await axios.post(\"tcc/createservicerequest\", serviceRequest, {\r\n      params: queryParams,\r\n    });\r\n    return response;\r\n  } catch (error) {\r\n    // error.response has access to status and data set in API\r\n    return error.response;\r\n  }\r\n};\r\n\r\nconst checkAddress = async (\r\n  address: string,\r\n  postCode: string | null,\r\n  assessmentNumber: string | null,\r\n  customerNumber: string | null\r\n) => {\r\n  try {\r\n    const env = process.env.REACT_APP_ENVIRONMENT === \"prod\" ? \"prod\" : \"dev\";\r\n    const queryParams = {\r\n      env: env,\r\n      code: envConfig.keys.checkAddressKey,\r\n      street: address,\r\n      postcode: postCode,\r\n      assessmentNo: assessmentNumber,\r\n      customerId: customerNumber,\r\n    };\r\n    const response = await axios.get(\"tcc/checkaddress\", {\r\n      params: queryParams,\r\n    });\r\n    return response;\r\n  } catch (error) {\r\n    return error.response;\r\n  }\r\n};\r\n\r\nexport const apiService = {\r\n  createServiceRequest,\r\n  checkAddress,\r\n};\r\n","import StandardServicePath from \"../paths/StandardServicePath/StandardServicePath\";\r\nimport StyledSelect from \"../components/StyledInputs/StyledSelect\";\r\nimport IllegalDumpingPath from \"../paths/IllegalDumpingPath/IllegalDumpingPath\";\r\nimport PublicLitterBinsPath from \"../paths/PublicLitterBins/PublicLittersBinsPath\";\r\nimport LooseLitterPath from \"../paths/LooseLitterPath/LooseLitterPath\";\r\nimport { IHome, IServiceRequestWithServiceString } from \"../core/types/types\";\r\nimport { apiService } from \"../core/services/apiService\";\r\nimport { AnimatePresence } from \"framer-motion\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { FormEvent, useState } from \"react\";\r\nimport { AxiosResponse } from \"axios\";\r\nimport { FixedServiceRequestTypes } from \"../core/constants/constants\";\r\n\r\nconst Home: React.FC<IHome> = ({\r\n  initialState,\r\n  serviceRequest,\r\n  updateServiceRequest,\r\n  updateHasCompletedForm,\r\n}) => {\r\n  const [formErrorMessage, updateFormErrorMessage] = useState<string | null>(null);\r\n  const [checkboxErrorMessage, updateCheckboxErrorMessage] = useState<string | null>(null);\r\n  const [isLoading, updateIsLoading] = useState(false);\r\n  const history = useHistory();\r\n  const errors = {\r\n    checkboxError: \"You need to select a service from the checkboxes above.\",\r\n    addressValidationError:\r\n      \"We were unable to find an address with those details. Please try again later or contact us.\",\r\n    apiError: \"Something went wrong with this request. Please try again later or contact us.\",\r\n  };\r\n\r\n  // SUBMIT METHOD FOR SERVICE REQUESTS THAT HAVE NO SERVICES (IE NO CHECKBOXES)\r\n  async function onSubmit(e: FormEvent) {\r\n    e.preventDefault();\r\n    updateFormErrorMessage(null);\r\n    updateIsLoading(true);\r\n\r\n    const response = await apiService.createServiceRequest(serviceRequest);\r\n    handleResponse(response);\r\n  }\r\n\r\n  // SUBMIT METHOD FOR SERVICE REQUESTS WITH ONE OR MORE SERVICES (IE THEY HAVE CHECKBOXES)\r\n  async function onSubmitWithCheckboxes(e: FormEvent) {\r\n    e.preventDefault();\r\n    updateFormErrorMessage(null);\r\n    updateIsLoading(true);\r\n    // ensure at least one checkbox is ticked\r\n    if (!validateCheckboxes()) {\r\n      updateCheckboxErrorMessage(errors.checkboxError);\r\n      updateIsLoading(false);\r\n      return;\r\n    }\r\n\r\n    if (await validateResidentOrRatepayer()) {\r\n      const serviceRequestWithServiceString: IServiceRequestWithServiceString = Object.assign(\r\n        {},\r\n        serviceRequest,\r\n        { service: serviceRequest.service?.toString() }\r\n      );\r\n      const response = await apiService.createServiceRequest(serviceRequestWithServiceString);\r\n      handleResponse(response);\r\n    }\r\n  }\r\n\r\n  // RESPONSE HANDLER FOR BOTH SUBMIT METHODS\r\n  function handleResponse(response: AxiosResponse) {\r\n    if (response?.status === 200) {\r\n      if (parseInt(response.data)) {\r\n        serviceRequest.ticketNumber = parseInt(response.data);\r\n        updateHasCompletedForm(true);\r\n        updateIsLoading(false);\r\n        history.push(\"/confirmation\");\r\n      }\r\n    } else {\r\n      updateIsLoading(false);\r\n      updateFormErrorMessage(errors.apiError);\r\n    }\r\n  }\r\n\r\n  // VALIDATE EITHER AN ADDRESS OR AN ADDRESS AND RATES VALUATION NUMBER WITH TCC KERBSIDE DATA\r\n  async function validateResidentOrRatepayer(): Promise<boolean> {\r\n    const { streetNumber, roadName, postCode } = serviceRequest.addressComponents;\r\n    const address = `${streetNumber} ${roadName}`;\r\n    const assessmentNumber = serviceRequest.assessmentNumber;\r\n    const customerNumber = serviceRequest.customerNumber;\r\n\r\n    const response = await apiService.checkAddress(\r\n      address,\r\n      postCode,\r\n      assessmentNumber,\r\n      customerNumber\r\n    );\r\n\r\n    if (response?.status === 200) {\r\n      return true;\r\n    } else if (response?.status === 400 && response?.data === \"Failed\") {\r\n      updateFormErrorMessage(errors.addressValidationError);\r\n      updateIsLoading(false);\r\n      return false;\r\n    }\r\n    updateFormErrorMessage(errors.apiError);\r\n    updateIsLoading(false);\r\n    return false;\r\n  }\r\n\r\n  // VALIDATE CHECKBOXES: SERVICE ARRAY CAN BE BOTH EMPTY AND NULL TO FAIL\r\n  function validateCheckboxes(): boolean {\r\n    if (serviceRequest.service === null || !serviceRequest.service.length) {\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  return (\r\n    <div className=\"sm:mt-10 mb-10 w-11/12 md:w-8/12 xl:6/12\">\r\n      <div className=\"py-12 my-auto mx-auto flex flex-col items-start justify-start xl:w-4/5 2xl:w-6/12\">\r\n        <h1 className=\"heading-font w-full text-left mb-6\">How can we help you?</h1>\r\n        {/******** SERVICE REQUEST DROPDOWN ********/}\r\n        <StyledSelect\r\n          label=\"Please select your service request\"\r\n          dropdownItems={FixedServiceRequestTypes.serviceRequestList}\r\n          onChange={(e) => {\r\n            updateIsLoading(false); // when path is changed, reset the isLoading state for button animations\r\n            updateFormErrorMessage(null); // reset main form error message\r\n            updateCheckboxErrorMessage(null); // reset the checkbox error\r\n            updateServiceRequest({\r\n              ...initialState,\r\n              serviceRequest: (e.target as HTMLInputElement).value,\r\n            });\r\n          }}\r\n        />\r\n        {/******** PATH FOR DAMAGED BIN SERVICE REQUESTS ********/}\r\n        <AnimatePresence exitBeforeEnter>\r\n          {serviceRequest?.serviceRequest === FixedServiceRequestTypes.DAMAGED_BIN && (\r\n            <StandardServicePath\r\n              key={1}\r\n              serviceRequest={serviceRequest}\r\n              updateServiceRequest={updateServiceRequest}\r\n              onSubmit={(e) => onSubmitWithCheckboxes(e)}\r\n              checkboxErrorMessage={checkboxErrorMessage}\r\n              updateCheckboxErrorMessage={updateCheckboxErrorMessage}\r\n              isLoading={isLoading}\r\n              formErrorMessage={formErrorMessage}\r\n            />\r\n          )}\r\n          {/******** PATH FOR MISSING BIN SERVICE REQUESTS ********/}\r\n          {serviceRequest?.serviceRequest === FixedServiceRequestTypes.MISSING_BIN && (\r\n            <StandardServicePath\r\n              key={2}\r\n              serviceRequest={serviceRequest}\r\n              updateServiceRequest={updateServiceRequest}\r\n              onSubmit={(e) => onSubmitWithCheckboxes(e)}\r\n              checkboxErrorMessage={checkboxErrorMessage}\r\n              updateCheckboxErrorMessage={updateCheckboxErrorMessage}\r\n              isLoading={isLoading}\r\n              formErrorMessage={formErrorMessage}\r\n            />\r\n          )}\r\n          {/******** PATH FOR ADDITIONAL BIN SERVICE REQUESTS ********/}\r\n          {serviceRequest?.serviceRequest === FixedServiceRequestTypes.ADDITIONAL_BIN && (\r\n            <StandardServicePath\r\n              key={3}\r\n              serviceRequest={serviceRequest}\r\n              updateServiceRequest={updateServiceRequest}\r\n              onSubmit={(e) => onSubmitWithCheckboxes(e)}\r\n              checkboxErrorMessage={checkboxErrorMessage}\r\n              updateCheckboxErrorMessage={updateCheckboxErrorMessage}\r\n              isLoading={isLoading}\r\n              formErrorMessage={formErrorMessage}\r\n            />\r\n          )}\r\n          {/******** PATH FOR MISSED COLLECTION SERVICE REQUESTS ********/}\r\n          {serviceRequest?.serviceRequest === FixedServiceRequestTypes.MISSED_COLLECTION && (\r\n            <StandardServicePath\r\n              key={4}\r\n              serviceRequest={serviceRequest}\r\n              updateServiceRequest={updateServiceRequest}\r\n              onSubmit={(e) => onSubmitWithCheckboxes(e)}\r\n              checkboxErrorMessage={checkboxErrorMessage}\r\n              updateCheckboxErrorMessage={updateCheckboxErrorMessage}\r\n              isLoading={isLoading}\r\n              formErrorMessage={formErrorMessage}\r\n            />\r\n          )}\r\n\r\n          {/******** PATH FOR ILLEGAL DUMPING SERVICE REQUESTS ********/}\r\n          {serviceRequest?.serviceRequest === FixedServiceRequestTypes.ILLEGAL_DUMPING && (\r\n            <IllegalDumpingPath\r\n              key={5}\r\n              serviceRequest={serviceRequest}\r\n              updateServiceRequest={updateServiceRequest}\r\n              onSubmit={(e) => onSubmit(e)}\r\n              isLoading={isLoading}\r\n              formErrorMessage={formErrorMessage}\r\n            />\r\n          )}\r\n          {/******** PATH FOR PUBLIC LITTER BIN SERVICE REQUESTS ********/}\r\n          {serviceRequest?.serviceRequest === FixedServiceRequestTypes.PUBLIC_LITTER_BINS && (\r\n            <PublicLitterBinsPath\r\n              key={6}\r\n              serviceRequest={serviceRequest}\r\n              updateServiceRequest={updateServiceRequest}\r\n              onSubmit={(e) => onSubmit(e)}\r\n              isLoading={isLoading}\r\n              formErrorMessage={formErrorMessage}\r\n            />\r\n          )}\r\n          {/******** PATH FOR LOOSE LITTER SERVICE REQUESTS ********/}\r\n          {serviceRequest?.serviceRequest === FixedServiceRequestTypes.LOOSE_LITTER && (\r\n            <LooseLitterPath\r\n              key={7}\r\n              serviceRequest={serviceRequest}\r\n              updateServiceRequest={updateServiceRequest}\r\n              onSubmit={(e) => onSubmit(e)}\r\n              isLoading={isLoading}\r\n              formErrorMessage={formErrorMessage}\r\n            />\r\n          )}\r\n        </AnimatePresence>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import DevLogin from \"./components/DevLogin/DevLogin\";\r\nimport Footer from \"./components/Footer/Footer\";\r\nimport Confirmation from \"./pages/Confirmation\";\r\nimport NotFound from \"./pages/NotFound\";\r\nimport Nav from \"./components/Nav/Nav\";\r\nimport Home from \"./pages/Home\";\r\nimport { Route, Switch, useLocation } from \"react-router\";\r\nimport { IServiceRequest } from \"./core/types/types\";\r\nimport { AnimatePresence } from \"framer-motion\";\r\nimport { useState } from \"react\";\r\nimport \"./styles/styles.css\";\r\n\r\nfunction App() {\r\n  // For dev login\r\n  const [isLoggedIn, updateLogIn] = useState(false);\r\n\r\n  // For router\r\n  const location = useLocation();\r\n\r\n  // Initial state for the main service request\r\n  const initialState: IServiceRequest = {\r\n    ticketNumber: 0,\r\n    serviceRequest: null,\r\n    service: null,\r\n    comments: null,\r\n    addressComponents: {\r\n      formattedAddress: null,\r\n      streetNumber: null,\r\n      roadName: null,\r\n      suburbName: null,\r\n      cityName: null,\r\n      postCode: null,\r\n      regionName: null,\r\n      latitude: null,\r\n      longitude: null,\r\n    },\r\n    name: null,\r\n    emailAddress: null,\r\n    phoneNo: null,\r\n    assessmentNumber: null,\r\n    customerNumber: null,\r\n    wasteDetails: {\r\n      wasteDescription: null,\r\n      approxAmount: null,\r\n      duration: null,\r\n      whoDumped: null,\r\n      occurredPreviously: null,\r\n      hazardousItems: null,\r\n      didWitness: null,\r\n    },\r\n    missedCollectionDetails: {\r\n      isMUD: null,\r\n      otherBinsMissed: null,\r\n    },\r\n    publicLitterType: null,\r\n    looseLitterType: null,\r\n  };\r\n\r\n  // State for the main service request\r\n  const [serviceRequest, updateServiceRequest] = useState(initialState);\r\n\r\n  // State for page navigation management\r\n  const [hasCompletedForm, updateHasCompletedForm] = useState(false);\r\n\r\n  return !isLoggedIn ? (\r\n    <DevLogin updateLogin={updateLogIn} />\r\n  ) : (\r\n    <div className=\"overflow-x-hidden\">\r\n      <div className=\"min-h-screen bg-tcc-blue bg-tcc-background bg-fixed bg-center w-full flex flex-col items-center justify-start relative\">\r\n        <Nav />\r\n        <div className=\"bg-tcc-grey h-10 w-full\"></div>\r\n        <AnimatePresence exitBeforeEnter>\r\n          <Switch location={location} key={location.key}>\r\n            <Route exact path=\"/\">\r\n              <Home\r\n                serviceRequest={serviceRequest}\r\n                updateServiceRequest={updateServiceRequest}\r\n                initialState={initialState}\r\n                hasCompletedForm={hasCompletedForm}\r\n                updateHasCompletedForm={updateHasCompletedForm}\r\n              />\r\n            </Route>\r\n            <Route exact path=\"/confirmation\" key=\"confirmation-page\">\r\n              <Confirmation hasCompletedForm={hasCompletedForm} serviceRequest={serviceRequest} />\r\n            </Route>\r\n            <NotFound />\r\n          </Switch>\r\n        </AnimatePresence>\r\n        <div className=\"bg-tcc-blue h-10 w-full self-stretch absolute bottom-0\">\r\n          <div className=\"bg-tcc-blue transform -translate-x-1/2 rotate-45 h-10 w-10 absolute left-1/2 -bottom-1/2\"></div>\r\n        </div>\r\n      </div>\r\n      <Footer />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport \"./index.css\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <BrowserRouter basename=\"/service-request\">\r\n      <App />\r\n    </BrowserRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}