{"version":3,"sources":["components/DevLogin/DevLogin.tsx","components/Footer/Footer.tsx","core/constants/constants.tsx","pages/Confirmation.tsx","pages/NotFound.tsx","components/Nav/Nav.tsx","components/CircleSpinner/CircleSpinner.tsx","components/ExclamationMark/ExclamationMark.tsx","components/AddressAutocomplete/AddressAutocomplete.tsx","components/StyledInputs/StyledCheckboxes.tsx","components/StyledInputs/StyledTextArea.tsx","components/StyledInputs/StyledInput.tsx","components/DotSpinner/DotSpinner.tsx","paths/StandardServicePath/StandardServicePath.tsx","components/StyledInputs/StyledSelect.tsx","components/Marker/Marker.tsx","components/Map/Map.tsx","paths/IllegalDumpingPath/IllegalDumpingPath.tsx","paths/PublicLitterBins/PublicLittersBinsPath.tsx","paths/LooseLitterPath/LooseLitterPath.tsx","core/environment/envConfig.tsx","core/services/apiService.tsx","pages/Home.tsx","App.tsx","index.tsx"],"names":["DevLogin","updateLogin","useState","username","updateUsername","password","updatePassword","error","updateError","handleSubmit","process","className","onKeyPress","e","key","onSubmit","preventDefault","type","placeholder","onChange","target","value","Footer","href","serviceRequestList","damagedBin","missingBin","additionalBin","missedCollection","illegalDumping","publicLitterBins","looseLitter","serviceList","rubbish","recycling","food","glass","gardenWaste","additionalBinServiceList","publicLitterBinsList","overflowPublicBins","odorousPublicBins","looseLitterList","reserves","carpark","walkway","footpath","animationVariants","initial","opacity","scale","in","transition","ease","duration","staggerChildren","out","Confirmation","hasCompletedForm","serviceRequest","history","useHistory","useEffect","replace","window","scrollTo","top","left","behavior","motion","div","variants","animate","exit","h1","p","ticketNumber","NotFound","Nav","src","alt","CircleSpinner","ExclamationMark","version","id","xmlns","xmlnsXlink","width","height","viewBox","xmlSpace","fill","d","AddressAutocomplete","label","updateServiceRequest","addressErrorMessage","updateAddressErrorMessage","isValidAddress","updateIsValidAddress","isLoading","updateLoading","errors","handleSelect","a","geocodeByAddress","fullAddress","roadName","extractAddressComponents","address_components","suburbName","cityName","postCode","regionName","streetNumber","getLatLng","latLng","latitude","lat","longitude","lng","addressComponents","formattedAddress","formatted_address","components","find","c","types","includes","long_name","addressComponent","boxStyle","addressBox","suggestionBoxes","firstBox","onSelect","searchOptions","componentRestrictions","country","handleChange","getInputProps","suggestions","loading","onBlur","data-lpignore","name","title","autoComplete","required","results","map","suggestion","i","style","active","onMouseDown","description","StyledCheckboxes","checkboxErrorMessage","htmlFor","Object","values","item","index","checked","service","StyledTextArea","StyledInput","DotSpinner","StandardServicePath","updateCheckboxErrorMessage","formErrorMessage","form","filter","handleCheckboxChange","comments","assessmentNumber","replaceAll","disabled","StyledSelect","dropdownItems","defaultValue","tabIndex","strokeWidth","stroke","strokeLinecap","strokeLinejoin","points","Marker","Map","isDraggable","updateIsDraggable","markerLatLng","updateMarkerLatLng","zoomPosition","updateZoomPosition","centerPosition","updateCenterPosition","serviceRequestLatLng","useMemo","bootstrapURLKeys","center","zoom","draggable","options","scrollwheel","fullscreenControl","onChildMouseDown","onChildMouseMove","hoverKey","childProps","mouse","onChildMouseUp","IllegalDumpingPath","wasteDetails","wasteDescription","approxAmount","whoDumped","occurredPreviously","PublicLitterBinsPath","publicLitterType","LooseLitterPath","looseLitterType","envConfig","requireLogin","apiBaseUrl","keys","createServiceRequestKey","checkAddressKey","axios","defaults","baseURL","apiService","createServiceRequest","queryParams","env","code","post","params","response","checkAddress","address","street","postcode","assessmentNo","get","Home","initialState","updateHasCompletedForm","updateFormErrorMessage","updateIsLoading","handleResponse","onSubmitWithCheckboxes","validateCheckboxes","validateResidentOrRatepayer","serviceRequestWithServiceString","assign","toString","status","parseInt","data","push","length","AnimatePresence","exitBeforeEnter","App","isLoggedIn","updateLogIn","location","useLocation","dateCreated","Date","toLocaleDateString","year","month","day","exact","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e49b5651.chunk.js","sourcesContent":["import { useState } from \"react\";\r\n\r\ninterface IDevLogin {\r\n  updateLogin: Function;\r\n}\r\n\r\nconst DevLogin: React.FC<IDevLogin> = ({ updateLogin }: IDevLogin) => {\r\n  const [username, updateUsername] = useState(\"\");\r\n  const [password, updatePassword] = useState(\"\");\r\n  const [error, updateError] = useState(\"\");\r\n  const { REACT_APP_USERNAME } = process.env;\r\n  const { REACT_APP_PASSWORD } = process.env;\r\n\r\n  function handleSubmit() {\r\n    if (username === REACT_APP_USERNAME && password === REACT_APP_PASSWORD) {\r\n      updateLogin(true);\r\n      return;\r\n    }\r\n    updateError(\"Incorrect username or password\");\r\n  }\r\n\r\n  return (\r\n    <div\r\n      className=\"h-screen w-screen bg-gray-50 flex flex-col items-center justify-center\"\r\n      onKeyPress={(e) => {\r\n        if (e.key === \"Enter\") {\r\n          handleSubmit();\r\n        }\r\n      }}\r\n    >\r\n      <form\r\n        className=\"flex flex-col items-center px-8 py-6 background-white-ie-fix shadow-xl border border-gray-300 rounded-lg\"\r\n        onSubmit={(e) => {\r\n          e.preventDefault();\r\n          handleSubmit();\r\n        }}\r\n      >\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Username\"\r\n          className=\"p-2 bg-gray-200 border border-black-true\"\r\n          onChange={(e) => updateUsername(e.target.value)}\r\n        />\r\n        <input\r\n          type=\"password\"\r\n          placeholder=\"Password\"\r\n          className=\"mt-2 p-2 bg-gray-200 border border-black-true\"\r\n          onChange={(e) => updatePassword(e.target.value)}\r\n        />\r\n        {error && <p className=\"mt-2 text-red-600\">{error}</p>}\r\n        <button type=\"submit\" className=\"mt-4 px-4 py-2 border border-black-true \">\r\n          Login\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DevLogin;\r\n","const Footer: React.FC = () => {\r\n  return (\r\n    <div className=\"bg-tcc-grey w-full py-12\">\r\n      <div className=\"w-11/12 md:w-8/12 mx-auto flex flex-row items-center justify-center sm:justify-end\">\r\n        <div className=\"flex flex-col items-start text-white\">\r\n          <p className=\"confirmation-font mb-4\">Need help?</p>\r\n          <a href=\"tel:+6475777000\">\r\n            <p className=\"body-font text-white\">+64 7 577 7000</p>\r\n          </a>\r\n          <a href=\"mailto:info@tauranga.govt.nz\">\r\n            <p className=\"body-font text-white\">info@tauranga.govt.nz</p>\r\n          </a>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Footer;\r\n","export const serviceRequestList = {\r\n  damagedBin: \"Damaged Bin\",\r\n  missingBin: \"Missing Bin\",\r\n  additionalBin: \"Additional Bin\",\r\n  missedCollection: \"Missed Collection\",\r\n  illegalDumping: \"Illegal Dumping\",\r\n  publicLitterBins: \"Public Litter Bins\",\r\n  looseLitter: \"Loose Litter\",\r\n};\r\n\r\nexport const serviceList = {\r\n  rubbish: \"Rubbish\",\r\n  recycling: \"Recycling\",\r\n  food: \"Food\",\r\n  glass: \"Glass\",\r\n  gardenWaste: \"Garden waste\",\r\n};\r\n\r\nexport const additionalBinServiceList = {\r\n  rubbish: \"Rubbish\",\r\n  food: \"Food\",\r\n  glass: \"Glass\",\r\n};\r\n\r\nexport const publicLitterBinsList = {\r\n  overflowPublicBins: \"Overflowing Public Bins\",\r\n  odorousPublicBins: \"Odorous Public Bins\",\r\n};\r\n\r\nexport const looseLitterList = {\r\n  reserves: \"Reserves\",\r\n  carpark: \"Carpark\",\r\n  walkway: \"Walkway\",\r\n  footpath: \"Footpath\",\r\n};\r\n\r\n// Handles all entry and exit animations for the service request paths\r\nexport const animationVariants = {\r\n  initial: {\r\n    opacity: 0,\r\n    scale: 0.9,\r\n  },\r\n  in: {\r\n    opacity: 1,\r\n    scale: 1,\r\n    transition: {\r\n      ease: \"easeInOut\",\r\n      duration: 0.2,\r\n      staggerChildren: 0.075,\r\n    },\r\n  },\r\n  out: {\r\n    opacity: 0,\r\n    transition: { duration: 0.075 },\r\n  },\r\n};\r\n","import { animationVariants } from \"../core/constants/constants\";\r\nimport { IConfirmation } from \"../core/types/types\";\r\nimport { useHistory } from \"react-router\";\r\nimport { motion } from \"framer-motion\";\r\nimport { useEffect } from \"react\";\r\n\r\nconst Confirmation: React.FC<IConfirmation> = ({ hasCompletedForm, serviceRequest }) => {\r\n  const history = useHistory();\r\n\r\n  // Prevent manual navigation to page\r\n  useEffect(() => {\r\n    if (!hasCompletedForm) {\r\n      history.replace(\"/\");\r\n    }\r\n  }, [history, hasCompletedForm]);\r\n\r\n  // Scroll to top when component mounts\r\n  useEffect(() => {\r\n    window.scrollTo({ top: 0, left: 0, behavior: \"smooth\" });\r\n  }, []);\r\n\r\n  return (\r\n    <motion.div\r\n      variants={animationVariants}\r\n      initial=\"initial\"\r\n      animate=\"in\"\r\n      exit=\"out\"\r\n      className=\"sm:mt-10 mb-10 w-11/12 md:w-8/12 xl:6/12\"\r\n    >\r\n      <div className=\"py-12 my-auto mx-auto flex flex-col items-start justify-start xl:w-4/5 2xl:w-6/12\">\r\n        <motion.h1\r\n          variants={animationVariants}\r\n          className=\"heading-font mb-6 xl:mb-10 w-full text-left\"\r\n        >\r\n          Thank you\r\n        </motion.h1>\r\n        <motion.p variants={animationVariants} className=\"mb-3 confirmation-font\">\r\n          We'll be in touch with you as soon as possible.\r\n        </motion.p>\r\n        <motion.p variants={animationVariants} className=\"mb-10 xl:mb-16 confirmation-font\">\r\n          {`Your ticket number is #${serviceRequest.ticketNumber}.\\nPlease keep this number as a reference for all enquiries related to this job.`}\r\n        </motion.p>\r\n        <motion.div variants={animationVariants} className=\"flex items-center\">\r\n          <a\r\n            href=\"/\"\r\n            className=\"mr-4 body-font text-white bg-tcc-green transition duration-300 ease-in-out hover:bg-tcc-green-lighter rounded px-6 py-2.5 md:px-10 md:py-3 focus:outline-none border border-transparent focus:border-gray-800\"\r\n          >\r\n            Report another issue\r\n          </a>\r\n          <a\r\n            href=\"https://www.tauranga.govt.nz/\"\r\n            className=\"body-font text-white bg-tcc-green transition duration-300 ease-in-out hover:bg-tcc-green-lighter rounded px-6 py-2.5 md:px-10 md:py-3 focus:outline-none border border-transparent focus:border-gray-800\"\r\n          >\r\n            TCC website\r\n          </a>\r\n        </motion.div>\r\n      </div>\r\n    </motion.div>\r\n  );\r\n};\r\n\r\nexport default Confirmation;\r\n","const NotFound: React.FC = () => {\r\n  return (\r\n    <div className=\"sm:mt-10 mb-10 w-11/12 md:w-8/12 xl:6/12\">\r\n      <div className=\"py-12 my-auto mx-auto flex flex-col items-start justify-start xl:w-4/5 2xl:w-6/12\">\r\n        <h1 className=\"heading-font mb-6 xl:mb-10 w-full text-left\">Page Not Found</h1>\r\n        <p className=\"mb-10 xl:mb-16 confirmation-font\">\r\n          We couldn't find the page you were looking for. Click the button below to return to the\r\n          homepage.\r\n        </p>\r\n\r\n        <a\r\n          href=\"/\"\r\n          className=\"mr-4 body-font text-white bg-tcc-green transition duration-300 ease-in-out hover:bg-tcc-green-lighter rounded px-6 py-2.5 md:px-10 md:py-3 focus:outline-none border border-transparent focus:border-gray-800\"\r\n        >\r\n          Take me home\r\n        </a>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NotFound;\r\n","const Nav: React.FC = () => {\r\n  return (\r\n    <div className=\"w-full h-24 md:h-28 bg-white flex flex-col items-center border-b border-gray-100 shadow\">\r\n      <div className=\"h-full w-11/12 md:w-8/12 flex flex-row items-center justify-center sm:justify-start\">\r\n        <img src=\"tcc-logo.png\" alt=\"Tauranga City Council logo\" className=\"h-16 md:h-20\" />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Nav;\r\n","import React from \"react\";\r\nimport \"./CircleSpinner.css\";\r\n\r\nconst CircleSpinner: React.FC = () => {\r\n  return (\r\n    <div className=\"h-full\">\r\n      <div className=\"lds-ring flex flex-col items-center justify-center h-full\">\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CircleSpinner;\r\n","const ExclamationMark: React.FC = () => {\r\n  return (\r\n    <svg\r\n      version=\"1.1\"\r\n      id=\"Layer_1\"\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      xmlnsXlink=\"http://www.w3.org/1999/xlink\"\r\n      width=\"25px\"\r\n      height=\"25px\"\r\n      viewBox=\"0 0 286.054 286.054\"\r\n      xmlSpace=\"preserve\"\r\n    >\r\n      <g>\r\n        <path\r\n          fill=\"#f87171\"\r\n          d=\"M143.027,0C64.04,0,0,64.04,0,143.027c0,78.996,64.04,143.027,143.027,143.027\r\n          c78.996,0,143.027-64.022,143.027-143.027C286.054,64.04,222.022,0,143.027,0z M143.027,259.236\r\n          c-64.183,0-116.209-52.026-116.209-116.209S78.844,26.818,143.027,26.818s116.209,52.026,116.209,116.209\r\n          S207.21,259.236,143.027,259.236z M143.036,62.726c-10.244,0-17.995,5.346-17.995,13.981v79.201c0,8.644,7.75,13.972,17.995,13.972\r\n          c9.994,0,17.995-5.551,17.995-13.972V76.707C161.03,68.277,153.03,62.726,143.036,62.726z M143.036,187.723\r\n          c-9.842,0-17.852,8.01-17.852,17.86c0,9.833,8.01,17.843,17.852,17.843s17.843-8.01,17.843-17.843\r\n          C160.878,195.732,152.878,187.723,143.036,187.723z\"\r\n        />\r\n      </g>\r\n      <g></g>\r\n      <g></g>\r\n      <g></g>\r\n      <g></g>\r\n      <g></g>\r\n      <g></g>\r\n      <g></g>\r\n      <g></g>\r\n      <g></g>\r\n      <g></g>\r\n      <g></g>\r\n      <g></g>\r\n      <g></g>\r\n      <g></g>\r\n      <g></g>\r\n    </svg>\r\n  );\r\n};\r\n\r\nexport default ExclamationMark;\r\n","import React, { useState } from \"react\";\r\nimport PlacesAutocomplete, { geocodeByAddress, getLatLng } from \"react-places-autocomplete\";\r\nimport CircleSpinner from \"../CircleSpinner/CircleSpinner\";\r\nimport { IAddressAutocomplete } from \"../../core/types/types\";\r\nimport ExclamationMark from \"../ExclamationMark/ExclamationMark\";\r\n\r\nconst AddressAutocomplete: React.FC<IAddressAutocomplete> = ({\r\n  label,\r\n  serviceRequest,\r\n  updateServiceRequest,\r\n  addressErrorMessage,\r\n  updateAddressErrorMessage,\r\n  isValidAddress,\r\n  updateIsValidAddress,\r\n}: IAddressAutocomplete) => {\r\n  const [isLoading, updateLoading] = useState(false);\r\n  const errors = {\r\n    addressNotFound:\r\n      \"We were unable to find your address. Please try again or contact us on 07 577 7000.\",\r\n    apiError: \"We were unable to make this request. Please try again or contact us on 07 577 7000.\",\r\n    noAddressSelected: \"You need to select an address from the dropdown menu.\",\r\n  };\r\n\r\n  // handles user typing into the address autocomplete field\r\n  function handleChange(value: string) {\r\n    updateAddressErrorMessage(null);\r\n    updateIsValidAddress(false);\r\n    updateServiceRequest({\r\n      ...serviceRequest,\r\n      addressComponents: {\r\n        streetNumber: null,\r\n        roadName: null,\r\n        suburbName: null,\r\n        cityName: null,\r\n        regionName: null,\r\n        postCode: null,\r\n        latitude: null,\r\n        longitude: null,\r\n        formattedAddress: value,\r\n      },\r\n    });\r\n  }\r\n\r\n  // Handles the selection of an address, checks for valid post codes\r\n  async function handleSelect(value: string) {\r\n    if (value === \"\") return;\r\n    updateLoading(true);\r\n    updateAddressErrorMessage(null);\r\n\r\n    try {\r\n      const [fullAddress] = await geocodeByAddress(value);\r\n      const roadName = extractAddressComponents(fullAddress.address_components, \"route\");\r\n      const suburbName = extractAddressComponents(fullAddress.address_components, \"sublocality\");\r\n      const cityName = extractAddressComponents(fullAddress.address_components, \"locality\");\r\n      const postCode = extractAddressComponents(fullAddress.address_components, \"postal_code\");\r\n      const regionName = extractAddressComponents(fullAddress.address_components, \"administrative_area_level_1\"); // prettier-ignore\r\n      const streetNumber = extractAddressComponents(fullAddress.address_components, \"street_number\"); // prettier-ignore\r\n      const latLng = await getLatLng(fullAddress);\r\n      const { lat: latitude, lng: longitude } = latLng;\r\n\r\n      // fails if no postCode is found\r\n      if (postCode === \"\") {\r\n        updateLoading(false);\r\n        updateAddressErrorMessage(errors.addressNotFound);\r\n        return;\r\n        // otherwise it succeeds, and postCode is passed on with full address (that includes postal code)\r\n      } else {\r\n        updateAddressErrorMessage(null);\r\n        updateLoading(false);\r\n        updateIsValidAddress(true);\r\n        updateServiceRequest({\r\n          ...serviceRequest,\r\n          addressComponents: {\r\n            ...serviceRequest.addressComponents,\r\n            streetNumber: streetNumber,\r\n            roadName: roadName,\r\n            suburbName: suburbName,\r\n            cityName: cityName,\r\n            regionName: regionName,\r\n            postCode: postCode,\r\n            latitude: latitude,\r\n            longitude: longitude,\r\n            formattedAddress: fullAddress.formatted_address,\r\n          },\r\n        });\r\n      }\r\n    } catch (error) {\r\n      updateLoading(false);\r\n      updateAddressErrorMessage(errors.apiError);\r\n    }\r\n  }\r\n\r\n  // Pull parts of an address out of the Google Maps geocoder result for API consumption\r\n  function extractAddressComponents(\r\n    components: google.maps.GeocoderAddressComponent[],\r\n    target: string\r\n  ) {\r\n    const { long_name: addressComponent = \"\" } =\r\n      components.find((c) => c.types.includes(target)) || {};\r\n    return addressComponent === null ? \"\" : addressComponent;\r\n  }\r\n\r\n  // Clicking on an address does not set the address field value or fire handleSelect they must be done manually.\r\n  function handleClick(value: string) {\r\n    updateServiceRequest({\r\n      ...serviceRequest,\r\n      addressComponents: {\r\n        ...serviceRequest.addressComponents,\r\n        formattedAddress: value,\r\n      },\r\n    });\r\n    handleSelect(value);\r\n  }\r\n\r\n  // Handles for when a user clicks or tabs out of the dropdown menu without selecting an address\r\n  function handleBlur(e: React.SyntheticEvent) {\r\n    if (\r\n      isLoading ||\r\n      serviceRequest.addressComponents.formattedAddress === null ||\r\n      serviceRequest.addressComponents.formattedAddress === \"\" ||\r\n      isValidAddress ||\r\n      addressErrorMessage !== null\r\n    ) {\r\n      return;\r\n    }\r\n    updateAddressErrorMessage(errors.noAddressSelected);\r\n  }\r\n\r\n  // Restricts autofilled addresses to NZ only\r\n  const searchOptions = {\r\n    types: [\"address\"],\r\n    componentRestrictions: { country: [\"nz\"] },\r\n  };\r\n\r\n  // Classes for address box, suggestion boxes and final suggestion box\r\n  const boxStyle =\r\n    \"w-full pl-3 py-3 focus:outline-none text-base placeholder-gray-500 text-gray-800\";\r\n  const addressBox = `${boxStyle} transition duration-300 ease-in-out pr-3 overflow-ellipsis whitespace-nowrap overflow-x-hidden focus:outline-none rounded border border-transparent focus:border-gray-800`;\r\n  const suggestionBoxes = `${boxStyle} border-t border-l border-r border-gray-300 bg-white hover:bg-gray-100 flex flex-row items-center min-w-0 rounded-none`;\r\n  const firstBox = `${suggestionBoxes}`;\r\n\r\n  return (\r\n    <div className=\"w-full h-full z-50 pb-4\">\r\n      <PlacesAutocomplete\r\n        value={\r\n          serviceRequest.addressComponents?.formattedAddress === null\r\n            ? \"\"\r\n            : serviceRequest.addressComponents.formattedAddress\r\n        }\r\n        onSelect={handleSelect}\r\n        searchOptions={searchOptions}\r\n        onChange={(value) => handleChange(value)}\r\n      >\r\n        {({ getInputProps, suggestions, loading }) => (\r\n          <div\r\n            className=\"relative w-full h-full bg-white shadow-sm rounded inline-block\"\r\n            onBlur={(e) => handleBlur(e)}\r\n          >\r\n            <input\r\n              data-lpignore=\"true\"\r\n              name=\"StreetAddress\"\r\n              placeholder={label}\r\n              title={label}\r\n              id=\"StreetAddress\"\r\n              {...getInputProps({\r\n                className: `${addressBox}`,\r\n                autoComplete: \"off\",\r\n                required: true,\r\n                results: 3,\r\n              })}\r\n            />\r\n            {addressErrorMessage && (\r\n              <div className=\"m-4 p-2 mb-4 border border-red-400 rounded flex items-center\">\r\n                <p className=\"text-red-400 flex-grow mr-4\">{addressErrorMessage}</p>\r\n                <div className=\"flex-shrink-0\">\r\n                  <ExclamationMark />\r\n                </div>\r\n              </div>\r\n            )}\r\n            {loading || isLoading ? (\r\n              <div className=\"absolute right-2 top-3 background-white-ie-fix w-8 h-6\">\r\n                <CircleSpinner />\r\n              </div>\r\n            ) : (\r\n              <div></div>\r\n            )}\r\n            <div className=\"absolute w-full shadow-md z-50\">\r\n              {suggestions.map((suggestion, i) => {\r\n                // restricts number of autocomplete suggestions for UI reasons\r\n                if (i < 3) {\r\n                  const style = suggestion.active ? `bg-gray-100 cursor-pointer` : \"cursor-pointer\";\r\n                  return (\r\n                    <div\r\n                      key={i}\r\n                      className={i === 0 ? `${firstBox} ${style}` : `${suggestionBoxes} ${style}`}\r\n                      onMouseDown={() => handleClick(suggestion.description)}\r\n                    >\r\n                      <p className=\"w-full truncate\">{suggestion.description}</p>\r\n                    </div>\r\n                  );\r\n                }\r\n                return <div key={i}></div>;\r\n              })}\r\n            </div>\r\n          </div>\r\n        )}\r\n      </PlacesAutocomplete>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddressAutocomplete;\r\n","import { IStyledCheckboxes } from \"../../core/types/types\";\r\nimport ExclamationMark from \"../ExclamationMark/ExclamationMark\";\r\n\r\nconst StyledCheckboxes: React.FC<IStyledCheckboxes> = ({\r\n  serviceRequest,\r\n  label,\r\n  serviceList,\r\n  onChange,\r\n  checkboxErrorMessage,\r\n}) => {\r\n  return (\r\n    <div className=\"flex flex-col items-start w-full mb-4 bg-white rounded px-4 py-3 border\">\r\n      <label htmlFor={label} className=\"text-base text-gray-500 pb-4\">\r\n        {label}\r\n      </label>\r\n      <div className=\"grid grid-cols-2 gap-1 w-full\">\r\n        {Object.values(serviceList).map((item: string, index: number) => {\r\n          return (\r\n            <div className=\"flex flex-row items-center w-full\" key={index}>\r\n              <input\r\n                id={item}\r\n                type=\"checkbox\"\r\n                name={item}\r\n                value={item}\r\n                title={label}\r\n                checked={serviceRequest.service?.includes(item) ? true : false}\r\n                className=\"mr-2\"\r\n                onChange={onChange}\r\n              />\r\n              <label htmlFor={item} className=\"text-base text-gray-800\">\r\n                {item}\r\n              </label>\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n      {checkboxErrorMessage && (\r\n        <div className=\"mt-4 p-2 w-full border border-red-400 rounded flex items-center\">\r\n          <p className=\"text-base text-red-400 flex-grow mr-4\">{checkboxErrorMessage}</p>\r\n          <div className=\"mr-2 flex-shrink-0\">\r\n            <ExclamationMark />\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StyledCheckboxes;\r\n","import { IStyledInput } from \"../../core/types/types\";\r\n\r\nconst StyledTextArea: React.FC<IStyledInput> = ({ label, required = true, onChange }) => {\r\n  return (\r\n    <div className=\"h-full w-full mb-4 flex flex-col\">\r\n      {/* <label htmlFor={label} className=\"subheading-font pb-2\">\r\n        {label}\r\n      </label> */}\r\n      <textarea\r\n        id={label}\r\n        name={label}\r\n        title={label}\r\n        placeholder={label}\r\n        onChange={onChange}\r\n        required={required}\r\n        className=\"border border-gray-300 pl-3 py-3 transition duration-300 ease-in-out shadow-sm rounded text-base focus:outline-none focus:border-gray-800 bg-white placeholder-gray-500 text-gray-800\"\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StyledTextArea;\r\n","import { IStyledInput } from \"../../core/types/types\";\r\n\r\nconst StyledInput: React.FC<IStyledInput> = ({\r\n  type = \"text\",\r\n  label,\r\n  required = true,\r\n  onChange,\r\n  value,\r\n}) => {\r\n  return (\r\n    <div className=\"h-full w-full mb-4 flex flex-col\">\r\n      {/* <label htmlFor={label} className=\"subheading-font pb-2\">\r\n        {label}\r\n      </label> */}\r\n      <input\r\n        type={type}\r\n        id={label}\r\n        name={label}\r\n        placeholder={label}\r\n        onChange={onChange}\r\n        required={required}\r\n        title={label}\r\n        value={value}\r\n        className=\"border border-gray-300 pl-3 py-3 transition duration-300 ease-in-out shadow-sm rounded text-base focus:outline-none focus:border-gray-800 bg-white placeholder-gray-500 text-gray-800\"\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StyledInput;\r\n","import \"./DotSpinner.css\";\r\n\r\nconst DotSpinner: React.FC = () => {\r\n  return (\r\n    <div className=\"w-full flex flex-row items-center justify-center\">\r\n      <div className=\"spinner flex flex-row items-center justify-center\">\r\n        {/* Invisible text with same font allows height of containing button to remain the same */}\r\n        <p className=\"body-font opacity-0\">.</p>\r\n        <div className=\"bounce1\"></div>\r\n        <div className=\"bounce2\"></div>\r\n        <div className=\"bounce3\"></div>\r\n        <p className=\"body-font opacity-0\">.</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DotSpinner;\r\n","import { SyntheticEvent, useState } from \"react\";\r\nimport { IStandardServicePath } from \"../../core/types/types\";\r\nimport AddressAutocomplete from \"../../components/AddressAutocomplete/AddressAutocomplete\";\r\nimport StyledCheckboxes from \"../../components/StyledInputs/StyledCheckboxes\";\r\nimport StyledTextArea from \"../../components/StyledInputs/StyledTextArea\";\r\nimport StyledInput from \"../../components/StyledInputs/StyledInput\";\r\nimport DotSpinner from \"../../components/DotSpinner/DotSpinner\";\r\nimport { motion } from \"framer-motion\";\r\nimport {\r\n  additionalBinServiceList,\r\n  animationVariants,\r\n  serviceList,\r\n  serviceRequestList,\r\n} from \"../../core/constants/constants\";\r\nimport ExclamationMark from \"../../components/ExclamationMark/ExclamationMark\";\r\n\r\nconst StandardServicePath: React.FC<IStandardServicePath> = ({\r\n  serviceRequest,\r\n  updateServiceRequest,\r\n  onSubmit,\r\n  checkboxErrorMessage,\r\n  updateCheckboxErrorMessage,\r\n  isLoading,\r\n  formErrorMessage,\r\n}) => {\r\n  const [addressErrorMessage, updateAddressErrorMessage] = useState<string | null>(null);\r\n  const [isValidAddress, updateIsValidAddress] = useState(false);\r\n\r\n  // Update service list in service request state when a checkbox is ticked or unticked\r\n  function handleCheckboxChange(e: SyntheticEvent) {\r\n    updateCheckboxErrorMessage(null);\r\n\r\n    const value = (e.target as HTMLInputElement).value;\r\n    if (serviceRequest.service === null) {\r\n      updateServiceRequest({\r\n        ...serviceRequest,\r\n        service: [value],\r\n      });\r\n    } else {\r\n      if (!serviceRequest.service?.includes(value)) {\r\n        updateServiceRequest({\r\n          ...serviceRequest,\r\n          service: [...serviceRequest.service, value],\r\n        });\r\n      } else {\r\n        updateServiceRequest({\r\n          ...serviceRequest,\r\n          service: serviceRequest.service.filter((item) => item !== value),\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  return (\r\n    <motion.form\r\n      variants={animationVariants}\r\n      initial=\"initial\"\r\n      animate=\"in\"\r\n      exit=\"out\"\r\n      className=\"flex flex-col items-center w-full\"\r\n      onSubmit={onSubmit}\r\n    >\r\n      <motion.div variants={animationVariants} className=\"w-full\">\r\n        <StyledCheckboxes\r\n          serviceRequest={serviceRequest}\r\n          label=\"Select the services that relate to your request\"\r\n          onChange={(e) => {\r\n            handleCheckboxChange(e);\r\n          }}\r\n          serviceList={\r\n            serviceRequest.serviceRequest === serviceRequestList.additionalBin\r\n              ? additionalBinServiceList\r\n              : serviceList\r\n          }\r\n          checkboxErrorMessage={checkboxErrorMessage}\r\n        />\r\n      </motion.div>\r\n      <motion.div variants={animationVariants} className=\"w-full\">\r\n        <StyledTextArea\r\n          label=\"Add any additional comments (optional)\"\r\n          required={false}\r\n          onChange={(e) =>\r\n            updateServiceRequest({\r\n              ...serviceRequest,\r\n              comments: (e.target as HTMLInputElement).value,\r\n            })\r\n          }\r\n        />\r\n      </motion.div>\r\n      {serviceRequest.serviceRequest === serviceRequestList.additionalBin && (\r\n        <motion.div variants={animationVariants} className=\"w-full\">\r\n          <StyledInput\r\n            label=\"Enter your assessment number (no special characters)\"\r\n            // this value is required to prevent a user from entering special characters\r\n            // which causes the API to parse it as null and handle the request\r\n            // as though it were only wanting to validate the address\r\n            value={\r\n              serviceRequest.assessmentNumber === null\r\n                ? \"\"\r\n                : serviceRequest.assessmentNumber.replaceAll(/[^A-Za-z0-9]/g, \"\")\r\n            }\r\n            onChange={(e) =>\r\n              updateServiceRequest({\r\n                ...serviceRequest,\r\n                assessmentNumber: (e.target as HTMLInputElement).value,\r\n              })\r\n            }\r\n          />\r\n        </motion.div>\r\n      )}\r\n      <motion.div variants={animationVariants} className=\"w-full\">\r\n        <AddressAutocomplete\r\n          label=\"Enter your address\"\r\n          serviceRequest={serviceRequest}\r\n          updateServiceRequest={updateServiceRequest}\r\n          addressErrorMessage={addressErrorMessage}\r\n          updateAddressErrorMessage={updateAddressErrorMessage}\r\n          isValidAddress={isValidAddress}\r\n          updateIsValidAddress={updateIsValidAddress}\r\n        />\r\n      </motion.div>\r\n      {formErrorMessage && (\r\n        <motion.div variants={animationVariants} className=\"mb-4 bg-white rounded w-full\">\r\n          <div className=\"m-2 p-2 relative border border-red-400 rounded flex items-center justify-end\">\r\n            <p className=\"mr-0 flex-grow text-red-400 \">{formErrorMessage}</p>\r\n            <div className=\"flex-shrink-0 mr-2\">\r\n              <ExclamationMark />\r\n            </div>\r\n          </div>\r\n        </motion.div>\r\n      )}\r\n      <motion.div variants={animationVariants} className=\"w-full flex justify-end\">\r\n        <button\r\n          type=\"submit\"\r\n          disabled={addressErrorMessage !== null || checkboxErrorMessage !== null}\r\n          className=\"body-font disabled-cursor-style w-28 xl:w-40 text-white bg-tcc-green transition duration-300 ease-in-out hover:bg-tcc-green-lighter rounded py-2.5 md:py-3 focus:outline-none border border-transparent focus:border-gray-800\"\r\n        >\r\n          {isLoading ? <DotSpinner /> : \"Submit\"}\r\n        </button>\r\n      </motion.div>\r\n    </motion.form>\r\n  );\r\n};\r\n\r\nexport default StandardServicePath;\r\n","import { IStyledSelect } from \"../../core/types/types\";\r\n\r\nconst StyledSelect: React.FC<IStyledSelect> = ({\r\n  label,\r\n  required = true,\r\n  dropdownItems,\r\n  onChange,\r\n}) => {\r\n  return (\r\n    <div className=\"h-full w-full mb-4 flex flex-col\">\r\n      {/* <label htmlFor={label} className=\"subheading-font pb-2\">\r\n        {label}\r\n      </label> */}\r\n      <div className=\"shadow-sm rounded flex relative\">\r\n        <select\r\n          name={label}\r\n          required={required}\r\n          id={label}\r\n          onChange={onChange}\r\n          title={label}\r\n          defaultValue=\"\"\r\n          className=\"bg-white appearance-none z-10 pl-3 text-base transition duration-300 ease-in-out placeholder-gray-500 text-gray-800 py-3 w-full border border-transparent focus:outline-none focus:border-gray-800 rounded\"\r\n        >\r\n          <option disabled value=\"\">\r\n            Select your service\r\n          </option>\r\n          {dropdownItems &&\r\n            Object.values(dropdownItems).map((item: string, index: number) => (\r\n              <option value={item} key={index}>\r\n                {item}\r\n              </option>\r\n            ))}\r\n        </select>\r\n        <div\r\n          className=\"px-4 flex items-center border-l border-gray-300 flex-col justify-center text-gray-500\r\n    absolute right-0 bottom-0 top-0 mx-auto z-20 pointer-events-none \"\r\n        >\r\n          <svg\r\n            tabIndex={-1}\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n            className=\"icon icon-tabler icon-tabler-chevron-up\"\r\n            width={16}\r\n            height={16}\r\n            viewBox=\"0 0 24 24\"\r\n            strokeWidth=\"1.5\"\r\n            stroke=\"currentColor\"\r\n            fill=\"none\"\r\n            strokeLinecap=\"round\"\r\n            strokeLinejoin=\"round\"\r\n          >\r\n            <path stroke=\"none\" d=\"M0 0h24v24H0z\" />\r\n            <polyline points=\"6 15 12 9 18 15\" />\r\n          </svg>\r\n          <svg\r\n            tabIndex={-1}\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n            className=\"icon icon-tabler icon-tabler-chevron-down\"\r\n            width={16}\r\n            height={16}\r\n            viewBox=\"0 0 24 24\"\r\n            strokeWidth=\"1.5\"\r\n            stroke=\"currentColor\"\r\n            fill=\"none\"\r\n            strokeLinecap=\"round\"\r\n            strokeLinejoin=\"round\"\r\n          >\r\n            <path stroke=\"none\" d=\"M0 0h24v24H0z\" />\r\n            <polyline points=\"6 9 12 15 18 9\" />\r\n          </svg>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StyledSelect;\r\n","import { IMarker } from \"../../core/types/types\";\r\nimport \"./marker-style.css\";\r\n\r\nconst Marker: React.FC<IMarker> = ({ lat, lng }) => (\r\n  <img src=\"marker.png\" alt=\"\" className=\"correct-position h-12\" />\r\n);\r\n\r\nexport default Marker;\r\n","import GoogleMapReact from \"google-map-react\";\r\nimport Marker from \"../Marker/Marker\";\r\nimport { useEffect, useMemo, useState } from \"react\";\r\nimport { ILatLng, IMap } from \"../../core/types/types\";\r\n\r\nconst Map: React.FC<IMap> = ({ serviceRequest, updateServiceRequest }) => {\r\n  const [isDraggable, updateIsDraggable] = useState(true);\r\n  const [markerLatLng, updateMarkerLatLng] = useState<ILatLng| null>(null); // prettier-ignore\r\n  const [zoomPosition, updateZoomPosition] = useState(4);\r\n  const [centerPosition, updateCenterPosition] = useState<ILatLng>({\r\n    lat: -41.3003361,\r\n    lng: 173.2186754,\r\n  });\r\n  const serviceRequestLatLng = useMemo(() => {\r\n    return {\r\n      lat: serviceRequest.addressComponents.latitude,\r\n      lng: serviceRequest.addressComponents.longitude,\r\n    };\r\n  }, [serviceRequest.addressComponents]);\r\n\r\n  // Updates marker latLng, camera position and zoom whenever the service request's latLng is changed\r\n  //? Not ideal, this means that marker position is updated twice when marker is dragged\r\n  //? Also, zoom doesn't change if a user has manually adjusted the zoom\r\n  useEffect(() => {\r\n    if (serviceRequestLatLng.lat !== null && serviceRequestLatLng.lng !== null) {\r\n      updateMarkerLatLng({ lat: serviceRequestLatLng.lat, lng: serviceRequestLatLng.lng });\r\n      updateCenterPosition(serviceRequestLatLng);\r\n      updateZoomPosition(18);\r\n    }\r\n  }, [serviceRequestLatLng]);\r\n\r\n  return (\r\n    <div className=\"w-full mb-4\">\r\n      <div className=\"h-80 w-full relative\">\r\n        <p className=\"hidden sm:block bg-white p-2 text-base text-gray-500 rounded border border-gray-100 shadow whitespace-nowrap absolute top-2 right-2 z-10 opacity-90\">\r\n          Drag and drop the marker for greater accuracy\r\n        </p>\r\n        <GoogleMapReact\r\n          bootstrapURLKeys={{ key: \"AIzaSyDBUKNe73SRE3Tr1K1crTDO1Jrw6FKSlS0\" }}\r\n          center={\r\n            centerPosition.lat == null || centerPosition.lng == null\r\n              ? { lat: -41.3003361, lng: 173.2186754 }\r\n              : { lat: centerPosition.lat, lng: centerPosition.lng }\r\n          }\r\n          zoom={zoomPosition}\r\n          draggable={isDraggable}\r\n          options={{ scrollwheel: true, fullscreenControl: false }}\r\n          // on mousedown, stop map from being draggable\r\n          onChildMouseDown={() => updateIsDraggable(false)}\r\n          // on mousemove, update the markers latLng\r\n          onChildMouseMove={(hoverKey, childProps, mouse) => updateMarkerLatLng({ lat: mouse.lat, lng: mouse.lng })} // prettier-ignore\r\n          // on mouseup, make map draggable and update the service request's latLng\r\n          onChildMouseUp={() => {\r\n            updateIsDraggable(true);\r\n            markerLatLng &&\r\n              updateServiceRequest({\r\n                ...serviceRequest,\r\n                addressComponents: {\r\n                  ...serviceRequest.addressComponents,\r\n                  latitude: markerLatLng.lat,\r\n                  longitude: markerLatLng.lng,\r\n                },\r\n              });\r\n          }}\r\n        >\r\n          {markerLatLng && (\r\n            <Marker lat={markerLatLng.lat ?? -41.3003361} lng={markerLatLng.lng ?? 173.2186754} />\r\n          )}\r\n        </GoogleMapReact>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Map;\r\n","import React, { useState } from \"react\";\r\nimport AddressAutocomplete from \"../../components/AddressAutocomplete/AddressAutocomplete\";\r\nimport StyledTextArea from \"../../components/StyledInputs/StyledTextArea\";\r\nimport StyledInput from \"../../components/StyledInputs/StyledInput\";\r\nimport Map from \"../../components/Map/Map\";\r\nimport { IIllegalDumpingPath } from \"../../core/types/types\";\r\nimport { animationVariants } from \"../../core/constants/constants\";\r\nimport { motion } from \"framer-motion\";\r\nimport DotSpinner from \"../../components/DotSpinner/DotSpinner\";\r\nimport ExclamationMark from \"../../components/ExclamationMark/ExclamationMark\";\r\n\r\nconst IllegalDumpingPath: React.FC<IIllegalDumpingPath> = ({\r\n  serviceRequest,\r\n  updateServiceRequest,\r\n  onSubmit,\r\n  isLoading,\r\n  formErrorMessage,\r\n}) => {\r\n  const [addressErrorMessage, updateAddressErrorMessage] = useState<string | null>(null);\r\n  const [isValidAddress, updateIsValidAddress] = useState(false);\r\n\r\n  return (\r\n    <motion.form\r\n      variants={animationVariants}\r\n      initial=\"initial\"\r\n      animate=\"in\"\r\n      exit=\"out\"\r\n      className=\"flex flex-col items-center w-full\"\r\n      onSubmit={onSubmit}\r\n    >\r\n      <motion.div variants={animationVariants} className=\"w-full\">\r\n        <StyledInput\r\n          label=\"Please describe the waste\"\r\n          onChange={(e) =>\r\n            updateServiceRequest({\r\n              ...serviceRequest,\r\n              wasteDetails: {\r\n                ...serviceRequest.wasteDetails,\r\n                wasteDescription: (e.target as HTMLInputElement).value,\r\n              },\r\n            })\r\n          }\r\n        />\r\n      </motion.div>\r\n      <motion.div variants={animationVariants} className=\"w-full\">\r\n        <StyledInput\r\n          label=\"What is the approximate volume of the waste?\"\r\n          onChange={(e) =>\r\n            updateServiceRequest({\r\n              ...serviceRequest,\r\n              wasteDetails: {\r\n                ...serviceRequest.wasteDetails,\r\n                approxAmount: (e.target as HTMLInputElement).value,\r\n              },\r\n            })\r\n          }\r\n        />\r\n      </motion.div>\r\n\r\n      <motion.div variants={animationVariants} className=\"w-full\">\r\n        <StyledInput\r\n          label=\"How long has the waste been in the area? (optional)\"\r\n          required={false}\r\n          onChange={(e) =>\r\n            updateServiceRequest({\r\n              ...serviceRequest,\r\n              wasteDetails: {\r\n                ...serviceRequest.wasteDetails,\r\n                duration: (e.target as HTMLInputElement).value,\r\n              },\r\n            })\r\n          }\r\n        />\r\n      </motion.div>\r\n      <motion.div variants={animationVariants} className=\"w-full\">\r\n        <StyledInput\r\n          label=\"Who dumped the waste? (optional)\"\r\n          required={false}\r\n          onChange={(e) =>\r\n            updateServiceRequest({\r\n              ...serviceRequest,\r\n              wasteDetails: {\r\n                ...serviceRequest.wasteDetails,\r\n                whoDumped: (e.target as HTMLInputElement).value,\r\n              },\r\n            })\r\n          }\r\n        />\r\n      </motion.div>\r\n      <motion.div variants={animationVariants} className=\"w-full\">\r\n        <StyledInput\r\n          label=\"Has this type of dumping occurred in the past? (optional)\"\r\n          required={false}\r\n          onChange={(e) =>\r\n            updateServiceRequest({\r\n              ...serviceRequest,\r\n              wasteDetails: {\r\n                ...serviceRequest.wasteDetails,\r\n                occurredPreviously: (e.target as HTMLInputElement).value,\r\n              },\r\n            })\r\n          }\r\n        />\r\n      </motion.div>\r\n      <motion.div variants={animationVariants} className=\"w-full\">\r\n        <StyledTextArea\r\n          label=\"Add any additional comments (optional)\"\r\n          required={false}\r\n          onChange={(e) =>\r\n            updateServiceRequest({\r\n              ...serviceRequest,\r\n              comments: (e.target as HTMLInputElement).value,\r\n            })\r\n          }\r\n        />\r\n      </motion.div>\r\n      <motion.div variants={animationVariants} className=\"w-full z-50\">\r\n        <AddressAutocomplete\r\n          label=\"Enter the approximate address\"\r\n          serviceRequest={serviceRequest}\r\n          updateServiceRequest={updateServiceRequest}\r\n          addressErrorMessage={addressErrorMessage}\r\n          updateAddressErrorMessage={updateAddressErrorMessage}\r\n          isValidAddress={isValidAddress}\r\n          updateIsValidAddress={updateIsValidAddress}\r\n        />\r\n      </motion.div>\r\n      <motion.div variants={animationVariants} className=\"w-full\">\r\n        <Map serviceRequest={serviceRequest} updateServiceRequest={updateServiceRequest} />\r\n      </motion.div>\r\n      {formErrorMessage && (\r\n        <motion.div variants={animationVariants} className=\"mb-4 bg-white rounded w-full\">\r\n          <div className=\"m-2 p-2 relative border border-red-400 rounded flex items-center justify-end\">\r\n            <p className=\"mr-0 flex-grow text-red-400 \">{formErrorMessage}</p>\r\n            <div className=\"flex-shrink-0 mr-2\">\r\n              <ExclamationMark />\r\n            </div>\r\n          </div>\r\n        </motion.div>\r\n      )}\r\n      <motion.div variants={animationVariants} className=\"w-full flex items-start justify-end\">\r\n        <button\r\n          type=\"submit\"\r\n          disabled={addressErrorMessage !== null}\r\n          className=\"body-font disabled-cursor-style flex-shrink-0 w-28 xl:w-40 text-white bg-tcc-green transition duration-300 ease-in-out hover:bg-tcc-green-lighter rounded py-2.5 md:py-3 focus:outline-none border border-transparent focus:border-gray-800\"\r\n        >\r\n          {isLoading ? <DotSpinner /> : \"Submit\"}\r\n        </button>\r\n      </motion.div>\r\n    </motion.form>\r\n  );\r\n};\r\n\r\nexport default IllegalDumpingPath;\r\n","import React, { useState } from \"react\";\r\nimport AddressAutocomplete from \"../../components/AddressAutocomplete/AddressAutocomplete\";\r\nimport StyledTextArea from \"../../components/StyledInputs/StyledTextArea\";\r\nimport StyledSelect from \"../../components/StyledInputs/StyledSelect\";\r\nimport Map from \"../../components/Map/Map\";\r\nimport { publicLitterBinsList, animationVariants } from \"../../core/constants/constants\";\r\nimport { IPublicLitterBinsPath } from \"../../core/types/types\";\r\nimport { motion } from \"framer-motion\";\r\nimport DotSpinner from \"../../components/DotSpinner/DotSpinner\";\r\nimport ExclamationMark from \"../../components/ExclamationMark/ExclamationMark\";\r\n\r\nconst PublicLitterBinsPath: React.FC<IPublicLitterBinsPath> = ({\r\n  serviceRequest,\r\n  updateServiceRequest,\r\n  onSubmit,\r\n  isLoading,\r\n  formErrorMessage,\r\n}) => {\r\n  const [addressErrorMessage, updateAddressErrorMessage] = useState<string | null>(null);\r\n  const [isValidAddress, updateIsValidAddress] = useState(false);\r\n\r\n  return (\r\n    <motion.form\r\n      variants={animationVariants}\r\n      initial=\"initial\"\r\n      animate=\"in\"\r\n      exit=\"out\"\r\n      className=\"flex flex-col items-center w-full\"\r\n      onSubmit={onSubmit}\r\n    >\r\n      <motion.div variants={animationVariants} className=\"w-full\">\r\n        <StyledSelect\r\n          label=\"Select from the following\"\r\n          dropdownItems={publicLitterBinsList}\r\n          onChange={(e) =>\r\n            updateServiceRequest({\r\n              ...serviceRequest,\r\n              publicLitterType: (e.target as HTMLInputElement).value,\r\n            })\r\n          }\r\n        />\r\n      </motion.div>\r\n      <motion.div variants={animationVariants} className=\"w-full\">\r\n        <StyledTextArea\r\n          label=\"Add any additional comments (optional)\"\r\n          required={false}\r\n          onChange={(e) =>\r\n            updateServiceRequest({\r\n              ...serviceRequest,\r\n              comments: (e.target as HTMLInputElement).value,\r\n            })\r\n          }\r\n        />\r\n      </motion.div>\r\n      <motion.div variants={animationVariants} className=\"w-full z-50\">\r\n        <AddressAutocomplete\r\n          label=\"Enter the approximate address\"\r\n          serviceRequest={serviceRequest}\r\n          updateServiceRequest={updateServiceRequest}\r\n          addressErrorMessage={addressErrorMessage}\r\n          updateAddressErrorMessage={updateAddressErrorMessage}\r\n          isValidAddress={isValidAddress}\r\n          updateIsValidAddress={updateIsValidAddress}\r\n        />\r\n      </motion.div>\r\n      <motion.div variants={animationVariants} className=\"w-full\">\r\n        <Map serviceRequest={serviceRequest} updateServiceRequest={updateServiceRequest} />\r\n      </motion.div>\r\n      {formErrorMessage && (\r\n        <motion.div variants={animationVariants} className=\"mb-4 bg-white rounded w-full\">\r\n          <div className=\"m-2 p-2 relative border border-red-400 rounded flex items-center justify-end\">\r\n            <p className=\"mr-0 flex-grow text-red-400 \">{formErrorMessage}</p>\r\n            <div className=\"flex-shrink-0 mr-2\">\r\n              <ExclamationMark />\r\n            </div>\r\n          </div>\r\n        </motion.div>\r\n      )}\r\n      <motion.div variants={animationVariants} className=\"w-full flex justify-end\">\r\n        <button\r\n          type=\"submit\"\r\n          disabled={addressErrorMessage !== null}\r\n          className=\"body-font disabled-cursor-style w-28 xl:w-40 text-white bg-tcc-green transition duration-300 ease-in-out hover:bg-tcc-green-lighter rounded py-2.5 md:py-3 focus:outline-none border border-transparent focus:border-gray-800\"\r\n        >\r\n          {isLoading ? <DotSpinner /> : \"Submit\"}\r\n        </button>\r\n      </motion.div>\r\n    </motion.form>\r\n  );\r\n};\r\n\r\nexport default PublicLitterBinsPath;\r\n","import AddressAutocomplete from \"../../components/AddressAutocomplete/AddressAutocomplete\";\r\nimport StyledTextArea from \"../../components/StyledInputs/StyledTextArea\";\r\nimport DotSpinner from \"../../components/DotSpinner/DotSpinner\";\r\nimport StyledSelect from \"../../components/StyledInputs/StyledSelect\";\r\nimport StyledInput from \"../../components/StyledInputs/StyledInput\";\r\nimport Map from \"../../components/Map/Map\";\r\nimport { looseLitterList, animationVariants } from \"../../core/constants/constants\";\r\nimport { ILooseLitterPath } from \"../../core/types/types\";\r\nimport { motion } from \"framer-motion\";\r\nimport React, { useState } from \"react\";\r\nimport ExclamationMark from \"../../components/ExclamationMark/ExclamationMark\";\r\n\r\nconst LooseLitterPath: React.FC<ILooseLitterPath> = ({\r\n  serviceRequest,\r\n  updateServiceRequest,\r\n  onSubmit,\r\n  isLoading,\r\n  formErrorMessage,\r\n}) => {\r\n  const [addressErrorMessage, updateAddressErrorMessage] = useState<string | null>(null);\r\n  const [isValidAddress, updateIsValidAddress] = useState(false);\r\n\r\n  return (\r\n    <motion.form\r\n      variants={animationVariants}\r\n      initial=\"initial\"\r\n      animate=\"in\"\r\n      exit=\"out\"\r\n      className=\"flex flex-col items-center w-full\"\r\n      onSubmit={onSubmit}\r\n    >\r\n      <motion.div variants={animationVariants} className=\"w-full\">\r\n        <StyledSelect\r\n          label=\"Select an option\"\r\n          dropdownItems={looseLitterList}\r\n          onChange={(e) =>\r\n            updateServiceRequest({\r\n              ...serviceRequest,\r\n              looseLitterType: (e.target as HTMLInputElement).value,\r\n            })\r\n          }\r\n        />\r\n      </motion.div>\r\n      <motion.div variants={animationVariants} className=\"w-full\">\r\n        <StyledInput\r\n          label=\"Please describe the waste\"\r\n          onChange={(e) =>\r\n            updateServiceRequest({\r\n              ...serviceRequest,\r\n              wasteDetails: {\r\n                ...serviceRequest.wasteDetails,\r\n                wasteDescription: (e.target as HTMLInputElement).value,\r\n              },\r\n            })\r\n          }\r\n        />\r\n      </motion.div>\r\n      <motion.div variants={animationVariants} className=\"w-full\">\r\n        <StyledInput\r\n          label=\"What is the approximate volume of the waste?\"\r\n          onChange={(e) =>\r\n            updateServiceRequest({\r\n              ...serviceRequest,\r\n              wasteDetails: {\r\n                ...serviceRequest.wasteDetails,\r\n                approxAmount: (e.target as HTMLInputElement).value,\r\n              },\r\n            })\r\n          }\r\n        />\r\n      </motion.div>\r\n      <motion.div variants={animationVariants} className=\"w-full\">\r\n        <StyledInput\r\n          label=\"How long has the waste been in the area? (optional)\"\r\n          required={false}\r\n          onChange={(e) =>\r\n            updateServiceRequest({\r\n              ...serviceRequest,\r\n              wasteDetails: {\r\n                ...serviceRequest.wasteDetails,\r\n                duration: (e.target as HTMLInputElement).value,\r\n              },\r\n            })\r\n          }\r\n        />\r\n      </motion.div>\r\n      <motion.div variants={animationVariants} className=\"w-full\">\r\n        <StyledTextArea\r\n          label=\"Add any additional comments (optional)\"\r\n          required={false}\r\n          onChange={(e) =>\r\n            updateServiceRequest({\r\n              ...serviceRequest,\r\n              comments: (e.target as HTMLInputElement).value,\r\n            })\r\n          }\r\n        />\r\n      </motion.div>\r\n      <motion.div variants={animationVariants} className=\"w-full z-50\">\r\n        <AddressAutocomplete\r\n          label=\"Enter the approximate address\"\r\n          serviceRequest={serviceRequest}\r\n          updateServiceRequest={updateServiceRequest}\r\n          addressErrorMessage={addressErrorMessage}\r\n          updateAddressErrorMessage={updateAddressErrorMessage}\r\n          isValidAddress={isValidAddress}\r\n          updateIsValidAddress={updateIsValidAddress}\r\n        />\r\n      </motion.div>\r\n      <motion.div variants={animationVariants} className=\"w-full\">\r\n        <Map serviceRequest={serviceRequest} updateServiceRequest={updateServiceRequest} />\r\n      </motion.div>\r\n      {formErrorMessage && (\r\n        <motion.div variants={animationVariants} className=\"mb-4 bg-white rounded w-full\">\r\n          <div className=\"m-2 p-2 relative border border-red-400 rounded flex items-center justify-end\">\r\n            <p className=\"mr-0 flex-grow text-red-400 \">{formErrorMessage}</p>\r\n            <div className=\"flex-shrink-0 mr-2\">\r\n              <ExclamationMark />\r\n            </div>\r\n          </div>\r\n        </motion.div>\r\n      )}\r\n      <motion.div variants={animationVariants} className=\"w-full flex justify-end\">\r\n        <button\r\n          type=\"submit\"\r\n          disabled={addressErrorMessage !== null}\r\n          className=\"body-font disabled-cursor-style w-28 xl:w-40 text-white bg-tcc-green transition duration-300 ease-in-out hover:bg-tcc-green-lighter rounded py-2.5 md:py-3 focus:outline-none border border-transparent focus:border-gray-800\"\r\n        >\r\n          {isLoading ? <DotSpinner /> : \"Submit\"}\r\n        </button>\r\n      </motion.div>\r\n    </motion.form>\r\n  );\r\n};\r\n\r\nexport default LooseLitterPath;\r\n","const local = {\r\n  requireLogin: false,\r\n  apiBaseUrl: \"http://localhost:7071/API/\",\r\n  keys: {\r\n    createServiceRequestKey: \"\",\r\n    checkAddressKey: \"\",\r\n  },\r\n};\r\n\r\nconst dev = {\r\n  requireLogin: true,\r\n  apiBaseUrl: \"https://environz-api-dev.azurewebsites.net/API/\",\r\n  keys: {\r\n    createServiceRequestKey: \"wtxg8KH0Hy82VrO3SJyJ2oXSSZNAisYb5gL2hin1NuMHlRniAywYFA==\",\r\n    checkAddressKey: \"ovF57taafv4Lg0MRzupyAv8umU9HEc0EQTf8PgcXAyGideLUvm90uQ==\",\r\n  },\r\n};\r\n\r\nconst prod = {\r\n  requireLogin: false,\r\n  apiBaseUrl: \"https://environz-api-dev.azurewebsites.net/API/\",\r\n  keys: {\r\n    createServiceRequestKey: \"\",\r\n    checkAddressKey: \"\",\r\n  },\r\n};\r\n\r\nexport const envConfig =\r\n  process.env.REACT_APP_ENVIRONMENT === \"prod\"\r\n    ? prod\r\n    : process.env.REACT_APP_ENVIRONMENT === \"local\"\r\n    ? local\r\n    : dev;\r\n","import axios from \"axios\";\r\nimport { envConfig } from \"../environment/envConfig\";\r\nimport { IServiceRequest, IServiceRequestWithServiceString } from \"../types/types\";\r\n\r\naxios.defaults.baseURL = envConfig.apiBaseUrl;\r\n\r\n// Creates a service request in the database and returns a ticket number to the user\r\nconst createServiceRequest = async (\r\n  serviceRequest: IServiceRequest | IServiceRequestWithServiceString\r\n) => {\r\n  try {\r\n    const env = process.env.REACT_APP_ENVIRONMENT === \"prod\" ? \"prod\" : \"dev\";\r\n    const queryParams = {\r\n      env: env,\r\n      code: envConfig.keys.createServiceRequestKey,\r\n    };\r\n    const response = await axios.post(\"tcc/createservicerequest\", serviceRequest, {\r\n      params: queryParams,\r\n    });\r\n    return response;\r\n  } catch (error) {\r\n    // error.response has access to status and data set in API\r\n    return error.response;\r\n  }\r\n};\r\n\r\nconst checkAddress = async (address: string, postCode?: string, assessmentNumber?: string) => {\r\n  try {\r\n    const env = process.env.REACT_APP_ENVIRONMENT === \"prod\" ? \"prod\" : \"dev\";\r\n    const queryParams = {\r\n      env: env,\r\n      code: envConfig.keys.checkAddressKey,\r\n      street: address,\r\n      postcode: postCode,\r\n      assessmentNo: assessmentNumber,\r\n    };\r\n    const response = await axios.get(\"tcc/checkaddress\", {\r\n      params: queryParams,\r\n    });\r\n    return response;\r\n  } catch (error) {\r\n    return error.response;\r\n  }\r\n};\r\n\r\nexport const apiService = {\r\n  createServiceRequest,\r\n  checkAddress,\r\n};\r\n","import StandardServicePath from \"../paths/StandardServicePath/StandardServicePath\";\r\nimport StyledSelect from \"../components/StyledInputs/StyledSelect\";\r\nimport IllegalDumpingPath from \"../paths/IllegalDumpingPath/IllegalDumpingPath\";\r\nimport PublicLitterBinsPath from \"../paths/PublicLitterBins/PublicLittersBinsPath\";\r\nimport LooseLitterPath from \"../paths/LooseLitterPath/LooseLitterPath\";\r\nimport { serviceRequestList } from \"../core/constants/constants\";\r\nimport { IHome, IServiceRequestWithServiceString } from \"../core/types/types\";\r\nimport { apiService } from \"../core/services/apiService\";\r\nimport { AnimatePresence } from \"framer-motion\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { FormEvent, useState } from \"react\";\r\nimport { AxiosResponse } from \"axios\";\r\n\r\nconst Home: React.FC<IHome> = ({\r\n  initialState,\r\n  serviceRequest,\r\n  updateServiceRequest,\r\n  updateHasCompletedForm,\r\n}) => {\r\n  const [formErrorMessage, updateFormErrorMessage] = useState<string | null>(null);\r\n  const [checkboxErrorMessage, updateCheckboxErrorMessage] = useState<string | null>(null);\r\n  const [isLoading, updateIsLoading] = useState(false);\r\n  const history = useHistory();\r\n  const errors = {\r\n    checkboxError: \"You need to select a service from the checkboxes above.\",\r\n    addressValidationError:\r\n      \"We were unable to find an address with those details. Please try again later or contact us.\",\r\n    apiError: \"Something went wrong with this request. Please try again later or contact us.\",\r\n  };\r\n\r\n  // SUBMIT METHOD FOR SERVICE REQUESTS THAT HAVE NO SERVICES (IE NO CHECKBOXES)\r\n  async function onSubmit(e: FormEvent) {\r\n    e.preventDefault();\r\n    updateFormErrorMessage(null);\r\n    updateIsLoading(true);\r\n\r\n    const response = await apiService.createServiceRequest(serviceRequest);\r\n    handleResponse(response);\r\n  }\r\n\r\n  // SUBMIT METHOD FOR SERVICE REQUESTS WITH ONE OR MORE SERVICES (IE THEY HAVE CHECKBOXES)\r\n  async function onSubmitWithCheckboxes(e: FormEvent) {\r\n    e.preventDefault();\r\n    updateFormErrorMessage(null);\r\n    updateIsLoading(true);\r\n    // ensure at least one checkbox is ticked\r\n    if (!validateCheckboxes()) {\r\n      updateCheckboxErrorMessage(errors.checkboxError);\r\n      updateIsLoading(false);\r\n      return;\r\n    }\r\n\r\n    if (await validateResidentOrRatepayer()) {\r\n      const serviceRequestWithServiceString: IServiceRequestWithServiceString = Object.assign(\r\n        {},\r\n        serviceRequest,\r\n        { service: serviceRequest.service?.toString() }\r\n      );\r\n      const response = await apiService.createServiceRequest(serviceRequestWithServiceString);\r\n      handleResponse(response);\r\n    }\r\n  }\r\n\r\n  // RESPONSE HANDLER FOR BOTH SUBMIT METHODS\r\n  function handleResponse(response: AxiosResponse) {\r\n    if (response?.status === 200) {\r\n      if (parseInt(response.data)) {\r\n        serviceRequest.ticketNumber = parseInt(response.data);\r\n        updateHasCompletedForm(true);\r\n        updateIsLoading(false);\r\n        history.push(\"/confirmation\");\r\n      }\r\n    } else {\r\n      updateIsLoading(false);\r\n      updateFormErrorMessage(errors.apiError);\r\n    }\r\n  }\r\n\r\n  // VALIDATE EITHER AN ADDRESS OR AN ADDRESS AND ASSESSMENT NUMBER WITH TCC KERBSIDE DATA\r\n  async function validateResidentOrRatepayer(): Promise<boolean> {\r\n    const { streetNumber, roadName, postCode } = serviceRequest.addressComponents;\r\n    const address = `${streetNumber} ${roadName}`;\r\n    const assessmentNumber = serviceRequest.assessmentNumber ?? \"\";\r\n\r\n    const response = await apiService.checkAddress(address, postCode ?? \"\", assessmentNumber);\r\n\r\n    if (response?.status === 200) {\r\n      return true;\r\n    } else if (response?.status === 400 && response?.data === \"Failed\") {\r\n      updateFormErrorMessage(errors.addressValidationError);\r\n      updateIsLoading(false);\r\n      return false;\r\n    }\r\n    updateFormErrorMessage(errors.apiError);\r\n    updateIsLoading(false);\r\n    return false;\r\n  }\r\n\r\n  // VALIDATE CHECKBOXES: SERVICE ARRAY CAN BE BOTH EMPTY AND NULL TO FAIL\r\n  function validateCheckboxes(): boolean {\r\n    if (serviceRequest.service === null || !serviceRequest.service.length) {\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  return (\r\n    <div className=\"sm:mt-10 mb-10 w-11/12 md:w-8/12 xl:6/12\">\r\n      <div className=\"py-12 my-auto mx-auto flex flex-col items-start justify-start xl:w-4/5 2xl:w-6/12\">\r\n        <h1 className=\"heading-font w-full text-left mb-6\">\r\n          Report an issue with <br />\r\n          your waste services\r\n        </h1>\r\n        {/******** SERVICE REQUEST DROPDOWN ********/}\r\n        <StyledSelect\r\n          label=\"Please select your service request\"\r\n          dropdownItems={serviceRequestList}\r\n          onChange={(e) => {\r\n            updateIsLoading(false); // when path is changed, reset the isLoading state for button animations\r\n            updateFormErrorMessage(null); // reset main form error message\r\n            updateCheckboxErrorMessage(null); // reset the checkbox error\r\n            updateServiceRequest({\r\n              ...initialState,\r\n              serviceRequest: (e.target as HTMLInputElement).value,\r\n            });\r\n          }}\r\n        />\r\n        {/******** PATH FOR DAMAGED BIN SERVICE REQUESTS ********/}\r\n        <AnimatePresence exitBeforeEnter>\r\n          {serviceRequest?.serviceRequest === serviceRequestList.damagedBin && (\r\n            <StandardServicePath\r\n              key={1}\r\n              serviceRequest={serviceRequest}\r\n              updateServiceRequest={updateServiceRequest}\r\n              onSubmit={(e) => onSubmitWithCheckboxes(e)}\r\n              checkboxErrorMessage={checkboxErrorMessage}\r\n              updateCheckboxErrorMessage={updateCheckboxErrorMessage}\r\n              isLoading={isLoading}\r\n              formErrorMessage={formErrorMessage}\r\n            />\r\n          )}\r\n          {/******** PATH FOR MISSING BIN SERVICE REQUESTS ********/}\r\n          {serviceRequest?.serviceRequest === serviceRequestList.missingBin && (\r\n            <StandardServicePath\r\n              key={2}\r\n              serviceRequest={serviceRequest}\r\n              updateServiceRequest={updateServiceRequest}\r\n              onSubmit={(e) => onSubmitWithCheckboxes(e)}\r\n              checkboxErrorMessage={checkboxErrorMessage}\r\n              updateCheckboxErrorMessage={updateCheckboxErrorMessage}\r\n              isLoading={isLoading}\r\n              formErrorMessage={formErrorMessage}\r\n            />\r\n          )}\r\n          {/******** PATH FOR ADDITIONAL BIN SERVICE REQUESTS ********/}\r\n          {serviceRequest?.serviceRequest === serviceRequestList.additionalBin && (\r\n            <StandardServicePath\r\n              key={3}\r\n              serviceRequest={serviceRequest}\r\n              updateServiceRequest={updateServiceRequest}\r\n              onSubmit={(e) => onSubmitWithCheckboxes(e)}\r\n              checkboxErrorMessage={checkboxErrorMessage}\r\n              updateCheckboxErrorMessage={updateCheckboxErrorMessage}\r\n              isLoading={isLoading}\r\n              formErrorMessage={formErrorMessage}\r\n            />\r\n          )}\r\n          {/******** PATH FOR MISSED COLLECTION SERVICE REQUESTS ********/}\r\n          {serviceRequest?.serviceRequest === serviceRequestList.missedCollection && (\r\n            <StandardServicePath\r\n              key={4}\r\n              serviceRequest={serviceRequest}\r\n              updateServiceRequest={updateServiceRequest}\r\n              onSubmit={(e) => onSubmitWithCheckboxes(e)}\r\n              checkboxErrorMessage={checkboxErrorMessage}\r\n              updateCheckboxErrorMessage={updateCheckboxErrorMessage}\r\n              isLoading={isLoading}\r\n              formErrorMessage={formErrorMessage}\r\n            />\r\n          )}\r\n\r\n          {/******** PATH FOR ILLEGAL DUMPING SERVICE REQUESTS ********/}\r\n          {serviceRequest?.serviceRequest === serviceRequestList.illegalDumping && (\r\n            <IllegalDumpingPath\r\n              key={5}\r\n              serviceRequest={serviceRequest}\r\n              updateServiceRequest={updateServiceRequest}\r\n              onSubmit={(e) => onSubmit(e)}\r\n              isLoading={isLoading}\r\n              formErrorMessage={formErrorMessage}\r\n            />\r\n          )}\r\n          {/******** PATH FOR PUBLIC LITTER BIN SERVICE REQUESTS ********/}\r\n          {serviceRequest?.serviceRequest === serviceRequestList.publicLitterBins && (\r\n            <PublicLitterBinsPath\r\n              key={6}\r\n              serviceRequest={serviceRequest}\r\n              updateServiceRequest={updateServiceRequest}\r\n              onSubmit={(e) => onSubmit(e)}\r\n              isLoading={isLoading}\r\n              formErrorMessage={formErrorMessage}\r\n            />\r\n          )}\r\n          {/******** PATH FOR LOOSE LITTER SERVICE REQUESTS ********/}\r\n          {serviceRequest?.serviceRequest === serviceRequestList.looseLitter && (\r\n            <LooseLitterPath\r\n              key={7}\r\n              serviceRequest={serviceRequest}\r\n              updateServiceRequest={updateServiceRequest}\r\n              onSubmit={(e) => onSubmit(e)}\r\n              isLoading={isLoading}\r\n              formErrorMessage={formErrorMessage}\r\n            />\r\n          )}\r\n        </AnimatePresence>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import DevLogin from \"./components/DevLogin/DevLogin\";\r\nimport Footer from \"./components/Footer/Footer\";\r\nimport Confirmation from \"./pages/Confirmation\";\r\nimport NotFound from \"./pages/NotFound\";\r\nimport Nav from \"./components/Nav/Nav\";\r\nimport Home from \"./pages/Home\";\r\nimport { Route, Switch, useLocation } from \"react-router\";\r\nimport { IServiceRequest } from \"./core/types/types\";\r\nimport { AnimatePresence } from \"framer-motion\";\r\nimport { useState } from \"react\";\r\nimport \"./styles/styles.css\";\r\n\r\nfunction App() {\r\n  // For dev login\r\n  const [isLoggedIn, updateLogIn] = useState(false);\r\n\r\n  // For router\r\n  const location = useLocation();\r\n\r\n  // Formatted date string for API consumption\r\n  const date = new Date().toLocaleDateString(\"en-NZ\", {\r\n    year: \"numeric\",\r\n    month: \"2-digit\",\r\n    day: \"2-digit\",\r\n  });\r\n\r\n  // Initial state for the main service request\r\n  const initialState: IServiceRequest = {\r\n    ticketNumber: 0,\r\n    serviceRequest: null,\r\n    service: null,\r\n    dateCreated: date,\r\n    comments: null,\r\n    addressComponents: {\r\n      formattedAddress: null,\r\n      streetNumber: null,\r\n      roadName: null,\r\n      suburbName: null,\r\n      cityName: null,\r\n      postCode: null,\r\n      regionName: null,\r\n      latitude: null,\r\n      longitude: null,\r\n    },\r\n    assessmentNumber: null,\r\n    wasteDetails: {\r\n      wasteDescription: null,\r\n      approxAmount: null,\r\n      duration: null,\r\n      whoDumped: null,\r\n      occurredPreviously: null,\r\n    },\r\n    publicLitterType: null,\r\n    looseLitterType: null,\r\n  };\r\n\r\n  // State for the main service request\r\n  const [serviceRequest, updateServiceRequest] = useState(initialState);\r\n\r\n  // State for page navigation management\r\n  const [hasCompletedForm, updateHasCompletedForm] = useState(false);\r\n\r\n  return !isLoggedIn ? (\r\n    <DevLogin updateLogin={updateLogIn} />\r\n  ) : (\r\n    <div className=\"overflow-x-hidden\">\r\n      <div className=\"min-h-screen bg-tcc-background bg-tcc-blue bg-cover bg-center bg-fixed bg-no-repeat w-full flex flex-col items-center justify-start relative\">\r\n        <Nav />\r\n        <div className=\"bg-tcc-grey h-10 w-full\"></div>\r\n        <AnimatePresence exitBeforeEnter>\r\n          <Switch location={location} key={location.key}>\r\n            <Route exact path=\"/\">\r\n              <Home\r\n                serviceRequest={serviceRequest}\r\n                updateServiceRequest={updateServiceRequest}\r\n                initialState={initialState}\r\n                hasCompletedForm={hasCompletedForm}\r\n                updateHasCompletedForm={updateHasCompletedForm}\r\n              />\r\n            </Route>\r\n            <Route exact path=\"/confirmation\" key=\"confirmation-page\">\r\n              <Confirmation hasCompletedForm={hasCompletedForm} serviceRequest={serviceRequest} />\r\n            </Route>\r\n            <NotFound />\r\n          </Switch>\r\n        </AnimatePresence>\r\n        <div className=\"bg-tcc-blue h-10 w-full self-stretch absolute bottom-0\">\r\n          <div className=\"bg-tcc-blue transform -translate-x-1/2 rotate-45 h-10 w-10 absolute left-1/2 -bottom-1/2\"></div>\r\n        </div>\r\n      </div>\r\n      <Footer />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport \"./index.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}